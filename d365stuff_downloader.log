2025-05-26 11:29:31,853 - INFO - Starting download process...
2025-05-26 11:29:31,853 - INFO - Processing sitemap: https://www.d365stuff.co/sitemap-posts.xml
2025-05-26 11:29:31,883 - INFO - Created directory: html_pages
2025-05-26 11:29:31,883 - INFO - Processing: https://www.d365stuff.co/d365-custom-web-service-with-pagination/
2025-05-26 11:29:31,884 - INFO - Downloading page: https://www.d365stuff.co/d365-custom-web-service-with-pagination/
2025-05-26 11:29:31,908 - INFO - Saved HTML content to: html_pages/d365-custom-web-service-with-pagination.html
2025-05-26 11:29:31,976 - ERROR - Error processing sitemap: [Errno 36] File name too long: '<article class="post-full post tag-d365 tag-data-contracts tag-integrations tag-logic-apps tag-serialization tag-snippet tag-web-services tag-x no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2023-02-10">10 February 2023</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">D365 Custom JSON Web Service with Pagination</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>I got a request for a RESTful API with Pagination; here is my proof of concept:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="752" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image.png 600w, https://www.d365stuff.co/content/images/size/w1000/2023/02/image.png 1000w, https://www.d365stuff.co/content/images/size/w1600/2023/02/image.png 1600w, https://www.d365stuff.co/content/images/size/w2400/2023/02/image.png 2400w" width="2000"/></figure><p>There are a few keys to this:</p><ul><li>A queryRun object must be used (vs SELECT statement) in order to use enablePositionPaging</li><li>The query MUST have a sort on it</li></ul><p>Without using queryRun, you would have to do some hacky stuff with x++ SQL that would not be performant. \xa0And that still may not work.</p><p>Without a sort, you will get the error "An exception occured when invoking the operation - Paging is not supported for queries that do not have an ordering property."</p><pre><code class="language-x++">class testPagingCustomers\n{\n    public str getCustomers(int64 _startPosition, int64 _pageSize, boolean _includeTotalCount)\n    {\n        str json;\n        Query query;\n        QueryRun queryRun;\n\n        query = new Query();\n        QueryBuildDataSource qbd = query.addDataSource(tableNum(CustTable));\n        qbd.addSortField(fieldNum(CustTable, AccountNum), SortOrder::Ascending);\n\n        // Set up paging\n        queryRun = new QueryRun(query);\n        queryRun.enablePositionPaging(true);\n        queryRun.addPageRange(_startPosition, _pageSize);\n        \n        List customers = new List(Types::Class);\n\n        while (queryRun.next())\n        {\n            CustTable custTable = queryRun.get(tableNum(CustTable));\n            testCustomersLinesContract testCustomersLinesContract = new testCustomersLinesContract();\n\n            testCustomersLinesContract.parmAccountNum(CustTable.AccountNum);\n            testCustomersLinesContract.parmCustGroup(custTable.CustGroup);\n            testCustomersLinesContract.parmCustName(custTable.name());\n\n            customers.addEnd(testCustomersLinesContract);\n        }\n\n        testCustomersContract testCustomersContract = new testCustomersContract();\n        testCustomersContract.parmCustomers(customers);\n\n        if (_includeTotalCount)\n        {\n            testCustomersContract.parmTotalCount(SysQuery::countLoops(queryRun));\n        }\n\n        json =  FormJsonSerializer::serializeClass(testCustomersContract);\n\n        return json;\n\n    }\n\n}</code></pre><p>To test or implement the class, assign it to a service and service group in D365. \xa0Once deployed, you should be able to navigate in a browser to verify:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="436" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-1.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-1.png 600w, https://www.d365stuff.co/content/images/2023/02/image-1.png 735w" width="735"/></figure><p>Then use the verified URI to make a POST request:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="682" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-2.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-2.png 600w, https://www.d365stuff.co/content/images/2023/02/image-2.png 919w" width="919"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/d365-custom-web-service-with-pagination/";  \n\t\t\t\t\tthis.page.identifier = "ghost-63e6c25cbcf09a003da95708"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 145, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
OSError: [Errno 36] File name too long: '<article class="post-full post tag-d365 tag-data-contracts tag-integrations tag-logic-apps tag-serialization tag-snippet tag-web-services tag-x no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2023-02-10">10 February 2023</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">D365 Custom JSON Web Service with Pagination</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>I got a request for a RESTful API with Pagination; here is my proof of concept:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="752" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image.png 600w, https://www.d365stuff.co/content/images/size/w1000/2023/02/image.png 1000w, https://www.d365stuff.co/content/images/size/w1600/2023/02/image.png 1600w, https://www.d365stuff.co/content/images/size/w2400/2023/02/image.png 2400w" width="2000"/></figure><p>There are a few keys to this:</p><ul><li>A queryRun object must be used (vs SELECT statement) in order to use enablePositionPaging</li><li>The query MUST have a sort on it</li></ul><p>Without using queryRun, you would have to do some hacky stuff with x++ SQL that would not be performant. \xa0And that still may not work.</p><p>Without a sort, you will get the error "An exception occured when invoking the operation - Paging is not supported for queries that do not have an ordering property."</p><pre><code class="language-x++">class testPagingCustomers\n{\n    public str getCustomers(int64 _startPosition, int64 _pageSize, boolean _includeTotalCount)\n    {\n        str json;\n        Query query;\n        QueryRun queryRun;\n\n        query = new Query();\n        QueryBuildDataSource qbd = query.addDataSource(tableNum(CustTable));\n        qbd.addSortField(fieldNum(CustTable, AccountNum), SortOrder::Ascending);\n\n        // Set up paging\n        queryRun = new QueryRun(query);\n        queryRun.enablePositionPaging(true);\n        queryRun.addPageRange(_startPosition, _pageSize);\n        \n        List customers = new List(Types::Class);\n\n        while (queryRun.next())\n        {\n            CustTable custTable = queryRun.get(tableNum(CustTable));\n            testCustomersLinesContract testCustomersLinesContract = new testCustomersLinesContract();\n\n            testCustomersLinesContract.parmAccountNum(CustTable.AccountNum);\n            testCustomersLinesContract.parmCustGroup(custTable.CustGroup);\n            testCustomersLinesContract.parmCustName(custTable.name());\n\n            customers.addEnd(testCustomersLinesContract);\n        }\n\n        testCustomersContract testCustomersContract = new testCustomersContract();\n        testCustomersContract.parmCustomers(customers);\n\n        if (_includeTotalCount)\n        {\n            testCustomersContract.parmTotalCount(SysQuery::countLoops(queryRun));\n        }\n\n        json =  FormJsonSerializer::serializeClass(testCustomersContract);\n\n        return json;\n\n    }\n\n}</code></pre><p>To test or implement the class, assign it to a service and service group in D365. \xa0Once deployed, you should be able to navigate in a browser to verify:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="436" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-1.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-1.png 600w, https://www.d365stuff.co/content/images/2023/02/image-1.png 735w" width="735"/></figure><p>Then use the verified URI to make a POST request:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="682" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-2.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-2.png 600w, https://www.d365stuff.co/content/images/2023/02/image-2.png 919w" width="919"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/d365-custom-web-service-with-pagination/";  \n\t\t\t\t\tthis.page.identifier = "ghost-63e6c25cbcf09a003da95708"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:29:31,977 - INFO - Download process completed!
2025-05-26 11:31:31,773 - INFO - Starting download process...
2025-05-26 11:31:31,773 - INFO - Processing sitemap: https://www.d365stuff.co/sitemap-posts.xml
2025-05-26 11:31:31,802 - INFO - Processing: https://www.d365stuff.co/d365-custom-web-service-with-pagination/
2025-05-26 11:31:31,802 - INFO - HTML file already exists for https://www.d365stuff.co/d365-custom-web-service-with-pagination/, reading from disk
2025-05-26 11:31:31,870 - ERROR - Error processing sitemap: [Errno 36] File name too long: '<article class="post-full post tag-d365 tag-data-contracts tag-integrations tag-logic-apps tag-serialization tag-snippet tag-web-services tag-x no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2023-02-10">10 February 2023</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">D365 Custom JSON Web Service with Pagination</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>I got a request for a RESTful API with Pagination; here is my proof of concept:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="752" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image.png 600w, https://www.d365stuff.co/content/images/size/w1000/2023/02/image.png 1000w, https://www.d365stuff.co/content/images/size/w1600/2023/02/image.png 1600w, https://www.d365stuff.co/content/images/size/w2400/2023/02/image.png 2400w" width="2000"/></figure><p>There are a few keys to this:</p><ul><li>A queryRun object must be used (vs SELECT statement) in order to use enablePositionPaging</li><li>The query MUST have a sort on it</li></ul><p>Without using queryRun, you would have to do some hacky stuff with x++ SQL that would not be performant. \xa0And that still may not work.</p><p>Without a sort, you will get the error "An exception occured when invoking the operation - Paging is not supported for queries that do not have an ordering property."</p><pre><code class="language-x++">class testPagingCustomers\n{\n    public str getCustomers(int64 _startPosition, int64 _pageSize, boolean _includeTotalCount)\n    {\n        str json;\n        Query query;\n        QueryRun queryRun;\n\n        query = new Query();\n        QueryBuildDataSource qbd = query.addDataSource(tableNum(CustTable));\n        qbd.addSortField(fieldNum(CustTable, AccountNum), SortOrder::Ascending);\n\n        // Set up paging\n        queryRun = new QueryRun(query);\n        queryRun.enablePositionPaging(true);\n        queryRun.addPageRange(_startPosition, _pageSize);\n        \n        List customers = new List(Types::Class);\n\n        while (queryRun.next())\n        {\n            CustTable custTable = queryRun.get(tableNum(CustTable));\n            testCustomersLinesContract testCustomersLinesContract = new testCustomersLinesContract();\n\n            testCustomersLinesContract.parmAccountNum(CustTable.AccountNum);\n            testCustomersLinesContract.parmCustGroup(custTable.CustGroup);\n            testCustomersLinesContract.parmCustName(custTable.name());\n\n            customers.addEnd(testCustomersLinesContract);\n        }\n\n        testCustomersContract testCustomersContract = new testCustomersContract();\n        testCustomersContract.parmCustomers(customers);\n\n        if (_includeTotalCount)\n        {\n            testCustomersContract.parmTotalCount(SysQuery::countLoops(queryRun));\n        }\n\n        json =  FormJsonSerializer::serializeClass(testCustomersContract);\n\n        return json;\n\n    }\n\n}</code></pre><p>To test or implement the class, assign it to a service and service group in D365. \xa0Once deployed, you should be able to navigate in a browser to verify:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="436" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-1.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-1.png 600w, https://www.d365stuff.co/content/images/2023/02/image-1.png 735w" width="735"/></figure><p>Then use the verified URI to make a POST request:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="682" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-2.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-2.png 600w, https://www.d365stuff.co/content/images/2023/02/image-2.png 919w" width="919"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/d365-custom-web-service-with-pagination/";  \n\t\t\t\t\tthis.page.identifier = "ghost-63e6c25cbcf09a003da95708"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 145, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
OSError: [Errno 36] File name too long: '<article class="post-full post tag-d365 tag-data-contracts tag-integrations tag-logic-apps tag-serialization tag-snippet tag-web-services tag-x no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2023-02-10">10 February 2023</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">D365 Custom JSON Web Service with Pagination</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>I got a request for a RESTful API with Pagination; here is my proof of concept:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="752" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image.png 600w, https://www.d365stuff.co/content/images/size/w1000/2023/02/image.png 1000w, https://www.d365stuff.co/content/images/size/w1600/2023/02/image.png 1600w, https://www.d365stuff.co/content/images/size/w2400/2023/02/image.png 2400w" width="2000"/></figure><p>There are a few keys to this:</p><ul><li>A queryRun object must be used (vs SELECT statement) in order to use enablePositionPaging</li><li>The query MUST have a sort on it</li></ul><p>Without using queryRun, you would have to do some hacky stuff with x++ SQL that would not be performant. \xa0And that still may not work.</p><p>Without a sort, you will get the error "An exception occured when invoking the operation - Paging is not supported for queries that do not have an ordering property."</p><pre><code class="language-x++">class testPagingCustomers\n{\n    public str getCustomers(int64 _startPosition, int64 _pageSize, boolean _includeTotalCount)\n    {\n        str json;\n        Query query;\n        QueryRun queryRun;\n\n        query = new Query();\n        QueryBuildDataSource qbd = query.addDataSource(tableNum(CustTable));\n        qbd.addSortField(fieldNum(CustTable, AccountNum), SortOrder::Ascending);\n\n        // Set up paging\n        queryRun = new QueryRun(query);\n        queryRun.enablePositionPaging(true);\n        queryRun.addPageRange(_startPosition, _pageSize);\n        \n        List customers = new List(Types::Class);\n\n        while (queryRun.next())\n        {\n            CustTable custTable = queryRun.get(tableNum(CustTable));\n            testCustomersLinesContract testCustomersLinesContract = new testCustomersLinesContract();\n\n            testCustomersLinesContract.parmAccountNum(CustTable.AccountNum);\n            testCustomersLinesContract.parmCustGroup(custTable.CustGroup);\n            testCustomersLinesContract.parmCustName(custTable.name());\n\n            customers.addEnd(testCustomersLinesContract);\n        }\n\n        testCustomersContract testCustomersContract = new testCustomersContract();\n        testCustomersContract.parmCustomers(customers);\n\n        if (_includeTotalCount)\n        {\n            testCustomersContract.parmTotalCount(SysQuery::countLoops(queryRun));\n        }\n\n        json =  FormJsonSerializer::serializeClass(testCustomersContract);\n\n        return json;\n\n    }\n\n}</code></pre><p>To test or implement the class, assign it to a service and service group in D365. \xa0Once deployed, you should be able to navigate in a browser to verify:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="436" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-1.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-1.png 600w, https://www.d365stuff.co/content/images/2023/02/image-1.png 735w" width="735"/></figure><p>Then use the verified URI to make a POST request:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="682" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-2.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-2.png 600w, https://www.d365stuff.co/content/images/2023/02/image-2.png 919w" width="919"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/d365-custom-web-service-with-pagination/";  \n\t\t\t\t\tthis.page.identifier = "ghost-63e6c25cbcf09a003da95708"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:31:31,872 - INFO - Download process completed!
2025-05-26 11:31:56,599 - INFO - Starting download process...
2025-05-26 11:31:56,599 - INFO - Processing sitemap: https://www.d365stuff.co/sitemap-posts.xml
2025-05-26 11:31:56,635 - INFO - Processing: https://www.d365stuff.co/d365-custom-web-service-with-pagination/
2025-05-26 11:31:56,635 - INFO - HTML file already exists for https://www.d365stuff.co/d365-custom-web-service-with-pagination/, reading from disk
2025-05-26 11:31:56,639 - INFO - Processing: https://www.d365stuff.co/copy-write-d365-document-management-handling-file-to-wherever-via-logic-apps/
2025-05-26 11:31:56,639 - INFO - Downloading page: https://www.d365stuff.co/copy-write-d365-document-management-handling-file-to-wherever-via-logic-apps/
2025-05-26 11:31:56,669 - INFO - Saved HTML content to: html_pages/copy-write-d365-document-management-handling-file-.html
2025-05-26 11:31:56,672 - INFO - Processing: https://www.d365stuff.co/reading-parsing-text-files-from-document-handling/
2025-05-26 11:31:56,672 - INFO - Downloading page: https://www.d365stuff.co/reading-parsing-text-files-from-document-handling/
2025-05-26 11:31:56,698 - INFO - Saved HTML content to: html_pages/reading-parsing-text-files-from-document-handling.html
2025-05-26 11:31:56,702 - INFO - Processing: https://www.d365stuff.co/reverse-record-set-lookup-attribute-match/
2025-05-26 11:31:56,702 - INFO - Downloading page: https://www.d365stuff.co/reverse-record-set-lookup-attribute-match/
2025-05-26 11:31:56,730 - INFO - Saved HTML content to: html_pages/reverse-record-set-lookup-attribute-match.html
2025-05-26 11:31:56,734 - INFO - Processing: https://www.d365stuff.co/x-aadauthentication-to-get-tenant-id/
2025-05-26 11:31:56,734 - INFO - Downloading page: https://www.d365stuff.co/x-aadauthentication-to-get-tenant-id/
2025-05-26 11:31:56,762 - INFO - Saved HTML content to: html_pages/x-aadauthentication-to-get-tenant-id.html
2025-05-26 11:31:56,765 - INFO - Processing: https://www.d365stuff.co/dynamicscon-march-2021-companion-logic-apps-d365/
2025-05-26 11:31:56,765 - INFO - Downloading page: https://www.d365stuff.co/dynamicscon-march-2021-companion-logic-apps-d365/
2025-05-26 11:31:56,793 - INFO - Saved HTML content to: html_pages/dynamicscon-march-2021-companion-logic-apps-d365.html
2025-05-26 11:31:56,798 - INFO - Processing: https://www.d365stuff.co/does-not-implement-the-delegate-convertpurchtablefieldtovendinvoicedelegate/
2025-05-26 11:31:56,798 - INFO - Downloading page: https://www.d365stuff.co/does-not-implement-the-delegate-convertpurchtablefieldtovendinvoicedelegate/
2025-05-26 11:31:56,831 - INFO - Saved HTML content to: html_pages/does-not-implement-the-delegate-convertpurchtablef.html
2025-05-26 11:31:56,834 - INFO - Processing: https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/
2025-05-26 11:31:56,835 - INFO - Downloading page: https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/
2025-05-26 11:31:56,864 - INFO - Saved HTML content to: html_pages/get-and-post-stuff-via-logic-apps.html
2025-05-26 11:31:56,868 - INFO - Processing: https://www.d365stuff.co/run-multiple-instances-of-teams/
2025-05-26 11:31:56,868 - INFO - Downloading page: https://www.d365stuff.co/run-multiple-instances-of-teams/
2025-05-26 11:31:56,895 - INFO - Saved HTML content to: html_pages/run-multiple-instances-of-teams.html
2025-05-26 11:31:56,898 - INFO - Processing: https://www.d365stuff.co/d365-enum-values-sql/
2025-05-26 11:31:56,898 - INFO - Downloading page: https://www.d365stuff.co/d365-enum-values-sql/
2025-05-26 11:31:56,925 - INFO - Saved HTML content to: html_pages/d365-enum-values-sql.html
2025-05-26 11:31:56,928 - INFO - Processing: https://www.d365stuff.co/introtodomrules/
2025-05-26 11:31:56,928 - INFO - Downloading page: https://www.d365stuff.co/introtodomrules/
2025-05-26 11:31:56,961 - INFO - Saved HTML content to: html_pages/introtodomrules.html
2025-05-26 11:31:56,964 - INFO - Processing: https://www.d365stuff.co/order-lines-cannot-be-deleted-while-dependent-stores/
2025-05-26 11:31:56,964 - INFO - Downloading page: https://www.d365stuff.co/order-lines-cannot-be-deleted-while-dependent-stores/
2025-05-26 11:31:56,996 - INFO - Saved HTML content to: html_pages/order-lines-cannot-be-deleted-while-dependent-stor.html
2025-05-26 11:31:57,001 - INFO - Processing: https://www.d365stuff.co/trace-batch-jobs-and-more-via-cmd-logman/
2025-05-26 11:31:57,001 - INFO - Downloading page: https://www.d365stuff.co/trace-batch-jobs-and-more-via-cmd-logman/
2025-05-26 11:31:57,028 - INFO - Saved HTML content to: html_pages/trace-batch-jobs-and-more-via-cmd-logman.html
2025-05-26 11:31:57,031 - INFO - Processing: https://www.d365stuff.co/systemdatetime/
2025-05-26 11:31:57,032 - INFO - Downloading page: https://www.d365stuff.co/systemdatetime/
2025-05-26 11:31:57,058 - INFO - Saved HTML content to: html_pages/systemdatetime.html
2025-05-26 11:31:57,061 - INFO - Processing: https://www.d365stuff.co/call-center-payments-part-2-credit-cards/
2025-05-26 11:31:57,061 - INFO - Downloading page: https://www.d365stuff.co/call-center-payments-part-2-credit-cards/
2025-05-26 11:31:57,088 - INFO - Saved HTML content to: html_pages/call-center-payments-part-2-credit-cards.html
2025-05-26 11:31:57,091 - INFO - Processing: https://www.d365stuff.co/create-call-center-payment-cash/
2025-05-26 11:31:57,091 - INFO - Downloading page: https://www.d365stuff.co/create-call-center-payment-cash/
2025-05-26 11:31:57,126 - INFO - Saved HTML content to: html_pages/create-call-center-payment-cash.html
2025-05-26 11:31:57,129 - INFO - Processing: https://www.d365stuff.co/overridegiftcardbalance/
2025-05-26 11:31:57,129 - INFO - Downloading page: https://www.d365stuff.co/overridegiftcardbalance/
2025-05-26 11:31:57,163 - INFO - Saved HTML content to: html_pages/overridegiftcardbalance.html
2025-05-26 11:31:57,167 - INFO - Processing: https://www.d365stuff.co/retailattributehelper/
2025-05-26 11:31:57,167 - INFO - Downloading page: https://www.d365stuff.co/retailattributehelper/
2025-05-26 11:31:57,192 - INFO - Saved HTML content to: html_pages/retailattributehelper.html
2025-05-26 11:31:57,195 - INFO - Processing: https://www.d365stuff.co/call-x-web-service-with-browser-snippet/
2025-05-26 11:31:57,195 - INFO - Downloading page: https://www.d365stuff.co/call-x-web-service-with-browser-snippet/
2025-05-26 11:31:57,222 - INFO - Saved HTML content to: html_pages/call-x-web-service-with-browser-snippet.html
2025-05-26 11:31:57,226 - INFO - Processing: https://www.d365stuff.co/the-sales-order-cannot-be-deleted-because-related-not-posted-transactions-exist/
2025-05-26 11:31:57,226 - INFO - Downloading page: https://www.d365stuff.co/the-sales-order-cannot-be-deleted-because-related-not-posted-transactions-exist/
2025-05-26 11:31:57,261 - INFO - Saved HTML content to: html_pages/the-sales-order-cannot-be-deleted-because-related-.html
2025-05-26 11:31:57,264 - INFO - Processing: https://www.d365stuff.co/json-odata/
2025-05-26 11:31:57,264 - INFO - Downloading page: https://www.d365stuff.co/json-odata/
2025-05-26 11:31:57,305 - INFO - Saved HTML content to: html_pages/json-odata.html
2025-05-26 11:31:57,308 - INFO - Processing: https://www.d365stuff.co/send-noninteractive-e-mail-x-d365/
2025-05-26 11:31:57,308 - INFO - Downloading page: https://www.d365stuff.co/send-noninteractive-e-mail-x-d365/
2025-05-26 11:31:57,339 - INFO - Saved HTML content to: html_pages/send-noninteractive-e-mail-x-d365.html
2025-05-26 11:31:57,342 - INFO - Processing: https://www.d365stuff.co/mailbox-does-not-exist/
2025-05-26 11:31:57,342 - INFO - Downloading page: https://www.d365stuff.co/mailbox-does-not-exist/
2025-05-26 11:31:57,374 - INFO - Saved HTML content to: html_pages/mailbox-does-not-exist.html
2025-05-26 11:31:57,377 - INFO - Processing: https://www.d365stuff.co/entity-cannot-be-deleted-while-dependent-entities-for-a-processing-group-exist-delete-dependent-entities-for-a-processing-group-and-try-again/
2025-05-26 11:31:57,377 - INFO - Downloading page: https://www.d365stuff.co/entity-cannot-be-deleted-while-dependent-entities-for-a-processing-group-exist-delete-dependent-entities-for-a-processing-group-and-try-again/
2025-05-26 11:31:57,402 - INFO - Saved HTML content to: html_pages/entity-cannot-be-deleted-while-dependent-entities-.html
2025-05-26 11:31:57,405 - INFO - Processing: https://www.d365stuff.co/drop-table-d365-x-sp_removetable/
2025-05-26 11:31:57,405 - INFO - Downloading page: https://www.d365stuff.co/drop-table-d365-x-sp_removetable/
2025-05-26 11:31:57,437 - INFO - Saved HTML content to: html_pages/drop-table-d365-x-sp_removetable.html
2025-05-26 11:31:57,440 - INFO - Processing: https://www.d365stuff.co/import-export-migrate-receipt-formats/
2025-05-26 11:31:57,441 - INFO - Downloading page: https://www.d365stuff.co/import-export-migrate-receipt-formats/
2025-05-26 11:31:57,468 - INFO - Saved HTML content to: html_pages/import-export-migrate-receipt-formats.html
2025-05-26 11:31:57,471 - INFO - Processing: https://www.d365stuff.co/ledgerdimensionfacade/
2025-05-26 11:31:57,471 - INFO - Downloading page: https://www.d365stuff.co/ledgerdimensionfacade/
2025-05-26 11:31:57,501 - INFO - Saved HTML content to: html_pages/ledgerdimensionfacade.html
2025-05-26 11:31:57,504 - INFO - Processing: https://www.d365stuff.co/customdataentityopeninexcel/
2025-05-26 11:31:57,504 - INFO - Downloading page: https://www.d365stuff.co/customdataentityopeninexcel/
2025-05-26 11:31:57,846 - INFO - Saved HTML content to: html_pages/customdataentityopeninexcel.html
2025-05-26 11:31:57,849 - INFO - Processing: https://www.d365stuff.co/best-stuff/
2025-05-26 11:31:57,849 - INFO - Downloading page: https://www.d365stuff.co/best-stuff/
2025-05-26 11:31:57,874 - INFO - Saved HTML content to: html_pages/best-stuff.html
2025-05-26 11:31:57,879 - INFO - Processing: https://www.d365stuff.co/dmfutil-dmfdownloaddatapackage/
2025-05-26 11:31:57,879 - INFO - Downloading page: https://www.d365stuff.co/dmfutil-dmfdownloaddatapackage/
2025-05-26 11:31:57,911 - INFO - Saved HTML content to: html_pages/dmfutil-dmfdownloaddatapackage.html
2025-05-26 11:31:57,915 - INFO - Processing: https://www.d365stuff.co/x-in-clause/
2025-05-26 11:31:57,915 - INFO - Downloading page: https://www.d365stuff.co/x-in-clause/
2025-05-26 11:31:57,946 - INFO - Saved HTML content to: html_pages/x-in-clause.html
2025-05-26 11:31:57,949 - INFO - Processing: https://www.d365stuff.co/dmf-jumpref/
2025-05-26 11:31:57,949 - INFO - Downloading page: https://www.d365stuff.co/dmf-jumpref/
2025-05-26 11:31:57,978 - INFO - Saved HTML content to: html_pages/dmf-jumpref.html
2025-05-26 11:31:57,982 - INFO - Processing: https://www.d365stuff.co/update-defaultdimension/
2025-05-26 11:31:57,982 - INFO - Downloading page: https://www.d365stuff.co/update-defaultdimension/
2025-05-26 11:31:58,012 - INFO - Saved HTML content to: html_pages/update-defaultdimension.html
2025-05-26 11:31:58,016 - INFO - Processing: https://www.d365stuff.co/update_recordset-but-cross-company/
2025-05-26 11:31:58,016 - INFO - Downloading page: https://www.d365stuff.co/update_recordset-but-cross-company/
2025-05-26 11:31:58,042 - INFO - Saved HTML content to: html_pages/update_recordset-but-cross-company.html
2025-05-26 11:31:58,045 - INFO - Processing: https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/
2025-05-26 11:31:58,045 - INFO - Downloading page: https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/
2025-05-26 11:31:58,077 - INFO - Saved HTML content to: html_pages/dmfdatapopulation-download-recurring-files.html
2025-05-26 11:31:58,080 - INFO - Processing: https://www.d365stuff.co/formjsonserializer/
2025-05-26 11:31:58,080 - INFO - Downloading page: https://www.d365stuff.co/formjsonserializer/
2025-05-26 11:31:58,108 - INFO - Saved HTML content to: html_pages/formjsonserializer.html
2025-05-26 11:31:58,111 - INFO - Processing: https://www.d365stuff.co/d365-address-books/
2025-05-26 11:31:58,111 - INFO - Downloading page: https://www.d365stuff.co/d365-address-books/
2025-05-26 11:31:58,148 - INFO - Saved HTML content to: html_pages/d365-address-books.html
2025-05-26 11:31:58,152 - INFO - Processing: https://www.d365stuff.co/one/
2025-05-26 11:31:58,152 - INFO - Downloading page: https://www.d365stuff.co/one/
2025-05-26 11:31:58,183 - INFO - Saved HTML content to: html_pages/one.html
2025-05-26 11:31:58,186 - INFO - Download process completed!
2025-05-26 11:35:00,398 - INFO - Starting download process...
2025-05-26 11:35:00,398 - INFO - Processing sitemap: https://www.d365stuff.co/sitemap-posts.xml
2025-05-26 11:35:00,428 - INFO - Processing: https://www.d365stuff.co/d365-custom-web-service-with-pagination/
2025-05-26 11:35:00,428 - INFO - HTML file already exists for https://www.d365stuff.co/d365-custom-web-service-with-pagination/, reading from disk
2025-05-26 11:35:00,433 - INFO - Saving to: d365-custom-web-service-with-pagination
2025-05-26 11:35:00,433 - INFO - Saved to: posts/d365-custom-web-service-with-pagination.md
2025-05-26 11:35:00,433 - INFO - Processing: https://www.d365stuff.co/copy-write-d365-document-management-handling-file-to-wherever-via-logic-apps/
2025-05-26 11:35:00,433 - INFO - HTML file already exists for https://www.d365stuff.co/copy-write-d365-document-management-handling-file-to-wherever-via-logic-apps/, reading from disk
2025-05-26 11:35:00,438 - INFO - Saving to: copy-write-d365-document-management-handling-file-
2025-05-26 11:35:00,438 - INFO - Saved to: posts/copy-write-d365-document-management-handling-file-.md
2025-05-26 11:35:00,438 - INFO - Processing: https://www.d365stuff.co/reading-parsing-text-files-from-document-handling/
2025-05-26 11:35:00,438 - INFO - HTML file already exists for https://www.d365stuff.co/reading-parsing-text-files-from-document-handling/, reading from disk
2025-05-26 11:35:00,442 - INFO - Saving to: reading-parsing-text-files-from-document-handling
2025-05-26 11:35:00,443 - INFO - Saved to: posts/reading-parsing-text-files-from-document-handling.md
2025-05-26 11:35:00,443 - INFO - Processing: https://www.d365stuff.co/reverse-record-set-lookup-attribute-match/
2025-05-26 11:35:00,443 - INFO - HTML file already exists for https://www.d365stuff.co/reverse-record-set-lookup-attribute-match/, reading from disk
2025-05-26 11:35:00,448 - INFO - Saving to: reverse-record-set-lookup-attribute-match
2025-05-26 11:35:00,448 - INFO - Saved to: posts/reverse-record-set-lookup-attribute-match.md
2025-05-26 11:35:00,448 - INFO - Processing: https://www.d365stuff.co/x-aadauthentication-to-get-tenant-id/
2025-05-26 11:35:00,448 - INFO - HTML file already exists for https://www.d365stuff.co/x-aadauthentication-to-get-tenant-id/, reading from disk
2025-05-26 11:35:00,452 - INFO - Saving to: x-aadauthentication-to-get-tenant-id
2025-05-26 11:35:00,452 - INFO - Saved to: posts/x-aadauthentication-to-get-tenant-id.md
2025-05-26 11:35:00,452 - INFO - Processing: https://www.d365stuff.co/dynamicscon-march-2021-companion-logic-apps-d365/
2025-05-26 11:35:00,452 - INFO - HTML file already exists for https://www.d365stuff.co/dynamicscon-march-2021-companion-logic-apps-d365/, reading from disk
2025-05-26 11:35:00,461 - INFO - Saving to: dynamicscon-march-2021-companion-logic-apps-d365
2025-05-26 11:35:00,461 - INFO - Saved to: posts/dynamicscon-march-2021-companion-logic-apps-d365.md
2025-05-26 11:35:00,461 - INFO - Processing: https://www.d365stuff.co/does-not-implement-the-delegate-convertpurchtablefieldtovendinvoicedelegate/
2025-05-26 11:35:00,462 - INFO - HTML file already exists for https://www.d365stuff.co/does-not-implement-the-delegate-convertpurchtablefieldtovendinvoicedelegate/, reading from disk
2025-05-26 11:35:00,465 - INFO - Saving to: does-not-implement-the-delegate-convertpurchtablef
2025-05-26 11:35:00,466 - INFO - Saved to: posts/does-not-implement-the-delegate-convertpurchtablef.md
2025-05-26 11:35:00,466 - INFO - Processing: https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/
2025-05-26 11:35:00,466 - INFO - HTML file already exists for https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/, reading from disk
2025-05-26 11:35:00,471 - INFO - Saving to: get-and-post-stuff-via-logic-apps
2025-05-26 11:35:00,471 - INFO - Saved to: posts/get-and-post-stuff-via-logic-apps.md
2025-05-26 11:35:00,471 - INFO - Processing: https://www.d365stuff.co/run-multiple-instances-of-teams/
2025-05-26 11:35:00,471 - INFO - HTML file already exists for https://www.d365stuff.co/run-multiple-instances-of-teams/, reading from disk
2025-05-26 11:35:00,475 - INFO - Saving to: run-multiple-instances-of-teams
2025-05-26 11:35:00,475 - INFO - Saved to: posts/run-multiple-instances-of-teams.md
2025-05-26 11:35:00,475 - INFO - Processing: https://www.d365stuff.co/d365-enum-values-sql/
2025-05-26 11:35:00,475 - INFO - HTML file already exists for https://www.d365stuff.co/d365-enum-values-sql/, reading from disk
2025-05-26 11:35:00,480 - INFO - Saving to: d365-enum-values-sql
2025-05-26 11:35:00,480 - INFO - Saved to: posts/d365-enum-values-sql.md
2025-05-26 11:35:00,481 - INFO - Processing: https://www.d365stuff.co/introtodomrules/
2025-05-26 11:35:00,481 - INFO - HTML file already exists for https://www.d365stuff.co/introtodomrules/, reading from disk
2025-05-26 11:35:00,485 - INFO - Saving to: introtodomrules
2025-05-26 11:35:00,486 - INFO - Saved to: posts/introtodomrules.md
2025-05-26 11:35:00,486 - INFO - Processing: https://www.d365stuff.co/order-lines-cannot-be-deleted-while-dependent-stores/
2025-05-26 11:35:00,486 - INFO - HTML file already exists for https://www.d365stuff.co/order-lines-cannot-be-deleted-while-dependent-stores/, reading from disk
2025-05-26 11:35:00,491 - INFO - Saving to: order-lines-cannot-be-deleted-while-dependent-stor
2025-05-26 11:35:00,491 - INFO - Saved to: posts/order-lines-cannot-be-deleted-while-dependent-stor.md
2025-05-26 11:35:00,491 - INFO - Processing: https://www.d365stuff.co/trace-batch-jobs-and-more-via-cmd-logman/
2025-05-26 11:35:00,491 - INFO - HTML file already exists for https://www.d365stuff.co/trace-batch-jobs-and-more-via-cmd-logman/, reading from disk
2025-05-26 11:35:00,496 - INFO - Saving to: trace-batch-jobs-and-more-via-cmd-logman
2025-05-26 11:35:00,496 - INFO - Saved to: posts/trace-batch-jobs-and-more-via-cmd-logman.md
2025-05-26 11:35:00,496 - INFO - Processing: https://www.d365stuff.co/systemdatetime/
2025-05-26 11:35:00,496 - INFO - HTML file already exists for https://www.d365stuff.co/systemdatetime/, reading from disk
2025-05-26 11:35:00,500 - INFO - Saving to: systemdatetime
2025-05-26 11:35:00,500 - INFO - Saved to: posts/systemdatetime.md
2025-05-26 11:35:00,500 - INFO - Processing: https://www.d365stuff.co/call-center-payments-part-2-credit-cards/
2025-05-26 11:35:00,500 - INFO - HTML file already exists for https://www.d365stuff.co/call-center-payments-part-2-credit-cards/, reading from disk
2025-05-26 11:35:00,505 - INFO - Saving to: call-center-payments-part-2-credit-cards
2025-05-26 11:35:00,505 - INFO - Saved to: posts/call-center-payments-part-2-credit-cards.md
2025-05-26 11:35:00,505 - INFO - Processing: https://www.d365stuff.co/create-call-center-payment-cash/
2025-05-26 11:35:00,505 - INFO - HTML file already exists for https://www.d365stuff.co/create-call-center-payment-cash/, reading from disk
2025-05-26 11:35:00,509 - INFO - Saving to: create-call-center-payment-cash
2025-05-26 11:35:00,510 - INFO - Saved to: posts/create-call-center-payment-cash.md
2025-05-26 11:35:00,510 - INFO - Processing: https://www.d365stuff.co/overridegiftcardbalance/
2025-05-26 11:35:00,510 - INFO - HTML file already exists for https://www.d365stuff.co/overridegiftcardbalance/, reading from disk
2025-05-26 11:35:00,513 - INFO - Saving to: overridegiftcardbalance
2025-05-26 11:35:00,513 - INFO - Saved to: posts/overridegiftcardbalance.md
2025-05-26 11:35:00,513 - INFO - Processing: https://www.d365stuff.co/retailattributehelper/
2025-05-26 11:35:00,513 - INFO - HTML file already exists for https://www.d365stuff.co/retailattributehelper/, reading from disk
2025-05-26 11:35:00,517 - INFO - Saving to: retailattributehelper
2025-05-26 11:35:00,517 - INFO - Saved to: posts/retailattributehelper.md
2025-05-26 11:35:00,517 - INFO - Processing: https://www.d365stuff.co/call-x-web-service-with-browser-snippet/
2025-05-26 11:35:00,518 - INFO - HTML file already exists for https://www.d365stuff.co/call-x-web-service-with-browser-snippet/, reading from disk
2025-05-26 11:35:00,522 - INFO - Saving to: call-x-web-service-with-browser-snippet
2025-05-26 11:35:00,522 - INFO - Saved to: posts/call-x-web-service-with-browser-snippet.md
2025-05-26 11:35:00,522 - INFO - Processing: https://www.d365stuff.co/the-sales-order-cannot-be-deleted-because-related-not-posted-transactions-exist/
2025-05-26 11:35:00,522 - INFO - HTML file already exists for https://www.d365stuff.co/the-sales-order-cannot-be-deleted-because-related-not-posted-transactions-exist/, reading from disk
2025-05-26 11:35:00,526 - INFO - Saving to: the-sales-order-cannot-be-deleted-because-related-
2025-05-26 11:35:00,526 - INFO - Saved to: posts/the-sales-order-cannot-be-deleted-because-related-.md
2025-05-26 11:35:00,526 - INFO - Processing: https://www.d365stuff.co/json-odata/
2025-05-26 11:35:00,526 - INFO - HTML file already exists for https://www.d365stuff.co/json-odata/, reading from disk
2025-05-26 11:35:00,531 - INFO - Saving to: json-odata
2025-05-26 11:35:00,531 - INFO - Saved to: posts/json-odata.md
2025-05-26 11:35:00,531 - INFO - Processing: https://www.d365stuff.co/send-noninteractive-e-mail-x-d365/
2025-05-26 11:35:00,531 - INFO - HTML file already exists for https://www.d365stuff.co/send-noninteractive-e-mail-x-d365/, reading from disk
2025-05-26 11:35:00,535 - INFO - Saving to: send-noninteractive-e-mail-x-d365
2025-05-26 11:35:00,535 - INFO - Saved to: posts/send-noninteractive-e-mail-x-d365.md
2025-05-26 11:35:00,535 - INFO - Processing: https://www.d365stuff.co/mailbox-does-not-exist/
2025-05-26 11:35:00,535 - INFO - HTML file already exists for https://www.d365stuff.co/mailbox-does-not-exist/, reading from disk
2025-05-26 11:35:00,539 - INFO - Saving to: mailbox-does-not-exist
2025-05-26 11:35:00,539 - INFO - Saved to: posts/mailbox-does-not-exist.md
2025-05-26 11:35:00,539 - INFO - Processing: https://www.d365stuff.co/entity-cannot-be-deleted-while-dependent-entities-for-a-processing-group-exist-delete-dependent-entities-for-a-processing-group-and-try-again/
2025-05-26 11:35:00,539 - INFO - HTML file already exists for https://www.d365stuff.co/entity-cannot-be-deleted-while-dependent-entities-for-a-processing-group-exist-delete-dependent-entities-for-a-processing-group-and-try-again/, reading from disk
2025-05-26 11:35:00,543 - INFO - Saving to: entity-cannot-be-deleted-while-dependent-entities-
2025-05-26 11:35:00,543 - INFO - Saved to: posts/entity-cannot-be-deleted-while-dependent-entities-.md
2025-05-26 11:35:00,543 - INFO - Processing: https://www.d365stuff.co/drop-table-d365-x-sp_removetable/
2025-05-26 11:35:00,543 - INFO - HTML file already exists for https://www.d365stuff.co/drop-table-d365-x-sp_removetable/, reading from disk
2025-05-26 11:35:00,547 - INFO - Saving to: drop-table-d365-x-sp_removetable
2025-05-26 11:35:00,547 - INFO - Saved to: posts/drop-table-d365-x-sp_removetable.md
2025-05-26 11:35:00,547 - INFO - Processing: https://www.d365stuff.co/import-export-migrate-receipt-formats/
2025-05-26 11:35:00,547 - INFO - HTML file already exists for https://www.d365stuff.co/import-export-migrate-receipt-formats/, reading from disk
2025-05-26 11:35:00,551 - INFO - Saving to: import-export-migrate-receipt-formats
2025-05-26 11:35:00,551 - INFO - Saved to: posts/import-export-migrate-receipt-formats.md
2025-05-26 11:35:00,552 - INFO - Processing: https://www.d365stuff.co/ledgerdimensionfacade/
2025-05-26 11:35:00,552 - INFO - HTML file already exists for https://www.d365stuff.co/ledgerdimensionfacade/, reading from disk
2025-05-26 11:35:00,556 - INFO - Saving to: ledgerdimensionfacade
2025-05-26 11:35:00,556 - INFO - Saved to: posts/ledgerdimensionfacade.md
2025-05-26 11:35:00,556 - INFO - Processing: https://www.d365stuff.co/customdataentityopeninexcel/
2025-05-26 11:35:00,556 - INFO - HTML file already exists for https://www.d365stuff.co/customdataentityopeninexcel/, reading from disk
2025-05-26 11:35:00,560 - INFO - Saving to: customdataentityopeninexcel
2025-05-26 11:35:00,560 - INFO - Saved to: posts/customdataentityopeninexcel.md
2025-05-26 11:35:00,560 - INFO - Processing: https://www.d365stuff.co/best-stuff/
2025-05-26 11:35:00,560 - INFO - HTML file already exists for https://www.d365stuff.co/best-stuff/, reading from disk
2025-05-26 11:35:00,566 - INFO - Saving to: best-stuff
2025-05-26 11:35:00,567 - INFO - Saved to: posts/best-stuff.md
2025-05-26 11:35:00,567 - INFO - Processing: https://www.d365stuff.co/dmfutil-dmfdownloaddatapackage/
2025-05-26 11:35:00,567 - INFO - HTML file already exists for https://www.d365stuff.co/dmfutil-dmfdownloaddatapackage/, reading from disk
2025-05-26 11:35:00,571 - INFO - Saving to: dmfutil-dmfdownloaddatapackage
2025-05-26 11:35:00,571 - INFO - Saved to: posts/dmfutil-dmfdownloaddatapackage.md
2025-05-26 11:35:00,571 - INFO - Processing: https://www.d365stuff.co/x-in-clause/
2025-05-26 11:35:00,571 - INFO - HTML file already exists for https://www.d365stuff.co/x-in-clause/, reading from disk
2025-05-26 11:35:00,575 - INFO - Saving to: x-in-clause
2025-05-26 11:35:00,575 - INFO - Saved to: posts/x-in-clause.md
2025-05-26 11:35:00,575 - INFO - Processing: https://www.d365stuff.co/dmf-jumpref/
2025-05-26 11:35:00,575 - INFO - HTML file already exists for https://www.d365stuff.co/dmf-jumpref/, reading from disk
2025-05-26 11:35:00,579 - INFO - Saving to: dmf-jumpref
2025-05-26 11:35:00,579 - INFO - Saved to: posts/dmf-jumpref.md
2025-05-26 11:35:00,579 - INFO - Processing: https://www.d365stuff.co/update-defaultdimension/
2025-05-26 11:35:00,579 - INFO - HTML file already exists for https://www.d365stuff.co/update-defaultdimension/, reading from disk
2025-05-26 11:35:00,583 - INFO - Saving to: update-defaultdimension
2025-05-26 11:35:00,583 - INFO - Saved to: posts/update-defaultdimension.md
2025-05-26 11:35:00,583 - INFO - Processing: https://www.d365stuff.co/update_recordset-but-cross-company/
2025-05-26 11:35:00,583 - INFO - HTML file already exists for https://www.d365stuff.co/update_recordset-but-cross-company/, reading from disk
2025-05-26 11:35:00,587 - INFO - Saving to: update_recordset-but-cross-company
2025-05-26 11:35:00,587 - INFO - Saved to: posts/update_recordset-but-cross-company.md
2025-05-26 11:35:00,587 - INFO - Processing: https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/
2025-05-26 11:35:00,587 - INFO - HTML file already exists for https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/, reading from disk
2025-05-26 11:35:00,592 - INFO - Saving to: dmfdatapopulation-download-recurring-files
2025-05-26 11:35:00,592 - INFO - Saved to: posts/dmfdatapopulation-download-recurring-files.md
2025-05-26 11:35:00,592 - INFO - Processing: https://www.d365stuff.co/formjsonserializer/
2025-05-26 11:35:00,592 - INFO - HTML file already exists for https://www.d365stuff.co/formjsonserializer/, reading from disk
2025-05-26 11:35:00,596 - INFO - Saving to: formjsonserializer
2025-05-26 11:35:00,596 - INFO - Saved to: posts/formjsonserializer.md
2025-05-26 11:35:00,596 - INFO - Processing: https://www.d365stuff.co/d365-address-books/
2025-05-26 11:35:00,596 - INFO - HTML file already exists for https://www.d365stuff.co/d365-address-books/, reading from disk
2025-05-26 11:35:00,600 - INFO - Saving to: d365-address-books
2025-05-26 11:35:00,600 - INFO - Saved to: posts/d365-address-books.md
2025-05-26 11:35:00,600 - INFO - Processing: https://www.d365stuff.co/one/
2025-05-26 11:35:00,600 - INFO - HTML file already exists for https://www.d365stuff.co/one/, reading from disk
2025-05-26 11:35:00,603 - INFO - Saving to: one
2025-05-26 11:35:00,603 - INFO - Saved to: posts/one.md
2025-05-26 11:35:00,603 - INFO - Download process completed!
2025-05-26 11:35:44,313 - INFO - Starting download process...
2025-05-26 11:35:44,314 - INFO - Processing sitemap: https://www.d365stuff.co/sitemap-posts.xml
2025-05-26 11:35:44,342 - INFO - Processing: https://www.d365stuff.co/d365-custom-web-service-with-pagination/
2025-05-26 11:35:44,343 - INFO - HTML file already exists for https://www.d365stuff.co/d365-custom-web-service-with-pagination/, reading from disk
2025-05-26 11:35:44,408 - ERROR - Error processing sitemap: [Errno 36] File name too long: '<article class="post-full post tag-d365 tag-data-contracts tag-integrations tag-logic-apps tag-serialization tag-snippet tag-web-services tag-x no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2023-02-10">10 February 2023</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">D365 Custom JSON Web Service with Pagination</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>I got a request for a RESTful API with Pagination; here is my proof of concept:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="752" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image.png 600w, https://www.d365stuff.co/content/images/size/w1000/2023/02/image.png 1000w, https://www.d365stuff.co/content/images/size/w1600/2023/02/image.png 1600w, https://www.d365stuff.co/content/images/size/w2400/2023/02/image.png 2400w" width="2000"/></figure><p>There are a few keys to this:</p><ul><li>A queryRun object must be used (vs SELECT statement) in order to use enablePositionPaging</li><li>The query MUST have a sort on it</li></ul><p>Without using queryRun, you would have to do some hacky stuff with x++ SQL that would not be performant. \xa0And that still may not work.</p><p>Without a sort, you will get the error "An exception occured when invoking the operation - Paging is not supported for queries that do not have an ordering property."</p><pre><code class="language-x++">class testPagingCustomers\n{\n    public str getCustomers(int64 _startPosition, int64 _pageSize, boolean _includeTotalCount)\n    {\n        str json;\n        Query query;\n        QueryRun queryRun;\n\n        query = new Query();\n        QueryBuildDataSource qbd = query.addDataSource(tableNum(CustTable));\n        qbd.addSortField(fieldNum(CustTable, AccountNum), SortOrder::Ascending);\n\n        // Set up paging\n        queryRun = new QueryRun(query);\n        queryRun.enablePositionPaging(true);\n        queryRun.addPageRange(_startPosition, _pageSize);\n        \n        List customers = new List(Types::Class);\n\n        while (queryRun.next())\n        {\n            CustTable custTable = queryRun.get(tableNum(CustTable));\n            testCustomersLinesContract testCustomersLinesContract = new testCustomersLinesContract();\n\n            testCustomersLinesContract.parmAccountNum(CustTable.AccountNum);\n            testCustomersLinesContract.parmCustGroup(custTable.CustGroup);\n            testCustomersLinesContract.parmCustName(custTable.name());\n\n            customers.addEnd(testCustomersLinesContract);\n        }\n\n        testCustomersContract testCustomersContract = new testCustomersContract();\n        testCustomersContract.parmCustomers(customers);\n\n        if (_includeTotalCount)\n        {\n            testCustomersContract.parmTotalCount(SysQuery::countLoops(queryRun));\n        }\n\n        json =  FormJsonSerializer::serializeClass(testCustomersContract);\n\n        return json;\n\n    }\n\n}</code></pre><p>To test or implement the class, assign it to a service and service group in D365. \xa0Once deployed, you should be able to navigate in a browser to verify:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="436" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-1.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-1.png 600w, https://www.d365stuff.co/content/images/2023/02/image-1.png 735w" width="735"/></figure><p>Then use the verified URI to make a POST request:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="682" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-2.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-2.png 600w, https://www.d365stuff.co/content/images/2023/02/image-2.png 919w" width="919"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/d365-custom-web-service-with-pagination/";  \n\t\t\t\t\tthis.page.identifier = "ghost-63e6c25cbcf09a003da95708"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 145, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
OSError: [Errno 36] File name too long: '<article class="post-full post tag-d365 tag-data-contracts tag-integrations tag-logic-apps tag-serialization tag-snippet tag-web-services tag-x no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2023-02-10">10 February 2023</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">D365 Custom JSON Web Service with Pagination</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>I got a request for a RESTful API with Pagination; here is my proof of concept:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="752" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image.png 600w, https://www.d365stuff.co/content/images/size/w1000/2023/02/image.png 1000w, https://www.d365stuff.co/content/images/size/w1600/2023/02/image.png 1600w, https://www.d365stuff.co/content/images/size/w2400/2023/02/image.png 2400w" width="2000"/></figure><p>There are a few keys to this:</p><ul><li>A queryRun object must be used (vs SELECT statement) in order to use enablePositionPaging</li><li>The query MUST have a sort on it</li></ul><p>Without using queryRun, you would have to do some hacky stuff with x++ SQL that would not be performant. \xa0And that still may not work.</p><p>Without a sort, you will get the error "An exception occured when invoking the operation - Paging is not supported for queries that do not have an ordering property."</p><pre><code class="language-x++">class testPagingCustomers\n{\n    public str getCustomers(int64 _startPosition, int64 _pageSize, boolean _includeTotalCount)\n    {\n        str json;\n        Query query;\n        QueryRun queryRun;\n\n        query = new Query();\n        QueryBuildDataSource qbd = query.addDataSource(tableNum(CustTable));\n        qbd.addSortField(fieldNum(CustTable, AccountNum), SortOrder::Ascending);\n\n        // Set up paging\n        queryRun = new QueryRun(query);\n        queryRun.enablePositionPaging(true);\n        queryRun.addPageRange(_startPosition, _pageSize);\n        \n        List customers = new List(Types::Class);\n\n        while (queryRun.next())\n        {\n            CustTable custTable = queryRun.get(tableNum(CustTable));\n            testCustomersLinesContract testCustomersLinesContract = new testCustomersLinesContract();\n\n            testCustomersLinesContract.parmAccountNum(CustTable.AccountNum);\n            testCustomersLinesContract.parmCustGroup(custTable.CustGroup);\n            testCustomersLinesContract.parmCustName(custTable.name());\n\n            customers.addEnd(testCustomersLinesContract);\n        }\n\n        testCustomersContract testCustomersContract = new testCustomersContract();\n        testCustomersContract.parmCustomers(customers);\n\n        if (_includeTotalCount)\n        {\n            testCustomersContract.parmTotalCount(SysQuery::countLoops(queryRun));\n        }\n\n        json =  FormJsonSerializer::serializeClass(testCustomersContract);\n\n        return json;\n\n    }\n\n}</code></pre><p>To test or implement the class, assign it to a service and service group in D365. \xa0Once deployed, you should be able to navigate in a browser to verify:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="436" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-1.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-1.png 600w, https://www.d365stuff.co/content/images/2023/02/image-1.png 735w" width="735"/></figure><p>Then use the verified URI to make a POST request:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="682" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-2.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-2.png 600w, https://www.d365stuff.co/content/images/2023/02/image-2.png 919w" width="919"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/d365-custom-web-service-with-pagination/";  \n\t\t\t\t\tthis.page.identifier = "ghost-63e6c25cbcf09a003da95708"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:35:44,409 - INFO - Download process completed!
2025-05-26 11:38:19,475 - INFO - Starting download process...
2025-05-26 11:38:19,476 - INFO - Processing sitemap: https://www.d365stuff.co/sitemap-posts.xml
2025-05-26 11:38:19,540 - INFO - Processing: https://www.d365stuff.co/d365-custom-web-service-with-pagination/
2025-05-26 11:38:19,541 - INFO - HTML file already exists for https://www.d365stuff.co/d365-custom-web-service-with-pagination/, reading from disk
2025-05-26 11:38:19,607 - ERROR - Error processing sitemap: [Errno 36] File name too long: '<article class="post-full post tag-d365 tag-data-contracts tag-integrations tag-logic-apps tag-serialization tag-snippet tag-web-services tag-x no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2023-02-10">10 February 2023</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">D365 Custom JSON Web Service with Pagination</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>I got a request for a RESTful API with Pagination; here is my proof of concept:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="752" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image.png 600w, https://www.d365stuff.co/content/images/size/w1000/2023/02/image.png 1000w, https://www.d365stuff.co/content/images/size/w1600/2023/02/image.png 1600w, https://www.d365stuff.co/content/images/size/w2400/2023/02/image.png 2400w" width="2000"/></figure><p>There are a few keys to this:</p><ul><li>A queryRun object must be used (vs SELECT statement) in order to use enablePositionPaging</li><li>The query MUST have a sort on it</li></ul><p>Without using queryRun, you would have to do some hacky stuff with x++ SQL that would not be performant. \xa0And that still may not work.</p><p>Without a sort, you will get the error "An exception occured when invoking the operation - Paging is not supported for queries that do not have an ordering property."</p><pre><code class="language-x++">class testPagingCustomers\n{\n    public str getCustomers(int64 _startPosition, int64 _pageSize, boolean _includeTotalCount)\n    {\n        str json;\n        Query query;\n        QueryRun queryRun;\n\n        query = new Query();\n        QueryBuildDataSource qbd = query.addDataSource(tableNum(CustTable));\n        qbd.addSortField(fieldNum(CustTable, AccountNum), SortOrder::Ascending);\n\n        // Set up paging\n        queryRun = new QueryRun(query);\n        queryRun.enablePositionPaging(true);\n        queryRun.addPageRange(_startPosition, _pageSize);\n        \n        List customers = new List(Types::Class);\n\n        while (queryRun.next())\n        {\n            CustTable custTable = queryRun.get(tableNum(CustTable));\n            testCustomersLinesContract testCustomersLinesContract = new testCustomersLinesContract();\n\n            testCustomersLinesContract.parmAccountNum(CustTable.AccountNum);\n            testCustomersLinesContract.parmCustGroup(custTable.CustGroup);\n            testCustomersLinesContract.parmCustName(custTable.name());\n\n            customers.addEnd(testCustomersLinesContract);\n        }\n\n        testCustomersContract testCustomersContract = new testCustomersContract();\n        testCustomersContract.parmCustomers(customers);\n\n        if (_includeTotalCount)\n        {\n            testCustomersContract.parmTotalCount(SysQuery::countLoops(queryRun));\n        }\n\n        json =  FormJsonSerializer::serializeClass(testCustomersContract);\n\n        return json;\n\n    }\n\n}</code></pre><p>To test or implement the class, assign it to a service and service group in D365. \xa0Once deployed, you should be able to navigate in a browser to verify:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="436" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-1.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-1.png 600w, https://www.d365stuff.co/content/images/2023/02/image-1.png 735w" width="735"/></figure><p>Then use the verified URI to make a POST request:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="682" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-2.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-2.png 600w, https://www.d365stuff.co/content/images/2023/02/image-2.png 919w" width="919"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/d365-custom-web-service-with-pagination/";  \n\t\t\t\t\tthis.page.identifier = "ghost-63e6c25cbcf09a003da95708"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 145, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
OSError: [Errno 36] File name too long: '<article class="post-full post tag-d365 tag-data-contracts tag-integrations tag-logic-apps tag-serialization tag-snippet tag-web-services tag-x no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2023-02-10">10 February 2023</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">D365 Custom JSON Web Service with Pagination</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>I got a request for a RESTful API with Pagination; here is my proof of concept:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="752" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image.png 600w, https://www.d365stuff.co/content/images/size/w1000/2023/02/image.png 1000w, https://www.d365stuff.co/content/images/size/w1600/2023/02/image.png 1600w, https://www.d365stuff.co/content/images/size/w2400/2023/02/image.png 2400w" width="2000"/></figure><p>There are a few keys to this:</p><ul><li>A queryRun object must be used (vs SELECT statement) in order to use enablePositionPaging</li><li>The query MUST have a sort on it</li></ul><p>Without using queryRun, you would have to do some hacky stuff with x++ SQL that would not be performant. \xa0And that still may not work.</p><p>Without a sort, you will get the error "An exception occured when invoking the operation - Paging is not supported for queries that do not have an ordering property."</p><pre><code class="language-x++">class testPagingCustomers\n{\n    public str getCustomers(int64 _startPosition, int64 _pageSize, boolean _includeTotalCount)\n    {\n        str json;\n        Query query;\n        QueryRun queryRun;\n\n        query = new Query();\n        QueryBuildDataSource qbd = query.addDataSource(tableNum(CustTable));\n        qbd.addSortField(fieldNum(CustTable, AccountNum), SortOrder::Ascending);\n\n        // Set up paging\n        queryRun = new QueryRun(query);\n        queryRun.enablePositionPaging(true);\n        queryRun.addPageRange(_startPosition, _pageSize);\n        \n        List customers = new List(Types::Class);\n\n        while (queryRun.next())\n        {\n            CustTable custTable = queryRun.get(tableNum(CustTable));\n            testCustomersLinesContract testCustomersLinesContract = new testCustomersLinesContract();\n\n            testCustomersLinesContract.parmAccountNum(CustTable.AccountNum);\n            testCustomersLinesContract.parmCustGroup(custTable.CustGroup);\n            testCustomersLinesContract.parmCustName(custTable.name());\n\n            customers.addEnd(testCustomersLinesContract);\n        }\n\n        testCustomersContract testCustomersContract = new testCustomersContract();\n        testCustomersContract.parmCustomers(customers);\n\n        if (_includeTotalCount)\n        {\n            testCustomersContract.parmTotalCount(SysQuery::countLoops(queryRun));\n        }\n\n        json =  FormJsonSerializer::serializeClass(testCustomersContract);\n\n        return json;\n\n    }\n\n}</code></pre><p>To test or implement the class, assign it to a service and service group in D365. \xa0Once deployed, you should be able to navigate in a browser to verify:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="436" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-1.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-1.png 600w, https://www.d365stuff.co/content/images/2023/02/image-1.png 735w" width="735"/></figure><p>Then use the verified URI to make a POST request:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="682" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-2.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-2.png 600w, https://www.d365stuff.co/content/images/2023/02/image-2.png 919w" width="919"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/d365-custom-web-service-with-pagination/";  \n\t\t\t\t\tthis.page.identifier = "ghost-63e6c25cbcf09a003da95708"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:38:19,608 - INFO - Download process completed!
2025-05-26 11:39:05,638 - INFO - Starting download process...
2025-05-26 11:39:05,638 - INFO - Processing sitemap: https://www.d365stuff.co/sitemap-posts.xml
2025-05-26 11:39:05,669 - INFO - Processing: https://www.d365stuff.co/d365-custom-web-service-with-pagination/
2025-05-26 11:39:05,669 - INFO - HTML file already exists for https://www.d365stuff.co/d365-custom-web-service-with-pagination/, reading from disk
2025-05-26 11:39:05,674 - INFO - Content unchanged for posts/d365-custom-web-service-with-pagination.md, skipping save
2025-05-26 11:39:05,715 - ERROR - Error saving MarkItDown markdown: [Errno 36] File name too long: '<article class="post-full post tag-d365 tag-data-contracts tag-integrations tag-logic-apps tag-serialization tag-snippet tag-web-services tag-x no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2023-02-10">10 February 2023</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">D365 Custom JSON Web Service with Pagination</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>I got a request for a RESTful API with Pagination; here is my proof of concept:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="752" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image.png 600w, https://www.d365stuff.co/content/images/size/w1000/2023/02/image.png 1000w, https://www.d365stuff.co/content/images/size/w1600/2023/02/image.png 1600w, https://www.d365stuff.co/content/images/size/w2400/2023/02/image.png 2400w" width="2000"/></figure><p>There are a few keys to this:</p><ul><li>A queryRun object must be used (vs SELECT statement) in order to use enablePositionPaging</li><li>The query MUST have a sort on it</li></ul><p>Without using queryRun, you would have to do some hacky stuff with x++ SQL that would not be performant. \xa0And that still may not work.</p><p>Without a sort, you will get the error "An exception occured when invoking the operation - Paging is not supported for queries that do not have an ordering property."</p><pre><code class="language-x++">class testPagingCustomers\n{\n    public str getCustomers(int64 _startPosition, int64 _pageSize, boolean _includeTotalCount)\n    {\n        str json;\n        Query query;\n        QueryRun queryRun;\n\n        query = new Query();\n        QueryBuildDataSource qbd = query.addDataSource(tableNum(CustTable));\n        qbd.addSortField(fieldNum(CustTable, AccountNum), SortOrder::Ascending);\n\n        // Set up paging\n        queryRun = new QueryRun(query);\n        queryRun.enablePositionPaging(true);\n        queryRun.addPageRange(_startPosition, _pageSize);\n        \n        List customers = new List(Types::Class);\n\n        while (queryRun.next())\n        {\n            CustTable custTable = queryRun.get(tableNum(CustTable));\n            testCustomersLinesContract testCustomersLinesContract = new testCustomersLinesContract();\n\n            testCustomersLinesContract.parmAccountNum(CustTable.AccountNum);\n            testCustomersLinesContract.parmCustGroup(custTable.CustGroup);\n            testCustomersLinesContract.parmCustName(custTable.name());\n\n            customers.addEnd(testCustomersLinesContract);\n        }\n\n        testCustomersContract testCustomersContract = new testCustomersContract();\n        testCustomersContract.parmCustomers(customers);\n\n        if (_includeTotalCount)\n        {\n            testCustomersContract.parmTotalCount(SysQuery::countLoops(queryRun));\n        }\n\n        json =  FormJsonSerializer::serializeClass(testCustomersContract);\n\n        return json;\n\n    }\n\n}</code></pre><p>To test or implement the class, assign it to a service and service group in D365. \xa0Once deployed, you should be able to navigate in a browser to verify:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="436" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-1.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-1.png 600w, https://www.d365stuff.co/content/images/2023/02/image-1.png 735w" width="735"/></figure><p>Then use the verified URI to make a POST request:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="682" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-2.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-2.png 600w, https://www.d365stuff.co/content/images/2023/02/image-2.png 919w" width="919"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/d365-custom-web-service-with-pagination/";  \n\t\t\t\t\tthis.page.identifier = "ghost-63e6c25cbcf09a003da95708"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
OSError: [Errno 36] File name too long: '<article class="post-full post tag-d365 tag-data-contracts tag-integrations tag-logic-apps tag-serialization tag-snippet tag-web-services tag-x no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2023-02-10">10 February 2023</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">D365 Custom JSON Web Service with Pagination</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>I got a request for a RESTful API with Pagination; here is my proof of concept:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="752" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image.png 600w, https://www.d365stuff.co/content/images/size/w1000/2023/02/image.png 1000w, https://www.d365stuff.co/content/images/size/w1600/2023/02/image.png 1600w, https://www.d365stuff.co/content/images/size/w2400/2023/02/image.png 2400w" width="2000"/></figure><p>There are a few keys to this:</p><ul><li>A queryRun object must be used (vs SELECT statement) in order to use enablePositionPaging</li><li>The query MUST have a sort on it</li></ul><p>Without using queryRun, you would have to do some hacky stuff with x++ SQL that would not be performant. \xa0And that still may not work.</p><p>Without a sort, you will get the error "An exception occured when invoking the operation - Paging is not supported for queries that do not have an ordering property."</p><pre><code class="language-x++">class testPagingCustomers\n{\n    public str getCustomers(int64 _startPosition, int64 _pageSize, boolean _includeTotalCount)\n    {\n        str json;\n        Query query;\n        QueryRun queryRun;\n\n        query = new Query();\n        QueryBuildDataSource qbd = query.addDataSource(tableNum(CustTable));\n        qbd.addSortField(fieldNum(CustTable, AccountNum), SortOrder::Ascending);\n\n        // Set up paging\n        queryRun = new QueryRun(query);\n        queryRun.enablePositionPaging(true);\n        queryRun.addPageRange(_startPosition, _pageSize);\n        \n        List customers = new List(Types::Class);\n\n        while (queryRun.next())\n        {\n            CustTable custTable = queryRun.get(tableNum(CustTable));\n            testCustomersLinesContract testCustomersLinesContract = new testCustomersLinesContract();\n\n            testCustomersLinesContract.parmAccountNum(CustTable.AccountNum);\n            testCustomersLinesContract.parmCustGroup(custTable.CustGroup);\n            testCustomersLinesContract.parmCustName(custTable.name());\n\n            customers.addEnd(testCustomersLinesContract);\n        }\n\n        testCustomersContract testCustomersContract = new testCustomersContract();\n        testCustomersContract.parmCustomers(customers);\n\n        if (_includeTotalCount)\n        {\n            testCustomersContract.parmTotalCount(SysQuery::countLoops(queryRun));\n        }\n\n        json =  FormJsonSerializer::serializeClass(testCustomersContract);\n\n        return json;\n\n    }\n\n}</code></pre><p>To test or implement the class, assign it to a service and service group in D365. \xa0Once deployed, you should be able to navigate in a browser to verify:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="436" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-1.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-1.png 600w, https://www.d365stuff.co/content/images/2023/02/image-1.png 735w" width="735"/></figure><p>Then use the verified URI to make a POST request:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="682" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2023/02/image-2.png" srcset="https://www.d365stuff.co/content/images/size/w600/2023/02/image-2.png 600w, https://www.d365stuff.co/content/images/2023/02/image-2.png 919w" width="919"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/d365-custom-web-service-with-pagination/";  \n\t\t\t\t\tthis.page.identifier = "ghost-63e6c25cbcf09a003da95708"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:05,716 - INFO - Processing: https://www.d365stuff.co/copy-write-d365-document-management-handling-file-to-wherever-via-logic-apps/
2025-05-26 11:39:05,716 - INFO - HTML file already exists for https://www.d365stuff.co/copy-write-d365-document-management-handling-file-to-wherever-via-logic-apps/, reading from disk
2025-05-26 11:39:05,721 - INFO - Content unchanged for posts/copy-write-d365-document-management-handling-file-.md, skipping save
2025-05-26 11:39:05,761 - ERROR - Error saving MarkItDown markdown: [Errno 36] File name too long: '<article class="post-full post tag-d365 tag-document-handling tag-document-management tag-integrations tag-logic-apps tag-post-tag tag-stuff tag-web-services tag-x no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2022-12-20">20 December 2022</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">Copy Write D365 Document Management Handling File to wherever via Logic Apps</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Because why not?</p><p>Problem: How do I get this lost raccoon from a D365 attachment to another part of the cloud?</p><figure class="kg-card kg-image-card kg-card-hascaption"><img alt="" class="kg-image" height="978" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/12/image.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/12/image.png 600w, https://www.d365stuff.co/content/images/2022/12/image.png 949w" width="949"/><figcaption>Spoiler: You\'re going to DB partner</figcaption></figure><p>First, we need to create a custom web service that can fetch our friend:</p><pre><code class="language-x++">    public FileDataString getStuff()\n    {\n\n        DocuRef docuRef;\n        FileDataString FileDataString = \'\';\n\n        select firstonly docuRef where docuRef.Name == \'RaccoonPardner\';\n\n        if(docuRef)\n        {\n            container data =\n            \tDocumentManagement::getAttachmentAsContainer(docuRef);\n            if (data &amp;&amp; conLen(data) &gt; 0)\n            {\n                BinData binData = new BinData();\n                binData.setData(data);\n                FileDataString = binData.base64Encode();\n            }\n        }\n        return FileDataString;\n\n    }</code></pre><p>Second, we need a logic app to call the service:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="880" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/12/image-9.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/12/image-9.png 600w, https://www.d365stuff.co/content/images/2022/12/image-9.png 964w" width="964"/></figure><p>Here is the code view to better show the expression in File Content. \xa0The key method I use is base64ToBinary().</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="1246" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/12/image-2.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/12/image-2.png 600w, https://www.d365stuff.co/content/images/2022/12/image-2.png 964w" width="964"/></figure><p>And there it is:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="633" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/12/image-3.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/12/image-3.png 600w, https://www.d365stuff.co/content/images/size/w1000/2022/12/image-3.png 1000w, https://www.d365stuff.co/content/images/2022/12/image-3.png 1555w" width="1555"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/copy-write-d365-document-management-handling-file-to-wherever-via-logic-apps/";  \n\t\t\t\t\tthis.page.identifier = "ghost-63a1cfff006a9b003d48cf00"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
OSError: [Errno 36] File name too long: '<article class="post-full post tag-d365 tag-document-handling tag-document-management tag-integrations tag-logic-apps tag-post-tag tag-stuff tag-web-services tag-x no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2022-12-20">20 December 2022</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">Copy Write D365 Document Management Handling File to wherever via Logic Apps</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Because why not?</p><p>Problem: How do I get this lost raccoon from a D365 attachment to another part of the cloud?</p><figure class="kg-card kg-image-card kg-card-hascaption"><img alt="" class="kg-image" height="978" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/12/image.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/12/image.png 600w, https://www.d365stuff.co/content/images/2022/12/image.png 949w" width="949"/><figcaption>Spoiler: You\'re going to DB partner</figcaption></figure><p>First, we need to create a custom web service that can fetch our friend:</p><pre><code class="language-x++">    public FileDataString getStuff()\n    {\n\n        DocuRef docuRef;\n        FileDataString FileDataString = \'\';\n\n        select firstonly docuRef where docuRef.Name == \'RaccoonPardner\';\n\n        if(docuRef)\n        {\n            container data =\n            \tDocumentManagement::getAttachmentAsContainer(docuRef);\n            if (data &amp;&amp; conLen(data) &gt; 0)\n            {\n                BinData binData = new BinData();\n                binData.setData(data);\n                FileDataString = binData.base64Encode();\n            }\n        }\n        return FileDataString;\n\n    }</code></pre><p>Second, we need a logic app to call the service:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="880" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/12/image-9.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/12/image-9.png 600w, https://www.d365stuff.co/content/images/2022/12/image-9.png 964w" width="964"/></figure><p>Here is the code view to better show the expression in File Content. \xa0The key method I use is base64ToBinary().</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="1246" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/12/image-2.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/12/image-2.png 600w, https://www.d365stuff.co/content/images/2022/12/image-2.png 964w" width="964"/></figure><p>And there it is:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="633" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/12/image-3.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/12/image-3.png 600w, https://www.d365stuff.co/content/images/size/w1000/2022/12/image-3.png 1000w, https://www.d365stuff.co/content/images/2022/12/image-3.png 1555w" width="1555"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/copy-write-d365-document-management-handling-file-to-wherever-via-logic-apps/";  \n\t\t\t\t\tthis.page.identifier = "ghost-63a1cfff006a9b003d48cf00"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:05,762 - INFO - Processing: https://www.d365stuff.co/reading-parsing-text-files-from-document-handling/
2025-05-26 11:39:05,762 - INFO - HTML file already exists for https://www.d365stuff.co/reading-parsing-text-files-from-document-handling/, reading from disk
2025-05-26 11:39:05,766 - INFO - Content unchanged for posts/reading-parsing-text-files-from-document-handling.md, skipping save
2025-05-26 11:39:05,803 - ERROR - Error saving MarkItDown markdown: [Errno 36] File name too long: '<article class="post-full post tag-d365 tag-x tag-csv tag-document-management tag-document-handling no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2022-12-08">8 December 2022</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">Reading Parsing Text Files From Document Management (fka Document Handling)</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>When I started my career, I was blown away by how it seemed the world ran on text files. \xa0Today, even after years of cloud transformation, the world still seems to run on text files. \xa0CSVs. \xa0Pipe delimited. \xa0Fixed width. \xa0Caret delimited even. \xa0Whatever. \xa0This post is all about reading files via x++ in D365. \xa0</p><h2 id="row-by-row">Row by row </h2><p>CommaTextIO used to be a popular class to use in the on-premise days, and it\'s still viable, however most of the time in D365 we get a file stream as the file source as opposed to a file on a local server. \xa0Streams can be handled via CommaTextStreamIO, and the pattern to implement is the same as CommaTextIO:</p><pre><code class="language-x++">    static void readDocuRefCSV(Common _common)\n    {\n        DocuRef docuRef = DocumentManagement::findAttachmentsForCommon(_common);\n        CommaTextStreamIo CommaTextStreamIo;\n        container row;\n\n        if(docuRef.ValueRecId)\n        {\n            CommaTextStreamIo = CommaTextStreamIo::constructForRead(DocumentManagement::getAttachmentStream(docuRef));\n            CommaTextStreamIo.inFieldDelimiter(\',\');\n            CommaTextStreamIo.inRecordDelimiter(\'\\r\\n\');\n\n            row = CommaTextStreamIo.read();\n\n            while(row)\n            {\n                //do row by row stuff\n                row = CommaTextStreamIo.read();\n            }\n\n            CommaTextStreamIo = null;\n        }\n    }</code></pre><h2 id="read-to-end">Read to end</h2><p>The other option is to dump the entire file contents into a giant string to do whatever you want with. \xa0In this example we\'ll use StreamReader which has the perfect method, ReadToEnd(), for this scenario.</p><pre><code>    static void readDocuRefTxt(Common _common)\n    {\n        DocuRef docuRef = DocumentManagement::findAttachmentsForCommon(_common);\n        System.IO.StreamReader streamReader;\n        \n        str fileContents;\n\n        if(docuRef.ValueRecId)\n        {\n            streamReader = new System.IO.StreamReader(DocumentManagement::getAttachmentStream(docuRef));\n            fileContents = streamReader.ReadToEnd();\n\n            //fileContents now has the entire content of the attached file to do stuff with\n\n            streamReader.Close();\n            streamReader.Dispose();\n        }\n    }</code></pre><p>Ultimately it\'s always important to understand what\'s in the file you\'re reading – \xa0and what you want to do with it -- in order to plan your approach.</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/reading-parsing-text-files-from-document-handling/";  \n\t\t\t\t\tthis.page.identifier = "ghost-6391f3666a50d9003d4651b8"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg"/>\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
OSError: [Errno 36] File name too long: '<article class="post-full post tag-d365 tag-x tag-csv tag-document-management tag-document-handling no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2022-12-08">8 December 2022</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">Reading Parsing Text Files From Document Management (fka Document Handling)</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>When I started my career, I was blown away by how it seemed the world ran on text files. \xa0Today, even after years of cloud transformation, the world still seems to run on text files. \xa0CSVs. \xa0Pipe delimited. \xa0Fixed width. \xa0Caret delimited even. \xa0Whatever. \xa0This post is all about reading files via x++ in D365. \xa0</p><h2 id="row-by-row">Row by row </h2><p>CommaTextIO used to be a popular class to use in the on-premise days, and it\'s still viable, however most of the time in D365 we get a file stream as the file source as opposed to a file on a local server. \xa0Streams can be handled via CommaTextStreamIO, and the pattern to implement is the same as CommaTextIO:</p><pre><code class="language-x++">    static void readDocuRefCSV(Common _common)\n    {\n        DocuRef docuRef = DocumentManagement::findAttachmentsForCommon(_common);\n        CommaTextStreamIo CommaTextStreamIo;\n        container row;\n\n        if(docuRef.ValueRecId)\n        {\n            CommaTextStreamIo = CommaTextStreamIo::constructForRead(DocumentManagement::getAttachmentStream(docuRef));\n            CommaTextStreamIo.inFieldDelimiter(\',\');\n            CommaTextStreamIo.inRecordDelimiter(\'\\r\\n\');\n\n            row = CommaTextStreamIo.read();\n\n            while(row)\n            {\n                //do row by row stuff\n                row = CommaTextStreamIo.read();\n            }\n\n            CommaTextStreamIo = null;\n        }\n    }</code></pre><h2 id="read-to-end">Read to end</h2><p>The other option is to dump the entire file contents into a giant string to do whatever you want with. \xa0In this example we\'ll use StreamReader which has the perfect method, ReadToEnd(), for this scenario.</p><pre><code>    static void readDocuRefTxt(Common _common)\n    {\n        DocuRef docuRef = DocumentManagement::findAttachmentsForCommon(_common);\n        System.IO.StreamReader streamReader;\n        \n        str fileContents;\n\n        if(docuRef.ValueRecId)\n        {\n            streamReader = new System.IO.StreamReader(DocumentManagement::getAttachmentStream(docuRef));\n            fileContents = streamReader.ReadToEnd();\n\n            //fileContents now has the entire content of the attached file to do stuff with\n\n            streamReader.Close();\n            streamReader.Dispose();\n        }\n    }</code></pre><p>Ultimately it\'s always important to understand what\'s in the file you\'re reading – \xa0and what you want to do with it -- in order to plan your approach.</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/reading-parsing-text-files-from-document-handling/";  \n\t\t\t\t\tthis.page.identifier = "ghost-6391f3666a50d9003d4651b8"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg"/>\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:05,804 - INFO - Processing: https://www.d365stuff.co/reverse-record-set-lookup-attribute-match/
2025-05-26 11:39:05,804 - INFO - HTML file already exists for https://www.d365stuff.co/reverse-record-set-lookup-attribute-match/, reading from disk
2025-05-26 11:39:05,809 - INFO - Content unchanged for posts/reverse-record-set-lookup-attribute-match.md, skipping save
2025-05-26 11:39:05,847 - ERROR - Error saving MarkItDown markdown: [Errno 36] File name too long: '<article class="post-full post tag-sql tag-d365 tag-taxgroupdata featured no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2022-10-04">4 October 2022</time>\n<span class="date-divider">/</span> <a href="/tag/sql/">sql</a>\n</section>\n<h1 class="post-full-title">Reverse Record Unique Set Lookup Attribute Match</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Is there a word or term for this? \xa0The other day someone asked me for help on a problem, "I\'ve got an integration where I receive somewhere between 0 - 10 tax codes and need to figure out what [unique] tax group they all belong to." \xa0</p><p>To solve, we\'re going to use the Contoso DB. \xa0Here is a look at the TaxGroupData table:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="906" loading="lazy" src="https://www.d365stuff.co/content/images/2022/10/image.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/10/image.png 600w, https://www.d365stuff.co/content/images/2022/10/image.png 710w" width="710"/></figure><p>Let\'s look at the CA group; it has three codes, HR_CAST, RP_CAST, and SP_CAST. \xa0The problem with doing a search on just these values, is that not only do I get the CA group back, but also CALA and CALA-USE, which have those codes within their [larger] sets: </p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="734" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/10/image-3.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/10/image-3.png 600w, https://www.d365stuff.co/content/images/2022/10/image-3.png 764w" width="764"/></figure><p>The key to solve the problem is not just to match on the tax codes [attributes], but the count of them in a set. \xa0I say attributes because I consider that to be what it really is at the most abstract level, and have done a similar pattern for advanced product configurators.</p><p>To get the number of lines in a set at the line level, I join the table to a SQL expression (which could easily be a view in x++) \xa0on [the header] TaxGroup:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="896" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/10/image-5.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/10/image-5.png 600w, https://www.d365stuff.co/content/images/size/w1000/2022/10/image-5.png 1000w, https://www.d365stuff.co/content/images/2022/10/image-5.png 1002w" width="1002"/></figure><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="896" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/10/image-4.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/10/image-4.png 600w, https://www.d365stuff.co/content/images/2022/10/image-4.png 1000w" width="1000"/></figure><p>Now we know how many attributes or lines are in each set. \xa0The CA tax group has 3 lines, HR_CAST, RP_CAST, SP_CAST whereas the CALA group has 6: HR_CAST, HR_LACITY, RP_CAST, RP_LACITY, SP_CAST, SP_LACITY.</p><p>Now when I search on the three codes, I can see the three groups that set is in, but I can also tell that two of those have larger sets with additional attributes: </p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="824" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/10/image-6.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/10/image-6.png 600w, https://www.d365stuff.co/content/images/size/w1000/2022/10/image-6.png 1000w, https://www.d365stuff.co/content/images/2022/10/image-6.png 1046w" width="1046"/></figure><p>We only want the taxgroup that has a perfect circle Venn diagram with the supplied tax codes, so we need to also filter on count of tax codes:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="656" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/10/image-7.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/10/image-7.png 600w, https://www.d365stuff.co/content/images/size/w1000/2022/10/image-7.png 1000w, https://www.d365stuff.co/content/images/2022/10/image-7.png 1040w" width="1040"/></figure><p>This essentially gets us there. \xa0From here, there are many options on how where to take this depending on the context of the call or how it will be used. \xa0For demo ease, here is a the final query with a top 1:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="624" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/10/image-8.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/10/image-8.png 600w, https://www.d365stuff.co/content/images/2022/10/image-8.png 766w" width="766"/></figure><p>That\'s it! \xa0This can all be reproduced in x++ in a number of ways. \xa0The best way will be up to you.</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/reverse-record-set-lookup-attribute-match/";  \n\t\t\t\t\tthis.page.identifier = "ghost-633c3c512425f0003df1699b"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
OSError: [Errno 36] File name too long: '<article class="post-full post tag-sql tag-d365 tag-taxgroupdata featured no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2022-10-04">4 October 2022</time>\n<span class="date-divider">/</span> <a href="/tag/sql/">sql</a>\n</section>\n<h1 class="post-full-title">Reverse Record Unique Set Lookup Attribute Match</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Is there a word or term for this? \xa0The other day someone asked me for help on a problem, "I\'ve got an integration where I receive somewhere between 0 - 10 tax codes and need to figure out what [unique] tax group they all belong to." \xa0</p><p>To solve, we\'re going to use the Contoso DB. \xa0Here is a look at the TaxGroupData table:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="906" loading="lazy" src="https://www.d365stuff.co/content/images/2022/10/image.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/10/image.png 600w, https://www.d365stuff.co/content/images/2022/10/image.png 710w" width="710"/></figure><p>Let\'s look at the CA group; it has three codes, HR_CAST, RP_CAST, and SP_CAST. \xa0The problem with doing a search on just these values, is that not only do I get the CA group back, but also CALA and CALA-USE, which have those codes within their [larger] sets: </p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="734" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/10/image-3.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/10/image-3.png 600w, https://www.d365stuff.co/content/images/2022/10/image-3.png 764w" width="764"/></figure><p>The key to solve the problem is not just to match on the tax codes [attributes], but the count of them in a set. \xa0I say attributes because I consider that to be what it really is at the most abstract level, and have done a similar pattern for advanced product configurators.</p><p>To get the number of lines in a set at the line level, I join the table to a SQL expression (which could easily be a view in x++) \xa0on [the header] TaxGroup:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="896" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/10/image-5.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/10/image-5.png 600w, https://www.d365stuff.co/content/images/size/w1000/2022/10/image-5.png 1000w, https://www.d365stuff.co/content/images/2022/10/image-5.png 1002w" width="1002"/></figure><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="896" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/10/image-4.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/10/image-4.png 600w, https://www.d365stuff.co/content/images/2022/10/image-4.png 1000w" width="1000"/></figure><p>Now we know how many attributes or lines are in each set. \xa0The CA tax group has 3 lines, HR_CAST, RP_CAST, SP_CAST whereas the CALA group has 6: HR_CAST, HR_LACITY, RP_CAST, RP_LACITY, SP_CAST, SP_LACITY.</p><p>Now when I search on the three codes, I can see the three groups that set is in, but I can also tell that two of those have larger sets with additional attributes: </p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="824" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/10/image-6.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/10/image-6.png 600w, https://www.d365stuff.co/content/images/size/w1000/2022/10/image-6.png 1000w, https://www.d365stuff.co/content/images/2022/10/image-6.png 1046w" width="1046"/></figure><p>We only want the taxgroup that has a perfect circle Venn diagram with the supplied tax codes, so we need to also filter on count of tax codes:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="656" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/10/image-7.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/10/image-7.png 600w, https://www.d365stuff.co/content/images/size/w1000/2022/10/image-7.png 1000w, https://www.d365stuff.co/content/images/2022/10/image-7.png 1040w" width="1040"/></figure><p>This essentially gets us there. \xa0From here, there are many options on how where to take this depending on the context of the call or how it will be used. \xa0For demo ease, here is a the final query with a top 1:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="624" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2022/10/image-8.png" srcset="https://www.d365stuff.co/content/images/size/w600/2022/10/image-8.png 600w, https://www.d365stuff.co/content/images/2022/10/image-8.png 766w" width="766"/></figure><p>That\'s it! \xa0This can all be reproduced in x++ in a number of ways. \xa0The best way will be up to you.</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/reverse-record-set-lookup-attribute-match/";  \n\t\t\t\t\tthis.page.identifier = "ghost-633c3c512425f0003df1699b"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:05,847 - INFO - Processing: https://www.d365stuff.co/x-aadauthentication-to-get-tenant-id/
2025-05-26 11:39:05,847 - INFO - HTML file already exists for https://www.d365stuff.co/x-aadauthentication-to-get-tenant-id/, reading from disk
2025-05-26 11:39:05,851 - INFO - Content unchanged for posts/x-aadauthentication-to-get-tenant-id.md, skipping save
2025-05-26 11:39:05,883 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-d365 tag-x no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2022-07-28">28 July 2022</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">x++ AADAuthentication to get D365 Tenant Id</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Hi. \xa0Someone asked me the other day how they could determine the environment\'s tenant using x++, and here it is. \xa0There\'s a few other fields in the mix, but aadResponse.TenantId in the code below is what you\'re looking for:</p><pre><code>using Microsoft.Dynamics.AX.Security.MicrosoftGraphHelper;\n\nclass Class1\n{\n    static void main (Args args)\n    {\n        boolean status = false;\n        str exMessage, failureMessage, response, tenant, s2sCertThumbprint, stackTrace;       \n    \n        // Try to authenticate to AAD\n        var aadResponse = AADAuthentication::AuthenticateWithAADByCertificate();\n        status = aadResponse.Status;\n        tenant = aadResponse.TenantId;\n        response = aadResponse.Response;\n        s2sCertThumbprint = aadResponse.S2SCertThumbprint;\n        stackTrace = aadResponse.StackTrace;\n\n    }\n\n}</code></pre>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/x-aadauthentication-to-get-tenant-id/";  \n\t\t\t\t\tthis.page.identifier = "ghost-62e29448d12a8f003d178459"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg"/>\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-d365 tag-x no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2022-07-28">28 July 2022</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">x++ AADAuthentication to get D365 Tenant Id</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Hi. \xa0Someone asked me the other day how they could determine the environment\'s tenant using x++, and here it is. \xa0There\'s a few other fields in the mix, but aadResponse.TenantId in the code below is what you\'re looking for:</p><pre><code>using Microsoft.Dynamics.AX.Security.MicrosoftGraphHelper;\n\nclass Class1\n{\n    static void main (Args args)\n    {\n        boolean status = false;\n        str exMessage, failureMessage, response, tenant, s2sCertThumbprint, stackTrace;       \n    \n        // Try to authenticate to AAD\n        var aadResponse = AADAuthentication::AuthenticateWithAADByCertificate();\n        status = aadResponse.Status;\n        tenant = aadResponse.TenantId;\n        response = aadResponse.Response;\n        s2sCertThumbprint = aadResponse.S2SCertThumbprint;\n        stackTrace = aadResponse.StackTrace;\n\n    }\n\n}</code></pre>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/x-aadauthentication-to-get-tenant-id/";  \n\t\t\t\t\tthis.page.identifier = "ghost-62e29448d12a8f003d178459"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg"/>\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:05,883 - INFO - Processing: https://www.d365stuff.co/dynamicscon-march-2021-companion-logic-apps-d365/
2025-05-26 11:39:05,883 - INFO - HTML file already exists for https://www.d365stuff.co/dynamicscon-march-2021-companion-logic-apps-d365/, reading from disk
2025-05-26 11:39:05,892 - INFO - Content unchanged for posts/dynamicscon-march-2021-companion-logic-apps-d365.md, skipping save
2025-05-26 11:39:05,929 - ERROR - Error saving MarkItDown markdown: [Errno 36] File name too long: '<article class="post-full post featured no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2021-03-23">23 March 2021</time>\n</section>\n<h1 class="post-full-title">DynamicsCon March 2021 Companion - Logic Apps &amp; D365</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>If you saw my DynamicsCon March 2021 session about D365 integrations using Logic Apps, thank you! \xa0If you didn\'t, you can see it below on YouTube. \xa0If you didn\'t see the session, and don\'t want to watch the YouTube video, that\'s cool too. \xa0This post can still guide you through your first Logic Apps app with D365.</p><figure class="kg-card kg-embed-card"><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="113" src="https://www.youtube.com/embed/67I4VxXnVZc?feature=oembed" width="200"></iframe></figure><p>The session was largely based off of a post I made earlier, <a href="https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/">GET and POST Stuff via Logic Apps</a>. \xa0Here, I\'ll go into more detail on what I covered in the session, the aforementioned post, and recommend further reading.</p><p>First thing you need is to get connected, and to get connected you need to register an Azure Portal App, and then to register the external application in D365. \xa0Peter Ramer wrote the best walkthrough, with screenshots, to do this in his blog post <a href="https://dynamics365musings.com/use-postman-to-call-d365-data-entities/?ref=d365stuff.co">here</a>. \xa0</p><p>With registration out of the way, we can follow the session agenda:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="745" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image.png 600w, https://www.d365stuff.co/content/images/size/w1000/2021/03/image.png 1000w, https://www.d365stuff.co/content/images/2021/03/image.png 1212w" width="1212"/></figure><h3 id="introduction">Introduction</h3><p>What is Azure Logic Apps? \xa0<a href="https://docs.microsoft.com/en-us/azure/logic-apps/logic-apps-overview?ref=d365stuff.co#:~:text=Azure%20Logic%20Apps%20is%20a,services%20across%20enterprises%20or%20organizations.">Azure Logic Apps is a cloud service that helps you schedule, automate, and orchestrate tasks, business processes, and workflows when you need to integrate apps, data, systems, and services across enterprises or organizations.</a> \xa0</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="544" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-13.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-13.png 600w, https://www.d365stuff.co/content/images/2021/03/image-13.png 969w" width="969"/></figure><h3 id="pushing-data-into-d365">Pushing Data into D365</h3><p><strong>Enqueue API</strong></p><p>Sending an HTTP POST to D365\'s Enqueue API is by far my favorite way to send data to D365. \xa0One of the reasons is because the API isn\'t throttled. \xa0The other reasons are that I believe [1] D365 is the heart/center of the ecosystem, [2] integrations must be tangible and transparent, and [3] integrations must scale. </p><p>Using the Enqueue API makes integrations as transparent as possible. \xa0All files, good or bad, will be visible in D365. \xa0The staging data is also visible, and everything is timestamped. \xa0</p><p>The Enqueue API has the best scope and scale. \xa0It can handle anything a data project can, which means composite entities and XSLT transformations are in play. \xa0I\'d rather get the file safely to D365 as quickly as possible, and do all my transformations and processing in D365. \xa0Also, once the file is received, you can do bulk processing by either overriding the copyCustomStagingToTarget method (another good way to transform data) or assign threads under Data management &gt; Framework parameters &gt; Entity settings. \xa0Moving the message processing to D365 prevents timeout and transactional scope headaches.</p><p>In the video, I push a simple, but large, 100,000 record demand forecast file. \xa0The main takeaway is how to authenticate and POST:</p><figure class="kg-card kg-image-card kg-card-hascaption"><img alt="" class="kg-image" height="424" loading="lazy" src="https://www.d365stuff.co/content/images/2021/03/image-4.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-4.png 600w, https://www.d365stuff.co/content/images/2021/03/image-4.png 700w" width="700"/><figcaption>Add /api/connector/enqueue/[DataProjectGUID]?entity=[EntityName]&amp;company=[DataAreaId] to your environment URL</figcaption></figure><p>The URI GUID comes from the recurring data job that you create in D365. \xa0The Application Id in the job must match the Application Id in the Logic App\'s Authentication section.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="545" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-14.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-14.png 600w, https://www.d365stuff.co/content/images/2021/03/image-14.png 964w" width="964"/></figure><p></p><p><strong>Message Status API</strong></p><p>Integrations don\'t need to be catapults. \xa0Any successful POST to the Enqueue API will return a successful 200 message, whether the data gets to its final destination table or not. \xa0The message status in D365 can be tracked by calling the Message Status API.</p><p>The Message Status API is very straight forward to call. \xa0The URI is the same for all messages and entities in an instance: add /data/DataManagementDefinitionGroups/Microsoft.Dynamics.DataEntities.GetMessageStatus to the end of your environment URL. \xa0Then, all you need to do is pass the Message Id (GUID) that was returned from your POST enqueue:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="455" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-3.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-3.png 600w, https://www.d365stuff.co/content/images/2021/03/image-3.png 794w" width="794"/></figure><p>Here is a list of all the statuses that can be returned:</p><!--kg-card-begin: html--><table class="table" style=\'box-sizing: inherit; border-collapse: collapse; border-spacing: 0px; outline-color: inherit; table-layout: auto; width: 662px; font-size: 0.875rem; color: rgb(23, 23, 23); font-family: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;\'><thead style="box-sizing: inherit; outline-color: inherit;"><tr style="box-sizing: inherit; outline-color: inherit;"><th style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-width: 0px 0px 1px; border-color: initial; border-top-style: initial; border-right-style: solid; border-bottom-style: initial; border-left-style: solid;">Value</th><th style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-width: 0px 0px 1px; border-color: initial; border-top-style: initial; border-right-style: solid; border-bottom-style: initial; border-left-style: solid;">Meaning</th></tr></thead><tbody style="box-sizing: inherit; outline-color: inherit;"><tr style="box-sizing: inherit; outline-color: inherit;"><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">Enqueued</td><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">The file has been successfully enqueued to blob storage</td></tr><tr style="box-sizing: inherit; outline-color: inherit;"><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">Dequeued</td><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">The file has been successfully dequeued from blob storage</td></tr><tr style="box-sizing: inherit; outline-color: inherit;"><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">Acked</td><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">The exported file has been acknowledged to be downloaded by the external application</td></tr><tr style="box-sizing: inherit; outline-color: inherit;"><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">Preprocessing</td><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">The import/export operation is pre-processing the request</td></tr><tr style="box-sizing: inherit; outline-color: inherit;"><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">Processing</td><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">The import/export operation is in process</td></tr><tr style="box-sizing: inherit; outline-color: inherit;"><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">Processed</td><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">The import/export operation completed successfully</td></tr><tr style="box-sizing: inherit; outline-color: inherit;"><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">PreProcessingError</td><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">The import/export operation failed in the pre-processing stage</td></tr><tr style="box-sizing: inherit; outline-color: inherit;"><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">ProcessedWithErrors</td><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">The import/export operation completed with errors</td></tr><tr style="box-sizing: inherit; outline-color: inherit;"><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">PostProcessingFailed</td><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">the import/export operation failed during post-processing</td></tr></tbody></table><!--kg-card-end: html--><p><strong>Download message from enqueue API within D365</strong></p><p>Taking the enqueue API a step farther, you can do an extension to download files that are pushed to D365 from Data Management. \xa0Here\'s a tweet that shows what it looks like, with a link to an <a href="https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/">old blog post</a> with the code to download files:</p><!--kg-card-begin: html--><blockquote class="twitter-tweet"><p dir="ltr" lang="en">DMFExecutionHistoryWorkspace is my new favorite form to extend with a little download file from temporary storage button. Any that is my new favorite error testing friend. Used code from my old post <a href="https://t.co/YIMLEtRxml?ref=d365stuff.co">https://t.co/YIMLEtRxml</a> <a href="https://t.co/WfHB2o7vtS?ref=d365stuff.co">pic.twitter.com/WfHB2o7vtS</a></p>— Michael Stashwick (@D365Stuff) <a href="https://twitter.com/D365Stuff/status/1369793676751306754?ref_src=twsrc%5Etfw&amp;ref=d365stuff.co">March 10, 2021</a></blockquote> <script async="" charset="utf-8" src="https://platform.twitter.com/widgets.js"></script><!--kg-card-end: html--><p>Even if you push a file that is completely incompatible with your integration, you can still download it and check it out. \xa0I think this is very important to building transparent integrations in D365, and with a workspace or PowerBI, you can now be proactive on failures instead of reactive. \xa0If you\'re in retail, and are integrating return or sales orders, you don\'t want to find out that an order was missed by the customer calling you, wondering what\'s going on. \xa0This framework allows you to see the lifecycle of all files and data, and proactively troubleshoot them if necessary.</p><h3 id="pulling-data-out-of-d365">Pulling Data out of D365</h3><p>Getting data out of D365 is a bit trickier than getting it in. \xa0The two main noninteractive approaches to use are ODATA are the Dequeue API. \xa0ODATA is easy to query, but has dataset limitations and there are usually some issues around transforming D365\'s native JSON output. \xa0The Dequeue API can handle much larger datasets, but has its own orchestration issues, and the output is a zip file, which can require additional development work to handle.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="545" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-12.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-12.png 600w, https://www.d365stuff.co/content/images/2021/03/image-12.png 968w" width="968"/></figure><p>The other option is to leverage a BI solution for large integrated datasets. \xa0If you\'re already extracting table snapshots for reporting on the regular, why not reuse those snapshots for integrations?</p><p><strong>ODATA</strong></p><p>The nice thing about pulling data out of D365 via ODATA is that it requires a low level of effort. \xa0It\'s a simple HTTP GET with your environment URL plus /data/[PublicEntityName]. \xa0The entity name is case sensitive so always navigate to it in a web browser to make sure it\'s valid first.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="474" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-10.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-10.png 600w, https://www.d365stuff.co/content/images/2021/03/image-10.png 977w" width="977"/></figure><p><strong>Excel and ODATA/JSON</strong></p><p>If you\'re having a hard time interpreting JSON, you can bring it into Excel. \xa0If you have a JSON flat file you can import it into Excel From File:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="685" loading="lazy" src="https://www.d365stuff.co/content/images/2021/03/image-1.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-1.png 600w, https://www.d365stuff.co/content/images/2021/03/image-1.png 642w" width="642"/></figure><p>You can also connect directly to D365\'s ODATA endpoint:</p><figure class="kg-card kg-image-card kg-card-hascaption"><img alt="" class="kg-image" height="645" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-2.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-2.png 600w, https://www.d365stuff.co/content/images/2021/03/image-2.png 860w" width="860"/><figcaption>Be careful with large datasets!</figcaption></figure><p><strong>Dequeue API</strong></p><p>Step one, HTTP GET from your dequeue endpoint. \xa0There are no parameters to pass.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="461" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-5.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-5.png 600w, https://www.d365stuff.co/content/images/2021/03/image-5.png 986w" width="986"/></figure><p>Step two, take the payload [body] to create a schema to parse all of the returned values. \xa0The DownloadLocation is the link to download the data package.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="500" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-6.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-6.png 600w, https://www.d365stuff.co/content/images/2021/03/image-6.png 890w" width="890"/></figure><p>Step three, download it. This is a simple GET with the DownloadLocation, but you need your D365 OAuth credentials to authenticate:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="386" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-7.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-7.png 600w, https://www.d365stuff.co/content/images/2021/03/image-7.png 876w" width="876"/></figure><p>Now you have a data package [zip] to have fun with. \xa0Lots of options from here. \xa0</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="537" loading="lazy" src="https://www.d365stuff.co/content/images/2021/03/image-8.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-8.png 600w, https://www.d365stuff.co/content/images/2021/03/image-8.png 709w" width="709"/></figure><p>I used the Azure Blob Storage connector to unzip the data package (after the Create step from above). \xa0Timing issues aside, extracting/unzipping is the largest pain point with this approach since there aren\'t a lot of tools to do it, and I haven\'t seen a way to do it on the fly. </p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="530" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-11.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-11.png 600w, https://www.d365stuff.co/content/images/2021/03/image-11.png 766w" width="766"/></figure><p>Final step, is to acknowledge that you have the file. \xa0This is how D365 knows you\'ve successfully done what you intended, and will mark the file so you don\'t download it again when you call the API the next time. \xa0All you need to pass is the MessageId [GUID] in the body.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img alt="" class="kg-image" height="314" loading="lazy" src="https://www.d365stuff.co/content/images/2021/03/image-9.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-9.png 600w, https://www.d365stuff.co/content/images/2021/03/image-9.png 669w" width="669"/><figcaption>The URI is your environment URL plus /api/connector/ack/[DataProjectGUID]</figcaption></figure><h3 id="pushing-data-out-of-d365">Pushing Data out of D365</h3><p>This isn\'t just about pushing data out of D365, this is how to call a Logic App from D365. \xa0Any Logic App. \xa0One of the best use cases is to push a JSON message (hello FormJSONSerializer class), but it can kick off any Logic App.</p><p>First, make a Logic App that uses the trigger, \'When a HTTP request is received\'. \xa0The URL from the trigger is what is used to make the call in D365: \xa0</p><pre><code>class dynConCallLogicApp\n{\n    static void Main(Args args)\n    {\n        RetailCommonWebAPI webApi = RetailCommonWebAPI::construct();        \n        str requestURI = \'https://prod-24.eastus.logic.azure.com:443/workflows/whateverYourLogicAppEndpointIs\';\n        str json = \'{"text":"DynamicsCon"}\';\n\n        webApi.makePostRequest(requestURI, json, \'\', \'application/json\');\n    }\n\n}</code></pre><h3 id="links-for-more-info-and-documentation-">Links for more info and documentation:</h3><ul><li><a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/recurring-integrations?ref=d365stuff.co">D365 recurring integrations</a></li><li><a href="https://docs.microsoft.com/en-us/azure/logic-apps/logic-apps-limits-and-config?ref=d365stuff.co">Limits and configuration information for Azure Logic Apps</a></li><li><a href="https://docs.microsoft.com/en-us/azure/logic-apps/logic-apps-exception-handling?ref=d365stuff.co">Handle errors and exceptions in Azure Logic Apps</a></li><li><a href="https://docs.microsoft.com/en-us/azure/logic-apps/handle-throttling-problems-429-errors?ref=d365stuff.co">Handle throttling problems (429 - "Too many requests" errors) in Azure Logic Apps</a></li><li><a href="https://docs.microsoft.com/en-us/azure/logic-apps/logic-apps-batch-process-send-receive-messages?ref=d365stuff.co">Send, receive, and batch process messages in Azure Logic Apps</a></li><li><a href="https://docs.microsoft.com/en-us/azure/logic-apps/monitor-logic-apps?ref=d365stuff.co">Monitor run status, review trigger history, and set up alerts for Azure Logic Apps</a></li><li><a href="https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/">Call a D365 web service (and more) from Logic Apps</a></li></ul>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/dynamicscon-march-2021-companion-logic-apps-d365/";  \n\t\t\t\t\tthis.page.identifier = "ghost-60550cca65e3a6003bc8c74b"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
OSError: [Errno 36] File name too long: '<article class="post-full post featured no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2021-03-23">23 March 2021</time>\n</section>\n<h1 class="post-full-title">DynamicsCon March 2021 Companion - Logic Apps &amp; D365</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>If you saw my DynamicsCon March 2021 session about D365 integrations using Logic Apps, thank you! \xa0If you didn\'t, you can see it below on YouTube. \xa0If you didn\'t see the session, and don\'t want to watch the YouTube video, that\'s cool too. \xa0This post can still guide you through your first Logic Apps app with D365.</p><figure class="kg-card kg-embed-card"><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="113" src="https://www.youtube.com/embed/67I4VxXnVZc?feature=oembed" width="200"></iframe></figure><p>The session was largely based off of a post I made earlier, <a href="https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/">GET and POST Stuff via Logic Apps</a>. \xa0Here, I\'ll go into more detail on what I covered in the session, the aforementioned post, and recommend further reading.</p><p>First thing you need is to get connected, and to get connected you need to register an Azure Portal App, and then to register the external application in D365. \xa0Peter Ramer wrote the best walkthrough, with screenshots, to do this in his blog post <a href="https://dynamics365musings.com/use-postman-to-call-d365-data-entities/?ref=d365stuff.co">here</a>. \xa0</p><p>With registration out of the way, we can follow the session agenda:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="745" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image.png 600w, https://www.d365stuff.co/content/images/size/w1000/2021/03/image.png 1000w, https://www.d365stuff.co/content/images/2021/03/image.png 1212w" width="1212"/></figure><h3 id="introduction">Introduction</h3><p>What is Azure Logic Apps? \xa0<a href="https://docs.microsoft.com/en-us/azure/logic-apps/logic-apps-overview?ref=d365stuff.co#:~:text=Azure%20Logic%20Apps%20is%20a,services%20across%20enterprises%20or%20organizations.">Azure Logic Apps is a cloud service that helps you schedule, automate, and orchestrate tasks, business processes, and workflows when you need to integrate apps, data, systems, and services across enterprises or organizations.</a> \xa0</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="544" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-13.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-13.png 600w, https://www.d365stuff.co/content/images/2021/03/image-13.png 969w" width="969"/></figure><h3 id="pushing-data-into-d365">Pushing Data into D365</h3><p><strong>Enqueue API</strong></p><p>Sending an HTTP POST to D365\'s Enqueue API is by far my favorite way to send data to D365. \xa0One of the reasons is because the API isn\'t throttled. \xa0The other reasons are that I believe [1] D365 is the heart/center of the ecosystem, [2] integrations must be tangible and transparent, and [3] integrations must scale. </p><p>Using the Enqueue API makes integrations as transparent as possible. \xa0All files, good or bad, will be visible in D365. \xa0The staging data is also visible, and everything is timestamped. \xa0</p><p>The Enqueue API has the best scope and scale. \xa0It can handle anything a data project can, which means composite entities and XSLT transformations are in play. \xa0I\'d rather get the file safely to D365 as quickly as possible, and do all my transformations and processing in D365. \xa0Also, once the file is received, you can do bulk processing by either overriding the copyCustomStagingToTarget method (another good way to transform data) or assign threads under Data management &gt; Framework parameters &gt; Entity settings. \xa0Moving the message processing to D365 prevents timeout and transactional scope headaches.</p><p>In the video, I push a simple, but large, 100,000 record demand forecast file. \xa0The main takeaway is how to authenticate and POST:</p><figure class="kg-card kg-image-card kg-card-hascaption"><img alt="" class="kg-image" height="424" loading="lazy" src="https://www.d365stuff.co/content/images/2021/03/image-4.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-4.png 600w, https://www.d365stuff.co/content/images/2021/03/image-4.png 700w" width="700"/><figcaption>Add /api/connector/enqueue/[DataProjectGUID]?entity=[EntityName]&amp;company=[DataAreaId] to your environment URL</figcaption></figure><p>The URI GUID comes from the recurring data job that you create in D365. \xa0The Application Id in the job must match the Application Id in the Logic App\'s Authentication section.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="545" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-14.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-14.png 600w, https://www.d365stuff.co/content/images/2021/03/image-14.png 964w" width="964"/></figure><p></p><p><strong>Message Status API</strong></p><p>Integrations don\'t need to be catapults. \xa0Any successful POST to the Enqueue API will return a successful 200 message, whether the data gets to its final destination table or not. \xa0The message status in D365 can be tracked by calling the Message Status API.</p><p>The Message Status API is very straight forward to call. \xa0The URI is the same for all messages and entities in an instance: add /data/DataManagementDefinitionGroups/Microsoft.Dynamics.DataEntities.GetMessageStatus to the end of your environment URL. \xa0Then, all you need to do is pass the Message Id (GUID) that was returned from your POST enqueue:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="455" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-3.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-3.png 600w, https://www.d365stuff.co/content/images/2021/03/image-3.png 794w" width="794"/></figure><p>Here is a list of all the statuses that can be returned:</p><!--kg-card-begin: html--><table class="table" style=\'box-sizing: inherit; border-collapse: collapse; border-spacing: 0px; outline-color: inherit; table-layout: auto; width: 662px; font-size: 0.875rem; color: rgb(23, 23, 23); font-family: "Segoe UI", SegoeUI, "Helvetica Neue", Helvetica, Arial, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;\'><thead style="box-sizing: inherit; outline-color: inherit;"><tr style="box-sizing: inherit; outline-color: inherit;"><th style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-width: 0px 0px 1px; border-color: initial; border-top-style: initial; border-right-style: solid; border-bottom-style: initial; border-left-style: solid;">Value</th><th style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-width: 0px 0px 1px; border-color: initial; border-top-style: initial; border-right-style: solid; border-bottom-style: initial; border-left-style: solid;">Meaning</th></tr></thead><tbody style="box-sizing: inherit; outline-color: inherit;"><tr style="box-sizing: inherit; outline-color: inherit;"><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">Enqueued</td><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">The file has been successfully enqueued to blob storage</td></tr><tr style="box-sizing: inherit; outline-color: inherit;"><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">Dequeued</td><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">The file has been successfully dequeued from blob storage</td></tr><tr style="box-sizing: inherit; outline-color: inherit;"><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">Acked</td><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">The exported file has been acknowledged to be downloaded by the external application</td></tr><tr style="box-sizing: inherit; outline-color: inherit;"><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">Preprocessing</td><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">The import/export operation is pre-processing the request</td></tr><tr style="box-sizing: inherit; outline-color: inherit;"><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">Processing</td><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">The import/export operation is in process</td></tr><tr style="box-sizing: inherit; outline-color: inherit;"><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">Processed</td><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">The import/export operation completed successfully</td></tr><tr style="box-sizing: inherit; outline-color: inherit;"><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">PreProcessingError</td><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">The import/export operation failed in the pre-processing stage</td></tr><tr style="box-sizing: inherit; outline-color: inherit;"><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">ProcessedWithErrors</td><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">The import/export operation completed with errors</td></tr><tr style="box-sizing: inherit; outline-color: inherit;"><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">PostProcessingFailed</td><td style="box-sizing: inherit; padding: 0.75rem 1rem; outline-color: inherit; text-align: left; display: table-cell; overflow-wrap: break-word; line-height: 1.5; vertical-align: top; border-top-width: ; border-top-color: ; border-right: 0px solid; border-left: 0px solid; border-bottom: 0px solid; border-top-style: solid;">the import/export operation failed during post-processing</td></tr></tbody></table><!--kg-card-end: html--><p><strong>Download message from enqueue API within D365</strong></p><p>Taking the enqueue API a step farther, you can do an extension to download files that are pushed to D365 from Data Management. \xa0Here\'s a tweet that shows what it looks like, with a link to an <a href="https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/">old blog post</a> with the code to download files:</p><!--kg-card-begin: html--><blockquote class="twitter-tweet"><p dir="ltr" lang="en">DMFExecutionHistoryWorkspace is my new favorite form to extend with a little download file from temporary storage button. Any that is my new favorite error testing friend. Used code from my old post <a href="https://t.co/YIMLEtRxml?ref=d365stuff.co">https://t.co/YIMLEtRxml</a> <a href="https://t.co/WfHB2o7vtS?ref=d365stuff.co">pic.twitter.com/WfHB2o7vtS</a></p>— Michael Stashwick (@D365Stuff) <a href="https://twitter.com/D365Stuff/status/1369793676751306754?ref_src=twsrc%5Etfw&amp;ref=d365stuff.co">March 10, 2021</a></blockquote> <script async="" charset="utf-8" src="https://platform.twitter.com/widgets.js"></script><!--kg-card-end: html--><p>Even if you push a file that is completely incompatible with your integration, you can still download it and check it out. \xa0I think this is very important to building transparent integrations in D365, and with a workspace or PowerBI, you can now be proactive on failures instead of reactive. \xa0If you\'re in retail, and are integrating return or sales orders, you don\'t want to find out that an order was missed by the customer calling you, wondering what\'s going on. \xa0This framework allows you to see the lifecycle of all files and data, and proactively troubleshoot them if necessary.</p><h3 id="pulling-data-out-of-d365">Pulling Data out of D365</h3><p>Getting data out of D365 is a bit trickier than getting it in. \xa0The two main noninteractive approaches to use are ODATA are the Dequeue API. \xa0ODATA is easy to query, but has dataset limitations and there are usually some issues around transforming D365\'s native JSON output. \xa0The Dequeue API can handle much larger datasets, but has its own orchestration issues, and the output is a zip file, which can require additional development work to handle.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="545" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-12.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-12.png 600w, https://www.d365stuff.co/content/images/2021/03/image-12.png 968w" width="968"/></figure><p>The other option is to leverage a BI solution for large integrated datasets. \xa0If you\'re already extracting table snapshots for reporting on the regular, why not reuse those snapshots for integrations?</p><p><strong>ODATA</strong></p><p>The nice thing about pulling data out of D365 via ODATA is that it requires a low level of effort. \xa0It\'s a simple HTTP GET with your environment URL plus /data/[PublicEntityName]. \xa0The entity name is case sensitive so always navigate to it in a web browser to make sure it\'s valid first.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="474" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-10.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-10.png 600w, https://www.d365stuff.co/content/images/2021/03/image-10.png 977w" width="977"/></figure><p><strong>Excel and ODATA/JSON</strong></p><p>If you\'re having a hard time interpreting JSON, you can bring it into Excel. \xa0If you have a JSON flat file you can import it into Excel From File:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="685" loading="lazy" src="https://www.d365stuff.co/content/images/2021/03/image-1.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-1.png 600w, https://www.d365stuff.co/content/images/2021/03/image-1.png 642w" width="642"/></figure><p>You can also connect directly to D365\'s ODATA endpoint:</p><figure class="kg-card kg-image-card kg-card-hascaption"><img alt="" class="kg-image" height="645" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-2.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-2.png 600w, https://www.d365stuff.co/content/images/2021/03/image-2.png 860w" width="860"/><figcaption>Be careful with large datasets!</figcaption></figure><p><strong>Dequeue API</strong></p><p>Step one, HTTP GET from your dequeue endpoint. \xa0There are no parameters to pass.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="461" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-5.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-5.png 600w, https://www.d365stuff.co/content/images/2021/03/image-5.png 986w" width="986"/></figure><p>Step two, take the payload [body] to create a schema to parse all of the returned values. \xa0The DownloadLocation is the link to download the data package.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="500" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-6.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-6.png 600w, https://www.d365stuff.co/content/images/2021/03/image-6.png 890w" width="890"/></figure><p>Step three, download it. This is a simple GET with the DownloadLocation, but you need your D365 OAuth credentials to authenticate:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="386" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-7.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-7.png 600w, https://www.d365stuff.co/content/images/2021/03/image-7.png 876w" width="876"/></figure><p>Now you have a data package [zip] to have fun with. \xa0Lots of options from here. \xa0</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="537" loading="lazy" src="https://www.d365stuff.co/content/images/2021/03/image-8.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-8.png 600w, https://www.d365stuff.co/content/images/2021/03/image-8.png 709w" width="709"/></figure><p>I used the Azure Blob Storage connector to unzip the data package (after the Create step from above). \xa0Timing issues aside, extracting/unzipping is the largest pain point with this approach since there aren\'t a lot of tools to do it, and I haven\'t seen a way to do it on the fly. </p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="530" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2021/03/image-11.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-11.png 600w, https://www.d365stuff.co/content/images/2021/03/image-11.png 766w" width="766"/></figure><p>Final step, is to acknowledge that you have the file. \xa0This is how D365 knows you\'ve successfully done what you intended, and will mark the file so you don\'t download it again when you call the API the next time. \xa0All you need to pass is the MessageId [GUID] in the body.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img alt="" class="kg-image" height="314" loading="lazy" src="https://www.d365stuff.co/content/images/2021/03/image-9.png" srcset="https://www.d365stuff.co/content/images/size/w600/2021/03/image-9.png 600w, https://www.d365stuff.co/content/images/2021/03/image-9.png 669w" width="669"/><figcaption>The URI is your environment URL plus /api/connector/ack/[DataProjectGUID]</figcaption></figure><h3 id="pushing-data-out-of-d365">Pushing Data out of D365</h3><p>This isn\'t just about pushing data out of D365, this is how to call a Logic App from D365. \xa0Any Logic App. \xa0One of the best use cases is to push a JSON message (hello FormJSONSerializer class), but it can kick off any Logic App.</p><p>First, make a Logic App that uses the trigger, \'When a HTTP request is received\'. \xa0The URL from the trigger is what is used to make the call in D365: \xa0</p><pre><code>class dynConCallLogicApp\n{\n    static void Main(Args args)\n    {\n        RetailCommonWebAPI webApi = RetailCommonWebAPI::construct();        \n        str requestURI = \'https://prod-24.eastus.logic.azure.com:443/workflows/whateverYourLogicAppEndpointIs\';\n        str json = \'{"text":"DynamicsCon"}\';\n\n        webApi.makePostRequest(requestURI, json, \'\', \'application/json\');\n    }\n\n}</code></pre><h3 id="links-for-more-info-and-documentation-">Links for more info and documentation:</h3><ul><li><a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/recurring-integrations?ref=d365stuff.co">D365 recurring integrations</a></li><li><a href="https://docs.microsoft.com/en-us/azure/logic-apps/logic-apps-limits-and-config?ref=d365stuff.co">Limits and configuration information for Azure Logic Apps</a></li><li><a href="https://docs.microsoft.com/en-us/azure/logic-apps/logic-apps-exception-handling?ref=d365stuff.co">Handle errors and exceptions in Azure Logic Apps</a></li><li><a href="https://docs.microsoft.com/en-us/azure/logic-apps/handle-throttling-problems-429-errors?ref=d365stuff.co">Handle throttling problems (429 - "Too many requests" errors) in Azure Logic Apps</a></li><li><a href="https://docs.microsoft.com/en-us/azure/logic-apps/logic-apps-batch-process-send-receive-messages?ref=d365stuff.co">Send, receive, and batch process messages in Azure Logic Apps</a></li><li><a href="https://docs.microsoft.com/en-us/azure/logic-apps/monitor-logic-apps?ref=d365stuff.co">Monitor run status, review trigger history, and set up alerts for Azure Logic Apps</a></li><li><a href="https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/">Call a D365 web service (and more) from Logic Apps</a></li></ul>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/dynamicscon-march-2021-companion-logic-apps-d365/";  \n\t\t\t\t\tthis.page.identifier = "ghost-60550cca65e3a6003bc8c74b"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:05,930 - INFO - Processing: https://www.d365stuff.co/does-not-implement-the-delegate-convertpurchtablefieldtovendinvoicedelegate/
2025-05-26 11:39:05,930 - INFO - HTML file already exists for https://www.d365stuff.co/does-not-implement-the-delegate-convertpurchtablefieldtovendinvoicedelegate/, reading from disk
2025-05-26 11:39:05,935 - INFO - Content unchanged for posts/does-not-implement-the-delegate-convertpurchtablef.md, skipping save
2025-05-26 11:39:05,976 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-d365 tag-errors tag-x tag-delegates no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2020-12-22">22 December 2020</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">... does not implement the delegate \'convertPurchTableFieldToVendInvoiceDelegate\'</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>This is a fun surprise that can take a bit of digging. \xa0When adding fields to the PurchTable table\'s HeaderToLineUpdate field group, this error can pop up if they aren\'t accounted for in the convertPurchTableFieldToVendInvoice delegate, which is part of the VendInvoiceTableToLineUpdate class which copies PO fields to the invoice. \xa0</p><p>The first step in subscribing is to find the class\' delegate in the Designer and copy the event handler method:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="622" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2020/12/image.png" srcset="https://www.d365stuff.co/content/images/size/w600/2020/12/image.png 600w, https://www.d365stuff.co/content/images/size/w1000/2020/12/image.png 1000w, https://www.d365stuff.co/content/images/2020/12/image.png 1388w" width="1388"/></figure><p>Next, paste that method into a new class:</p><pre><code>d365StuffClass\n{\n\t[SubscribesTo(classStr(VendInvoiceTableToLineUpdate), staticDelegateStr(VendInvoiceTableToLineUpdate, convertPurchTableFieldToVendInvoiceDelegate))]\n\tpublic static void VendInvoiceTableToLineUpdate_convertPurchTableFieldToVendInvoiceDelegate(FieldId _purchTableFieldId, EventHandlerResult _result)\n\t{\n\t\tswitch(_purchTableFieldId)\n\t\t{\n\t\t\tcase fieldNum(PurchTable, DlvMode):\n\t\t\t\t_result.result(0);\n\t\t\t\t\t\t\tbreak;\n\t\t}\n\t}\n}</code></pre><p>In this example, I\'m adding a condition for the DlvMode field. \xa0I don\'t want it to copy to the invoice, so I\'m setting the result to 0.</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/does-not-implement-the-delegate-convertpurchtablefieldtovendinvoicedelegate/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5fad7ae84eb80a0039462947"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-d365 tag-errors tag-x tag-delegates no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2020-12-22">22 December 2020</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">... does not implement the delegate \'convertPurchTableFieldToVendInvoiceDelegate\'</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>This is a fun surprise that can take a bit of digging. \xa0When adding fields to the PurchTable table\'s HeaderToLineUpdate field group, this error can pop up if they aren\'t accounted for in the convertPurchTableFieldToVendInvoice delegate, which is part of the VendInvoiceTableToLineUpdate class which copies PO fields to the invoice. \xa0</p><p>The first step in subscribing is to find the class\' delegate in the Designer and copy the event handler method:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="622" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2020/12/image.png" srcset="https://www.d365stuff.co/content/images/size/w600/2020/12/image.png 600w, https://www.d365stuff.co/content/images/size/w1000/2020/12/image.png 1000w, https://www.d365stuff.co/content/images/2020/12/image.png 1388w" width="1388"/></figure><p>Next, paste that method into a new class:</p><pre><code>d365StuffClass\n{\n\t[SubscribesTo(classStr(VendInvoiceTableToLineUpdate), staticDelegateStr(VendInvoiceTableToLineUpdate, convertPurchTableFieldToVendInvoiceDelegate))]\n\tpublic static void VendInvoiceTableToLineUpdate_convertPurchTableFieldToVendInvoiceDelegate(FieldId _purchTableFieldId, EventHandlerResult _result)\n\t{\n\t\tswitch(_purchTableFieldId)\n\t\t{\n\t\t\tcase fieldNum(PurchTable, DlvMode):\n\t\t\t\t_result.result(0);\n\t\t\t\t\t\t\tbreak;\n\t\t}\n\t}\n}</code></pre><p>In this example, I\'m adding a condition for the DlvMode field. \xa0I don\'t want it to copy to the invoice, so I\'m setting the result to 0.</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/does-not-implement-the-delegate-convertpurchtablefieldtovendinvoicedelegate/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5fad7ae84eb80a0039462947"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:05,977 - INFO - Processing: https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/
2025-05-26 11:39:05,977 - INFO - HTML file already exists for https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/, reading from disk
2025-05-26 11:39:05,983 - INFO - Content unchanged for posts/get-and-post-stuff-via-logic-apps.md, skipping save
2025-05-26 11:39:06,016 - ERROR - Error saving MarkItDown markdown: [Errno 36] File name too long: '<article class="post-full post tag-logic-apps tag-d365 tag-data-entity tag-json tag-integrations tag-odata tag-post-tag tag-web-services no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2020-07-01">1 July 2020</time>\n<span class="date-divider">/</span> <a href="/tag/logic-apps/">Logic Apps</a>\n</section>\n<h1 class="post-full-title">GET and POST Stuff via Logic Apps</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Sometimes you need to get stuff in and out of D365; Logic Apps help with this a lot. \xa0Here are some simple examples of GETs and POSTs that call D365 exposed web services, data entities, and metadata services.</p><h3 id="get-rest-metadata-service">GET REST Metadata Service </h3><p>The basic Logic App pattern is to:</p><!--kg-card-begin: markdown--><ol>\n<li>Execute on a schedule</li>\n<li>Perform an HTTP GET on a D365 Metadata service</li>\n<li>Put the results in a file in a Dropbox folder</li>\n</ol>\n<!--kg-card-end: markdown--><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="694" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2020/07/GetMetaDataServiceCreateFile.JPG" srcset="https://www.d365stuff.co/content/images/size/w600/2020/07/GetMetaDataServiceCreateFile.JPG 600w, https://www.d365stuff.co/content/images/size/w1000/2020/07/GetMetaDataServiceCreateFile.JPG 1000w, https://www.d365stuff.co/content/images/2020/07/GetMetaDataServiceCreateFile.JPG 1211w" width="1211"/></figure><p>The most important thing to get right is the HTTP Method. \xa0Metadata services are read only, and GET must be used. \xa0</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="700" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2020/07/GetMetaDataService.JPG" srcset="https://www.d365stuff.co/content/images/size/w600/2020/07/GetMetaDataService.JPG 600w, https://www.d365stuff.co/content/images/size/w1000/2020/07/GetMetaDataService.JPG 1000w, https://www.d365stuff.co/content/images/2020/07/GetMetaDataService.JPG 1126w" width="1126"/></figure><p>Once the Logic App is executed, an enormous file of Data Entities is made in Dropbox. \xa0Here is what part of it looks like:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="1005" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2020/07/MetadataEntitiesJSON.JPG" srcset="https://www.d365stuff.co/content/images/size/w600/2020/07/MetadataEntitiesJSON.JPG 600w, https://www.d365stuff.co/content/images/size/w1000/2020/07/MetadataEntitiesJSON.JPG 1000w, https://www.d365stuff.co/content/images/2020/07/MetadataEntitiesJSON.JPG 1518w" width="1518"/></figure><h3 id="post-exposed-web-services">POST Exposed Web Services</h3><p>Any x++ class can be exposed as a web service with service and service group objects. \xa0For this example, I found an OOB class, AvailabilityService, that can retrieve the availability for various services with a ping test. \xa0If you explore the class, you can check out possible values to pass in the MonitoringAndDiagnostics macro.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="957" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2020/07/getAvailabilityClass.JPG" srcset="https://www.d365stuff.co/content/images/size/w600/2020/07/getAvailabilityClass.JPG 600w, https://www.d365stuff.co/content/images/size/w1000/2020/07/getAvailabilityClass.JPG 1000w, https://www.d365stuff.co/content/images/2020/07/getAvailabilityClass.JPG 1403w" width="1403"/></figure><p>We\'ll use a pattern similar to what we used for the metadata service, however we\'ll POST instead of GET:</p><ol><li>Execute on a schedule</li><li>Perform an HTTP POST on a D365 service endpoint</li><li>Put the results in a file in a Dropbox folder</li></ol><p>For the POST, all of the parameters for the method are passed in the body in a JSON format. \xa0I figured out the test values by looking at the aforementioned Macro.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="727" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2020/07/POSTAvailabilityServiceParameters1Redacted.JPG" srcset="https://www.d365stuff.co/content/images/size/w600/2020/07/POSTAvailabilityServiceParameters1Redacted.JPG 600w, https://www.d365stuff.co/content/images/2020/07/POSTAvailabilityServiceParameters1Redacted.JPG 896w" width="896"/></figure><p>Once it\'s run, test results appear in Dropbox. \xa0Not the best result this time, but the Logic App worked!</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="192" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2020/07/AvailabilityServiceOutput.JPG" srcset="https://www.d365stuff.co/content/images/size/w600/2020/07/AvailabilityServiceOutput.JPG 600w, https://www.d365stuff.co/content/images/size/w1000/2020/07/AvailabilityServiceOutput.JPG 1000w, https://www.d365stuff.co/content/images/size/w1600/2020/07/AvailabilityServiceOutput.JPG 1600w, https://www.d365stuff.co/content/images/2020/07/AvailabilityServiceOutput.JPG 2183w" width="2000"/></figure><h3 id="post-data-entity-endpoint">POST Data Entity Endpoint</h3><p>This example has a bonus step that the others don\'t, getting contents from a file.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="595" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2020/07/image-1.png" srcset="https://www.d365stuff.co/content/images/size/w600/2020/07/image-1.png 600w, https://www.d365stuff.co/content/images/size/w1000/2020/07/image-1.png 1000w, https://www.d365stuff.co/content/images/2020/07/image-1.png 1319w" width="1319"/></figure><p>The Logic App pattern is:</p><ol><li>Execute on a schedule</li><li>Get the content of a file on Dropbox</li><li>Use file content to perform an HTTP POST on a D365 data entity endpoint</li><li>Put the [success] results in a file in a Dropbox folder</li></ol><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="664" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2020/07/image-6.png" srcset="https://www.d365stuff.co/content/images/size/w600/2020/07/image-6.png 600w, https://www.d365stuff.co/content/images/size/w1000/2020/07/image-6.png 1000w, https://www.d365stuff.co/content/images/2020/07/image-6.png 1185w" width="1185"/></figure><p>The trickiest part is creating the URI to POST to, and it\'s very sensitive. \xa0Here is the breakdown of the import (enqueue) API:</p><p>https://&lt;base URL&gt;/api/connector/enqueue/&lt;activity ID&gt;?entity=&lt;entity name&gt;</p><p>Here is an example from <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/recurring-integrations?ref=d365stuff.co#integration-rest-apis">Microsoft </a>using the Customer Groups data entity:</p><p><a href="https://usncax1aos.cloud.onebox.dynamics.com/en/api/connector/enqueue/%7B6D31E09F-0249-459F-94F0-AAD9C2C47B64%7D?entity=Customer+Groups&amp;ref=d365stuff.co">https://usncax1aos.cloud.onebox.dynamics.com/en/api/connector/enqueue/%7B6D31E09F-0249-459F-94F0-AAD9C2C47B64%7D?entity=Customer%20Groups</a></p><p>Company [dataAreaId] can be added at the end via &amp;. \xa0Spaces in entity names must be handled with %20. \xa0If this is wrong, the data entity message status will be stuck "in process" forever. \xa0</p><p>Having problems? \xa0A great place to debug the import method of the DMFIntegrationBridge class. \xa0There you\'ll be able to see the file imported, and also see how the entity name is matched (or not) based on the URI. \xa0</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5efd05670874790039f4d7d5"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
OSError: [Errno 36] File name too long: '<article class="post-full post tag-logic-apps tag-d365 tag-data-entity tag-json tag-integrations tag-odata tag-post-tag tag-web-services no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2020-07-01">1 July 2020</time>\n<span class="date-divider">/</span> <a href="/tag/logic-apps/">Logic Apps</a>\n</section>\n<h1 class="post-full-title">GET and POST Stuff via Logic Apps</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Sometimes you need to get stuff in and out of D365; Logic Apps help with this a lot. \xa0Here are some simple examples of GETs and POSTs that call D365 exposed web services, data entities, and metadata services.</p><h3 id="get-rest-metadata-service">GET REST Metadata Service </h3><p>The basic Logic App pattern is to:</p><!--kg-card-begin: markdown--><ol>\n<li>Execute on a schedule</li>\n<li>Perform an HTTP GET on a D365 Metadata service</li>\n<li>Put the results in a file in a Dropbox folder</li>\n</ol>\n<!--kg-card-end: markdown--><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="694" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2020/07/GetMetaDataServiceCreateFile.JPG" srcset="https://www.d365stuff.co/content/images/size/w600/2020/07/GetMetaDataServiceCreateFile.JPG 600w, https://www.d365stuff.co/content/images/size/w1000/2020/07/GetMetaDataServiceCreateFile.JPG 1000w, https://www.d365stuff.co/content/images/2020/07/GetMetaDataServiceCreateFile.JPG 1211w" width="1211"/></figure><p>The most important thing to get right is the HTTP Method. \xa0Metadata services are read only, and GET must be used. \xa0</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="700" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2020/07/GetMetaDataService.JPG" srcset="https://www.d365stuff.co/content/images/size/w600/2020/07/GetMetaDataService.JPG 600w, https://www.d365stuff.co/content/images/size/w1000/2020/07/GetMetaDataService.JPG 1000w, https://www.d365stuff.co/content/images/2020/07/GetMetaDataService.JPG 1126w" width="1126"/></figure><p>Once the Logic App is executed, an enormous file of Data Entities is made in Dropbox. \xa0Here is what part of it looks like:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="1005" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2020/07/MetadataEntitiesJSON.JPG" srcset="https://www.d365stuff.co/content/images/size/w600/2020/07/MetadataEntitiesJSON.JPG 600w, https://www.d365stuff.co/content/images/size/w1000/2020/07/MetadataEntitiesJSON.JPG 1000w, https://www.d365stuff.co/content/images/2020/07/MetadataEntitiesJSON.JPG 1518w" width="1518"/></figure><h3 id="post-exposed-web-services">POST Exposed Web Services</h3><p>Any x++ class can be exposed as a web service with service and service group objects. \xa0For this example, I found an OOB class, AvailabilityService, that can retrieve the availability for various services with a ping test. \xa0If you explore the class, you can check out possible values to pass in the MonitoringAndDiagnostics macro.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="957" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2020/07/getAvailabilityClass.JPG" srcset="https://www.d365stuff.co/content/images/size/w600/2020/07/getAvailabilityClass.JPG 600w, https://www.d365stuff.co/content/images/size/w1000/2020/07/getAvailabilityClass.JPG 1000w, https://www.d365stuff.co/content/images/2020/07/getAvailabilityClass.JPG 1403w" width="1403"/></figure><p>We\'ll use a pattern similar to what we used for the metadata service, however we\'ll POST instead of GET:</p><ol><li>Execute on a schedule</li><li>Perform an HTTP POST on a D365 service endpoint</li><li>Put the results in a file in a Dropbox folder</li></ol><p>For the POST, all of the parameters for the method are passed in the body in a JSON format. \xa0I figured out the test values by looking at the aforementioned Macro.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="727" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2020/07/POSTAvailabilityServiceParameters1Redacted.JPG" srcset="https://www.d365stuff.co/content/images/size/w600/2020/07/POSTAvailabilityServiceParameters1Redacted.JPG 600w, https://www.d365stuff.co/content/images/2020/07/POSTAvailabilityServiceParameters1Redacted.JPG 896w" width="896"/></figure><p>Once it\'s run, test results appear in Dropbox. \xa0Not the best result this time, but the Logic App worked!</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="192" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2020/07/AvailabilityServiceOutput.JPG" srcset="https://www.d365stuff.co/content/images/size/w600/2020/07/AvailabilityServiceOutput.JPG 600w, https://www.d365stuff.co/content/images/size/w1000/2020/07/AvailabilityServiceOutput.JPG 1000w, https://www.d365stuff.co/content/images/size/w1600/2020/07/AvailabilityServiceOutput.JPG 1600w, https://www.d365stuff.co/content/images/2020/07/AvailabilityServiceOutput.JPG 2183w" width="2000"/></figure><h3 id="post-data-entity-endpoint">POST Data Entity Endpoint</h3><p>This example has a bonus step that the others don\'t, getting contents from a file.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="595" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2020/07/image-1.png" srcset="https://www.d365stuff.co/content/images/size/w600/2020/07/image-1.png 600w, https://www.d365stuff.co/content/images/size/w1000/2020/07/image-1.png 1000w, https://www.d365stuff.co/content/images/2020/07/image-1.png 1319w" width="1319"/></figure><p>The Logic App pattern is:</p><ol><li>Execute on a schedule</li><li>Get the content of a file on Dropbox</li><li>Use file content to perform an HTTP POST on a D365 data entity endpoint</li><li>Put the [success] results in a file in a Dropbox folder</li></ol><figure class="kg-card kg-image-card"><img alt="" class="kg-image" height="664" loading="lazy" sizes="(min-width: 720px) 720px" src="https://www.d365stuff.co/content/images/2020/07/image-6.png" srcset="https://www.d365stuff.co/content/images/size/w600/2020/07/image-6.png 600w, https://www.d365stuff.co/content/images/size/w1000/2020/07/image-6.png 1000w, https://www.d365stuff.co/content/images/2020/07/image-6.png 1185w" width="1185"/></figure><p>The trickiest part is creating the URI to POST to, and it\'s very sensitive. \xa0Here is the breakdown of the import (enqueue) API:</p><p>https://&lt;base URL&gt;/api/connector/enqueue/&lt;activity ID&gt;?entity=&lt;entity name&gt;</p><p>Here is an example from <a href="https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/data-entities/recurring-integrations?ref=d365stuff.co#integration-rest-apis">Microsoft </a>using the Customer Groups data entity:</p><p><a href="https://usncax1aos.cloud.onebox.dynamics.com/en/api/connector/enqueue/%7B6D31E09F-0249-459F-94F0-AAD9C2C47B64%7D?entity=Customer+Groups&amp;ref=d365stuff.co">https://usncax1aos.cloud.onebox.dynamics.com/en/api/connector/enqueue/%7B6D31E09F-0249-459F-94F0-AAD9C2C47B64%7D?entity=Customer%20Groups</a></p><p>Company [dataAreaId] can be added at the end via &amp;. \xa0Spaces in entity names must be handled with %20. \xa0If this is wrong, the data entity message status will be stuck "in process" forever. \xa0</p><p>Having problems? \xa0A great place to debug the import method of the DMFIntegrationBridge class. \xa0There you\'ll be able to see the file imported, and also see how the entity name is matched (or not) based on the URI. \xa0</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5efd05670874790039f4d7d5"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,017 - INFO - Processing: https://www.d365stuff.co/run-multiple-instances-of-teams/
2025-05-26 11:39:06,017 - INFO - HTML file already exists for https://www.d365stuff.co/run-multiple-instances-of-teams/, reading from disk
2025-05-26 11:39:06,026 - INFO - Content unchanged for posts/run-multiple-instances-of-teams.md, skipping save
2025-05-26 11:39:06,060 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-tips-tricks no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2020-05-07">7 May 2020</time>\n<span class="date-divider">/</span> <a href="/tag/tips-tricks/">Tips Tricks</a>\n</section>\n<h1 class="post-full-title">Run Multiple Instances of Teams</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>I never thought I\'d get this (in their words) "hack" from a supply chain consultant, but apparently anything is possible in 2020. \xa0Here is a great way to run multiple desktop Teams clients at the same time. \xa0</p><p>Copy and paste the following into a text editor:</p><pre><code>@ECHO OFF\n\nREM Uses the file name as the profile name\nSET MSTEAMS_PROFILE=%~n0\nECHO - Using profile "%MSTEAMS_PROFILE%"\n\nSET "OLD_USERPROFILE=%USERPROFILE%"\nSET "USERPROFILE=%LOCALAPPDATA%\\Microsoft\\Teams\\CustomProfiles\\%MSTEAMS_PROFILE%"\n\nECHO - Launching MS Teams with profile %MSTEAMS_PROFILE%\ncd "%OLD_USERPROFILE%\\AppData\\Local\\Microsoft\\Teams"\n"%OLD_USERPROFILE%\\AppData\\Local\\Microsoft\\Teams\\Update.exe" --processStart "Teams.exe"\n</code></pre><p>Name the file whatever you want, and give it a .cmd extension.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2020/05/image.png"/></figure><p>Now with a mere double click, I can have two desktop Teams clients open, at the same time. \xa0In this example, I have my work account open and a guest account open for a customer:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2020/05/image-1.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/run-multiple-instances-of-teams/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5eb445e9a08d880039a184f3"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-tips-tricks no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2020-05-07">7 May 2020</time>\n<span class="date-divider">/</span> <a href="/tag/tips-tricks/">Tips Tricks</a>\n</section>\n<h1 class="post-full-title">Run Multiple Instances of Teams</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>I never thought I\'d get this (in their words) "hack" from a supply chain consultant, but apparently anything is possible in 2020. \xa0Here is a great way to run multiple desktop Teams clients at the same time. \xa0</p><p>Copy and paste the following into a text editor:</p><pre><code>@ECHO OFF\n\nREM Uses the file name as the profile name\nSET MSTEAMS_PROFILE=%~n0\nECHO - Using profile "%MSTEAMS_PROFILE%"\n\nSET "OLD_USERPROFILE=%USERPROFILE%"\nSET "USERPROFILE=%LOCALAPPDATA%\\Microsoft\\Teams\\CustomProfiles\\%MSTEAMS_PROFILE%"\n\nECHO - Launching MS Teams with profile %MSTEAMS_PROFILE%\ncd "%OLD_USERPROFILE%\\AppData\\Local\\Microsoft\\Teams"\n"%OLD_USERPROFILE%\\AppData\\Local\\Microsoft\\Teams\\Update.exe" --processStart "Teams.exe"\n</code></pre><p>Name the file whatever you want, and give it a .cmd extension.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2020/05/image.png"/></figure><p>Now with a mere double click, I can have two desktop Teams clients open, at the same time. \xa0In this example, I have my work account open and a guest account open for a customer:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2020/05/image-1.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/run-multiple-instances-of-teams/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5eb445e9a08d880039a184f3"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,060 - INFO - Processing: https://www.d365stuff.co/d365-enum-values-sql/
2025-05-26 11:39:06,060 - INFO - HTML file already exists for https://www.d365stuff.co/d365-enum-values-sql/, reading from disk
2025-05-26 11:39:06,065 - INFO - Content unchanged for posts/d365-enum-values-sql.md, skipping save
2025-05-26 11:39:06,094 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-sql tag-d365 tag-enumerations tag-t-sql no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2020-02-21">21 February 2020</time>\n<span class="date-divider">/</span> <a href="/tag/sql/">sql</a>\n</section>\n<h1 class="post-full-title">D365 Enum Values SQL</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>With every AX release it seems the way enumeration values are stored and referenced changes. \xa0Thanks to my good friend <a href="https://twitter.com/afzaal_qau?ref=d365stuff.co">Muhammad</a>, we now have a great SQL query to look these up in D365. \xa0Here is an example for SalesType:</p><pre><code class="language-SQL">select t1.NAME,t2.ENUMID,t2.ENUMVALUE,t2.NAME EnumValueName from ENUMIDTABLE t1\ninner join ENUMVALUETABLE t2 on t1.ID=t2.ENUMID\nwhere t1.NAME=\'SalesType\'</code></pre><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2020/02/image.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/d365-enum-values-sql/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5e500a50efabe40038103bd3"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-sql tag-d365 tag-enumerations tag-t-sql no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2020-02-21">21 February 2020</time>\n<span class="date-divider">/</span> <a href="/tag/sql/">sql</a>\n</section>\n<h1 class="post-full-title">D365 Enum Values SQL</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>With every AX release it seems the way enumeration values are stored and referenced changes. \xa0Thanks to my good friend <a href="https://twitter.com/afzaal_qau?ref=d365stuff.co">Muhammad</a>, we now have a great SQL query to look these up in D365. \xa0Here is an example for SalesType:</p><pre><code class="language-SQL">select t1.NAME,t2.ENUMID,t2.ENUMVALUE,t2.NAME EnumValueName from ENUMIDTABLE t1\ninner join ENUMVALUETABLE t2 on t1.ID=t2.ENUMID\nwhere t1.NAME=\'SalesType\'</code></pre><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2020/02/image.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/d365-enum-values-sql/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5e500a50efabe40038103bd3"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,095 - INFO - Processing: https://www.d365stuff.co/introtodomrules/
2025-05-26 11:39:06,095 - INFO - HTML file already exists for https://www.d365stuff.co/introtodomrules/, reading from disk
2025-05-26 11:39:06,100 - INFO - Content unchanged for posts/introtodomrules.md, skipping save
2025-05-26 11:39:06,132 - ERROR - Error saving MarkItDown markdown: [Errno 36] File name too long: '<article class="post-full post tag-dom tag-d365 tag-sql tag-retail featured no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-12-17">17 December 2019</time>\n<span class="date-divider">/</span> <a href="/tag/dom/">DOM</a>\n</section>\n<h1 class="post-full-title">Intro to DOM rules</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>There\'s a new sheriff in town making all sorts of rules around order fulfillment, and it goes by the name <a href="https://docs.microsoft.com/en-us/dynamics365/retail/dom?ref=d365stuff.co">DOM [Distributed Order Management]</a>. \xa0DOM is a massive new retail feature in D365 that everyone will be implementing, so it\'s important to understand DOM rules and its table structure.</p><p>Per <a href="https://docs.microsoft.com/en-us/dynamics365/retail/dom?ref=d365stuff.co">Microsoft</a>, the DOM rule types are:</p><!--kg-card-begin: markdown--><ul>\n<li>Minimum Inventory rule\n<ul>\n<li>This rule type lets organizations "ring fence" a specific quantity of a product for purposes other than order fulfillment. For example, organizations might not want DOM to consider all the inventory that is available in a store for order fulfillment. Instead, they might want to reserve some inventory for walk-in customers. When this rule type is used, you can define the minimum inventory to keep for a category of products, an individual product, or a product variant per location or group of locations.</li>\n</ul>\n</li>\n<li>Fulfillment location Priority Rule\n<ul>\n<li>This rule type lets organizations define a hierarchy of locations to establish the priority that the DOM engine considers when it tries to identify fulfillment locations for specific products. The valid range of priorities is 1 through 10, where 1 is the highest priority and 10 is the lowest priority. Locations that have higher priority are considered before locations that have lower priority. If the rule is defined as a hard constraint rule, orders are brokered only to locations that priorities are defined for.</li>\n</ul>\n</li>\n<li>Maximum rejects rule\n<ul>\n<li>This rule lets organizations define a threshold for rejections. When the threshold is reached, the DOM processor will mark an order or order line as an exception, and exclude it from further processing.</li>\n</ul>\n</li>\n<li>Maximum orders rule\n<ul>\n<li>This rule lets organizations define the maximum number of orders that a location or group of locations can process during a calendar day. If the maximum number of orders is assigned to a location in a single day, DOM won\'t assign any more orders to that location for the rest of that calendar day.</li>\n</ul>\n</li>\n<li>Maximum distance rule\n<ul>\n<li>This rule lets organizations define the maximum distance that a location or group of locations can be to fulfill the order. If overlapping maximum distance rules are defined for a location, DOM will apply the lowest maximum distance that is defined for that location.</li>\n</ul>\n</li>\n<li>Offline fulfillment location rule\n<ul>\n<li>This rule lets organizations specify a location or group of locations as offline or unavailable to DOM, so that orders can\'t be assigned to those locations for fulfillment.</li>\n</ul>\n</li>\n<li>Partial orders rule\n<ul>\n<li>This rule lets organizations define whether an order or order lines can be partially fulfilled.</li>\n</ul>\n</li>\n</ul>\n<!--kg-card-end: markdown--><p>DOM rules have a classic header and line table pattern, with table inheritance mixed in. \xa0DOMRules is the abstract table that represents the rule header, and DOMRulesLine is the abstract table that represents the rule lines. \xa0Since DOMRules and DOMRulesLine are abstract, records cannot be directly inserted in them via x++. \xa0It\'s very important to determine the type of rule being made before starting development, since it impacts the tables to declare.</p><p>Here is what the table hierarchy looks like:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/12/DOMRules-5.jpg"/></figure><p>The Name field [alone] is the unique index on the table; it is also used to join to the line level data of the DOM rule; naming DOM rules well is very important. \xa0None of the children tables can be selected in SQL, only [the abstract] DOMRules can, however only the children tables can be inserted into via x++ due to table inheritance. \xa0</p><p>DOMCatalogRules is probably the most technically unique instance, because it is the only DOMRules child table that is [also] an abstract table. \xa0In order to make a \'catalog\' rule, data must be inserted into DOMCatalogMinimumInventoryRules or DOMCatalogShipPriorityRules. \xa0This is also the only instance that has [RecId] relationships to D365 master product data.</p><p>The line level data uses the same pattern and hierarchy. \xa0There is an abstract table, DOMRulesLine, and a child table for each type of rule:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/12/DOMRulesLine-1.jpg"/></figure><p>The unique index for DOM rule line data is DOMRulesName and LineNum. \xa0The line level data joins on DOMRulesName to the header\'s Name field. \xa0</p><p>Creating DOM rules through code, or creating a data entity can seem daunting, but with proper planning, organization, and understanding of the table hierarchies and relations, it can be a little less difficult.</p><p>Happy DOMing!</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/introtodomrules/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5df9108e53b0f500380af1fb"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
OSError: [Errno 36] File name too long: '<article class="post-full post tag-dom tag-d365 tag-sql tag-retail featured no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-12-17">17 December 2019</time>\n<span class="date-divider">/</span> <a href="/tag/dom/">DOM</a>\n</section>\n<h1 class="post-full-title">Intro to DOM rules</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>There\'s a new sheriff in town making all sorts of rules around order fulfillment, and it goes by the name <a href="https://docs.microsoft.com/en-us/dynamics365/retail/dom?ref=d365stuff.co">DOM [Distributed Order Management]</a>. \xa0DOM is a massive new retail feature in D365 that everyone will be implementing, so it\'s important to understand DOM rules and its table structure.</p><p>Per <a href="https://docs.microsoft.com/en-us/dynamics365/retail/dom?ref=d365stuff.co">Microsoft</a>, the DOM rule types are:</p><!--kg-card-begin: markdown--><ul>\n<li>Minimum Inventory rule\n<ul>\n<li>This rule type lets organizations "ring fence" a specific quantity of a product for purposes other than order fulfillment. For example, organizations might not want DOM to consider all the inventory that is available in a store for order fulfillment. Instead, they might want to reserve some inventory for walk-in customers. When this rule type is used, you can define the minimum inventory to keep for a category of products, an individual product, or a product variant per location or group of locations.</li>\n</ul>\n</li>\n<li>Fulfillment location Priority Rule\n<ul>\n<li>This rule type lets organizations define a hierarchy of locations to establish the priority that the DOM engine considers when it tries to identify fulfillment locations for specific products. The valid range of priorities is 1 through 10, where 1 is the highest priority and 10 is the lowest priority. Locations that have higher priority are considered before locations that have lower priority. If the rule is defined as a hard constraint rule, orders are brokered only to locations that priorities are defined for.</li>\n</ul>\n</li>\n<li>Maximum rejects rule\n<ul>\n<li>This rule lets organizations define a threshold for rejections. When the threshold is reached, the DOM processor will mark an order or order line as an exception, and exclude it from further processing.</li>\n</ul>\n</li>\n<li>Maximum orders rule\n<ul>\n<li>This rule lets organizations define the maximum number of orders that a location or group of locations can process during a calendar day. If the maximum number of orders is assigned to a location in a single day, DOM won\'t assign any more orders to that location for the rest of that calendar day.</li>\n</ul>\n</li>\n<li>Maximum distance rule\n<ul>\n<li>This rule lets organizations define the maximum distance that a location or group of locations can be to fulfill the order. If overlapping maximum distance rules are defined for a location, DOM will apply the lowest maximum distance that is defined for that location.</li>\n</ul>\n</li>\n<li>Offline fulfillment location rule\n<ul>\n<li>This rule lets organizations specify a location or group of locations as offline or unavailable to DOM, so that orders can\'t be assigned to those locations for fulfillment.</li>\n</ul>\n</li>\n<li>Partial orders rule\n<ul>\n<li>This rule lets organizations define whether an order or order lines can be partially fulfilled.</li>\n</ul>\n</li>\n</ul>\n<!--kg-card-end: markdown--><p>DOM rules have a classic header and line table pattern, with table inheritance mixed in. \xa0DOMRules is the abstract table that represents the rule header, and DOMRulesLine is the abstract table that represents the rule lines. \xa0Since DOMRules and DOMRulesLine are abstract, records cannot be directly inserted in them via x++. \xa0It\'s very important to determine the type of rule being made before starting development, since it impacts the tables to declare.</p><p>Here is what the table hierarchy looks like:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/12/DOMRules-5.jpg"/></figure><p>The Name field [alone] is the unique index on the table; it is also used to join to the line level data of the DOM rule; naming DOM rules well is very important. \xa0None of the children tables can be selected in SQL, only [the abstract] DOMRules can, however only the children tables can be inserted into via x++ due to table inheritance. \xa0</p><p>DOMCatalogRules is probably the most technically unique instance, because it is the only DOMRules child table that is [also] an abstract table. \xa0In order to make a \'catalog\' rule, data must be inserted into DOMCatalogMinimumInventoryRules or DOMCatalogShipPriorityRules. \xa0This is also the only instance that has [RecId] relationships to D365 master product data.</p><p>The line level data uses the same pattern and hierarchy. \xa0There is an abstract table, DOMRulesLine, and a child table for each type of rule:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/12/DOMRulesLine-1.jpg"/></figure><p>The unique index for DOM rule line data is DOMRulesName and LineNum. \xa0The line level data joins on DOMRulesName to the header\'s Name field. \xa0</p><p>Creating DOM rules through code, or creating a data entity can seem daunting, but with proper planning, organization, and understanding of the table hierarchies and relations, it can be a little less difficult.</p><p>Happy DOMing!</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/introtodomrules/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5df9108e53b0f500380af1fb"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,132 - INFO - Processing: https://www.d365stuff.co/order-lines-cannot-be-deleted-while-dependent-stores/
2025-05-26 11:39:06,133 - INFO - HTML file already exists for https://www.d365stuff.co/order-lines-cannot-be-deleted-while-dependent-stores/, reading from disk
2025-05-26 11:39:06,136 - INFO - Content unchanged for posts/order-lines-cannot-be-deleted-while-dependent-stor.md, skipping save
2025-05-26 11:39:06,169 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-bugs no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-12-04">4 December 2019</time>\n<span class="date-divider">/</span> <a href="/tag/bugs/">Bugs</a>\n</section>\n<h1 class="post-full-title">Order lines cannot be deleted while dependent Stores ... exist</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>This is a frustrating bug that can happen in between DOM runs. \xa0The reason is there is a [bad] join between the SalesLine and DOMSalesLineToProcess tables, based solely on DlvMode. \xa0Until resolved, the work around is to delete DOMSalesLineToProcess records with the same DlvMode as the SalesLine record that needs to be deleted.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/12/image.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/order-lines-cannot-be-deleted-while-dependent-stores/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5de7edb94a6b5900382f78f7"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-bugs no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-12-04">4 December 2019</time>\n<span class="date-divider">/</span> <a href="/tag/bugs/">Bugs</a>\n</section>\n<h1 class="post-full-title">Order lines cannot be deleted while dependent Stores ... exist</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>This is a frustrating bug that can happen in between DOM runs. \xa0The reason is there is a [bad] join between the SalesLine and DOMSalesLineToProcess tables, based solely on DlvMode. \xa0Until resolved, the work around is to delete DOMSalesLineToProcess records with the same DlvMode as the SalesLine record that needs to be deleted.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/12/image.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/order-lines-cannot-be-deleted-while-dependent-stores/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5de7edb94a6b5900382f78f7"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,170 - INFO - Processing: https://www.d365stuff.co/trace-batch-jobs-and-more-via-cmd-logman/
2025-05-26 11:39:06,171 - INFO - HTML file already exists for https://www.d365stuff.co/trace-batch-jobs-and-more-via-cmd-logman/, reading from disk
2025-05-26 11:39:06,175 - INFO - Content unchanged for posts/trace-batch-jobs-and-more-via-cmd-logman.md, skipping save
2025-05-26 11:39:06,204 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-d365 tag-performance tag-trace tag-sql tag-trace-parser no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-11-21">21 November 2019</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">Trace Batch Jobs and more via CMD Logman</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Tracing and debugging interactive user sessions is one thing, but how do you trace a batch job in a tier two SAT environment? \xa0Here\'s a high level how:</p><ol><li> If the environment has multiple AOSes, assign the batch job to a batch group that only contains one server</li><li>RDP into the server from [1]</li><li>Create a provider file for Logman to run against </li><li>Open CMD as Administrator and start the trace</li><li>End the trace</li></ol><p>A provider file is a file listing multiple Event Trace providers to enable. The file should be a text file containing one provider per line. \xa0When we start the trace, we will pass the txt file location as a parameter. \xa0For D365 traces, it should look like: </p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/11/image-2.png"/></figure><p>Here is an example of the CMD commands to run the actual trace. \xa0As soon as the start command completes, the ETL will be created in the file, where you can watch it grow in real time. \xa0If you\'re running multiple traces, be sure to name the output etl file something new each time. \xa0The -pf parameter is how we tell the trace to use the provider file we made earlier. \xa0In this case, I also specify for the trace file to have a 4GB cap and stop the trace. \xa0There is a stop command to explicitly stop the trace as well.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/11/CMD-Screenshot.JPG"/></figure><p>Once the ETL is generated, it can be imported into Trace Parser just like any other.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/11/image-3.png"/></figure><p></p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/trace-batch-jobs-and-more-via-cmd-logman/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5dd6fd0e129f720038567733"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-d365 tag-performance tag-trace tag-sql tag-trace-parser no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-11-21">21 November 2019</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">Trace Batch Jobs and more via CMD Logman</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Tracing and debugging interactive user sessions is one thing, but how do you trace a batch job in a tier two SAT environment? \xa0Here\'s a high level how:</p><ol><li> If the environment has multiple AOSes, assign the batch job to a batch group that only contains one server</li><li>RDP into the server from [1]</li><li>Create a provider file for Logman to run against </li><li>Open CMD as Administrator and start the trace</li><li>End the trace</li></ol><p>A provider file is a file listing multiple Event Trace providers to enable. The file should be a text file containing one provider per line. \xa0When we start the trace, we will pass the txt file location as a parameter. \xa0For D365 traces, it should look like: </p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/11/image-2.png"/></figure><p>Here is an example of the CMD commands to run the actual trace. \xa0As soon as the start command completes, the ETL will be created in the file, where you can watch it grow in real time. \xa0If you\'re running multiple traces, be sure to name the output etl file something new each time. \xa0The -pf parameter is how we tell the trace to use the provider file we made earlier. \xa0In this case, I also specify for the trace file to have a 4GB cap and stop the trace. \xa0There is a stop command to explicitly stop the trace as well.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/11/CMD-Screenshot.JPG"/></figure><p>Once the ETL is generated, it can be imported into Trace Parser just like any other.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/11/image-3.png"/></figure><p></p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/trace-batch-jobs-and-more-via-cmd-logman/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5dd6fd0e129f720038567733"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,205 - INFO - Processing: https://www.d365stuff.co/systemdatetime/
2025-05-26 11:39:06,205 - INFO - HTML file already exists for https://www.d365stuff.co/systemdatetime/, reading from disk
2025-05-26 11:39:06,209 - INFO - Content unchanged for posts/systemdatetime.md, skipping save
2025-05-26 11:39:06,240 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-ax tag-d365 no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-09-30">30 September 2019</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">System.DateTime</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>There are enough x++ date and time functions to do just about anything, but sometimes they can make simple tasks fussy, and lack precision. \xa0I was investigating how to bring in [at least] milliseconds into my my timestamps, and ran across the DateTime <a href="https://docs.microsoft.com/en-us/dotnet/api/system.datetime?view=netframework-4.8&amp;ref=d365stuff.co">struct</a> and its <a href="https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/sql/linq/system-datetime-methods?ref=d365stuff.co">methods</a>. \xa0</p><p>Not only does it make a lot of date components easily accessible, but it has the day of year, millisecond, and tick measures of time. \xa0It\'s the little things.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/09/image.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/systemdatetime/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5d9288e2fd0d060038f0f37e"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-ax tag-d365 no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-09-30">30 September 2019</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">System.DateTime</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>There are enough x++ date and time functions to do just about anything, but sometimes they can make simple tasks fussy, and lack precision. \xa0I was investigating how to bring in [at least] milliseconds into my my timestamps, and ran across the DateTime <a href="https://docs.microsoft.com/en-us/dotnet/api/system.datetime?view=netframework-4.8&amp;ref=d365stuff.co">struct</a> and its <a href="https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/sql/linq/system-datetime-methods?ref=d365stuff.co">methods</a>. \xa0</p><p>Not only does it make a lot of date components easily accessible, but it has the day of year, millisecond, and tick measures of time. \xa0It\'s the little things.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/09/image.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/systemdatetime/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5d9288e2fd0d060038f0f37e"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,241 - INFO - Processing: https://www.d365stuff.co/call-center-payments-part-2-credit-cards/
2025-05-26 11:39:06,241 - INFO - HTML file already exists for https://www.d365stuff.co/call-center-payments-part-2-credit-cards/, reading from disk
2025-05-26 11:39:06,246 - INFO - Content unchanged for posts/call-center-payments-part-2-credit-cards.md, skipping save
2025-05-26 11:39:06,276 - ERROR - Error saving MarkItDown markdown: [Errno 36] File name too long: '<article class="post-full post tag-x tag-payments tag-d365 tag-call-center tag-ax tag-dynamics tag-retail tag-sales-orders featured no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-08-14">14 August 2019</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">Call Center Payments Part 2 - Credit Cards</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Part 1 was a simple example of how to add a cash payment to a call center order. \xa0Here, we\'ll explore how to add a credit card payment to the order. \xa0The functional overview is:</p><ol><li>Create a payment (MCRCustPaymTable)</li><li>Select a credit card [token] to use (CreditCardCust)</li><li>Update payment with the credit card information </li></ol><p>Depending on situational context, there may or may not be a need to generate a credit card token through code. \xa0If the token already exists, the process is just like part 1 of the series with an extra table relation. \xa0The steps can also be streamlined into one or two parts, but [again] it\'s contextual. \xa0</p><pre><code>using Retail=Microsoft.Dynamics.Retail;\nusing RetailConst=Microsoft.Dynamics.Retail.PaymentSDK.Portable.Constants;\nusing Microsoft.Dynamics.Commerce.Runtime.Services.CustomerOrder;\nclass paymentExample\n{\n    static mcrCustPaymTable createCallCenterPaymentRecord()\n    {\n\n        MCRCustPaymTable mcrCustPaymTable;\n        SalesTable\t\t\t\t\tsalesTable = SalesTable::find(\'SalesId\'); \n\n        try\n        {\n            ttsbegin;\n            mcrCustPaymTable.clear();\n            mcrCustPaymTable.Channel        = salesTable.retailSalesTable().RetailChannel;\n            mcrCustPaymTable.CurrencyCode   = \'USD\';\n            mcrCustPaymTable.TenderTypeId   = \'CreditCard\';\n            mcrCustPaymTable.RefTableId     = salesTable.TableId;\n            mcrCustPaymTable.RefRecId       = salesTable.RecId;\n            mcrCustPaymTable.CustAccount    = salesTable.CustAccount;\n            mcrCustPaymTable.CardTypeId     = \'Visa\';\n            mcrCustPaymTable.Status         = MCRCustPaymStatus::NotSubmitted;\n            mcrCustPaymTable.CustPaymType   = MCRCustPaymTable::getMCRTypeFromTender( mcrCustPaymTable.TenderTypeId,\n                                                                                  mcrCustPaymTable.Channel);\n\n            switch (_mcrCustPaymStatus)\n            {\n                case MCRCustPaymStatus::NotSubmitted:\n                case MCRCustPaymStatus::Authorized:\n\n                    mcrCustPaymTable.Amount = CurrencyExchange::round(10, \'USD\');\n                    break;\n            }\n\n            mcrCustPaymTable.insert();\n\n            ttscommit;\n        }\n        catch\n        {\n            RetailTracer::Error(\'RetailTransactionPaymentsHelper\', funcName(), strFmt(\'Error during Call Center payment (MCRCustPaymTable) creation:\\nSalesId [$%1]\\n\', _salesTable.RecId));\n        }\n\n        return mcrCustPaymTable;\n    }\n\n    static void AddCreditCardToPayment()\n    {\n        MCRCustPaymTable    mcrCustPaymTable = paymentexample::createCallCenterPaymentRecord();\n        \n        CreditCardCust      creditCardCust = CreditCardCust::findByUniqueCardId(\'MyFavoriteCard\');\n\n        //update payment with credit card info\n        mcrCustPaymTable.selectForUpdate();\n        mcrCustPaymTable.PaymInfoTableId = creditCardCust.TableId;\n        mcrCustPaymTable.PaymInfoRecId = creditCardCust.RecId;\n        mcrCustPaymTable.update();\n\n    }\n}</code></pre><p>Creating the MCRCustPaymTable record is very similar to creating one for a cash payment, however now it\'s important to specify the card type (eg Visa, AMEX), and the tender type is different (Credit Card vs Cash) as well. \xa0These values can vary from system to system, so as always, don\'t hardcode them. \xa0</p><p>The above example is very presumptuous about finding and using an existing credit card. \xa0What if a card doesn\'t exist, and a token needs to be created on the fly? \xa0If so, the steps change to: \xa0</p><ol><li>Create a payment (MCRCustPaymTable)</li><li>Create a credit card [token] to use (CreditCardCust)</li><li>Update payment with the credit card information </li></ol><p>That\'s a lot harder.</p><p>Tokens are stored in giant hard-to-read arrays (especially when using SQL) on the CreditCardCust table. \xa0This format allows for a dynamic collection of token attributes to be stored, which could change in the future without needing to change the table schema. \xa0As of right now, the following are in there:</p><ul><li>ServiceAccountId (a unique GUID per instance)</li><li>ConnectorName</li><li>Alias</li><li>CardType (eg Visa)</li><li>CardToken (the token value representing a credit card)</li><li>Last4Digits</li><li>UniqueCardid (a GUID)</li><li>ExpirationYear (4 digit integer year, eg 2019)</li><li>ExpirationMonth (2 digit integer month, eg 11)</li><li>Customerid (shopper reference)</li><li>Name (eg Bill Gates)</li><li>BankIdentificationNumberStart (BIN, optional backup in case the credit card processor doesn\'t understand what [eg] Visa means)</li><li>CardVerificationValue</li><li>ShowSameAsShippingAddress</li><li>House </li><li>StreetAddress</li><li>City</li><li>State</li><li>PostalCode</li><li>Country</li><li>CardVerificationValue</li></ul><p>All of the above fields are crammed into CreditCardCust.CardToken. \xa0Once that\'s handled, the rest is straight forward.</p><pre><code>using Retail=Microsoft.Dynamics.Retail;\nusing RetailConst=Microsoft.Dynamics.Retail.PaymentSDK.Portable.Constants;\nusing Microsoft.Dynamics.Commerce.Runtime.Services.CustomerOrder;\nclass paymentExample\n{\n    static mcrCustPaymTable createCallCenterPaymentRecord()\n    {\n\n        MCRCustPaymTable mcrCustPaymTable;\n        SalesTable\t\t\t\t\tsalesTable = SalesTable::find(\'SalesId\'); \n\n        try\n        {\n            ttsbegin;\n            mcrCustPaymTable.clear();\n            mcrCustPaymTable.Channel        = salesTable.retailSalesTable().RetailChannel;\n            mcrCustPaymTable.CurrencyCode   = \'USD\';\n            mcrCustPaymTable.TenderTypeId   = \'CreditCard\';\n            mcrCustPaymTable.RefTableId     = salesTable.TableId;\n            mcrCustPaymTable.RefRecId       = salesTable.RecId;\n            mcrCustPaymTable.CustAccount    = salesTable.CustAccount;\n            mcrCustPaymTable.CardTypeId     = \'Visa\';\n            mcrCustPaymTable.Status         = MCRCustPaymStatus::NotSubmitted;\n            mcrCustPaymTable.CustPaymType   = MCRCustPaymTable::getMCRTypeFromTender( mcrCustPaymTable.TenderTypeId,\n                                                                                  mcrCustPaymTable.Channel);\n\n            switch (_mcrCustPaymStatus)\n            {\n                case MCRCustPaymStatus::NotSubmitted:\n                case MCRCustPaymStatus::Authorized:\n\n                    mcrCustPaymTable.Amount = CurrencyExchange::round(10, \'USD\');\n                    break;\n            }\n\n            mcrCustPaymTable.insert();\n\n            ttscommit;\n        }\n        catch\n        {\n            RetailTracer::Error(\'RetailTransactionPaymentsHelper\', funcName(), strFmt(\'Error during Call Center payment (MCRCustPaymTable) creation:\\nSalesId [$%1]\\n\', _salesTable.RecId));\n        }\n\n        return mcrCustPaymTable;\n    }\n\n    static void AddCreditCardToPayment()\n    {\n        MCRCustPaymTable    mcrCustPaymTable = paymentexample::createCallCenterPaymentRecord();\n\n\t\t//instead of finding a token, this call will create a new token\n\t\tCreditCardCust      creditCardCust = paymentexample::createToken();\n\n\t\t//update payment with credit card info\n\t\tttsbegin;\n\t\tmcrCustPaymTable.selectForUpdate();\n\t\tmcrCustPaymTable.PaymInfoTableId = creditCardCust.TableId;\n\t\tmcrCustPaymTable.PaymInfoRecId = creditCardCust.RecId;\n\t\tmcrCustPaymTable.update();\n\t\tttscommit;\n\n    }\n\t\n\tstatic CreditCardCust createToken()\n    {\n        CustTable         custTable = custTable::find(\'BillGates\');\n        CreditCardCust    creditCardCust;\n\t\t\n\t\tstr uniqueCardId = guid2Str(newGuid());\n\n        CreditCardPaymentCardTokenize   cardTokenize;\n        CreditCardProcessors \t\t\tactiveCreditCardProcessors;\n        activeCreditCardProcessors \t\t= CreditCardProcessors::findActiveProcessor();\n\n\t\tcardTokenize = CreditCardPaymentCardTokenize::construct();\n\t\tcardTokenize.parmCustAccount(custTable.AccountNum);\n\t\tcardTokenize.init(activeCreditCardProcessors.Name);\n\n\t\tvar cardPaymentProperties  = CreditCardPaymentProperties::construct();\n\t\tvar processorProperties = CreditCardPaymentProperties::fromProperties(cardTokenize.parmprocessorProperties());  \n\t\tcardPaymentProperties.add(processorProperties.find(\'MerchantAccount\', \'ServiceAccountId\'));\n\t\t\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'Connector\', \'ConnectorName\', \'Your favorite connector\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(RetailConst.GenericNamespace::get_PaymentCard(), \'Alias\', \'ccAlias\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(RetailConst.GenericNamespace::get_PaymentCard(), \'CardType\', \'Visa\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(RetailConst.GenericNamespace::get_PaymentCard(), \'AdyenPaymentMethod\', \'Visa\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(RetailConst.GenericNamespace::get_PaymentCard(), \'CardToken\', \'0123456789\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(RetailConst.GenericNamespace::get_PaymentCard(), \'Last4Digits\', \'1234\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(RetailConst.GenericNamespace::get_PaymentCard(), \'UniqueCardId\', uniqueCardId));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(RetailConst.GenericNamespace::get_PaymentCard(), \'ExpirationYear\', 2020));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(RetailConst.GenericNamespace::get_PaymentCard(), \'ExpirationMonth\', 10));\n\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'CommerceIdentification\', \'CustomerId\', \'ShopperRef\'));\n\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'Name\', \'Bill Gates\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'BankIdentificationNumberStart\', \'123456\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'ShowSameAsShippingAddress\', \'False\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'House\', \'N/A\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'StreetAddress\', \'1 Microsoft Way\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'City\', \'Redmond\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'State\', \'WA\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'PostalCode\', \'98052\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'Country\', \'USA\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'CardVerificationValue\', \'SUCCESS\')); \n\n\t\tcardTokenize.parmpaymentCardProperties(cardPaymentProperties.toArray());\n\t\t\n\t\tcreditCardCust.clear();\n\t\tcreditCardCust.CardNumber = \'1234\';//use last 4 digits\n\t\tcreditCardCust.CustAccount = custTable.AccountNum;\n\t\tcreditCardCust.CreditCardProcessors = activeCreditCardProcessors.RecId;\n\t\tcreditCardCust.CreditCardTypeName = \'Visa\';\n\t\tcreditCardCust.ExpiryDate = \'10/2020\';//I know... a str field called date\n\t\tcreditCardCust.UniqueCardId = uniqueCardId;//\n\t\tcreditCardCust.Name = custTable.name();\n\t\tcreditCardCust.CardToken = cardTokenize.getXmlString();\n\t\tcreditCardCust.Notes = \'This could be your first token!!!\';\n\n\t\tcreditCardCust.insert();\n    }\n}</code></pre><p>And the above is very presumptuous about procuring a token. \xa0But that\'s another problem to solve.</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/call-center-payments-part-2-credit-cards/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5d37d76fe3d4e100386ce407"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg"/>\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
OSError: [Errno 36] File name too long: '<article class="post-full post tag-x tag-payments tag-d365 tag-call-center tag-ax tag-dynamics tag-retail tag-sales-orders featured no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-08-14">14 August 2019</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">Call Center Payments Part 2 - Credit Cards</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Part 1 was a simple example of how to add a cash payment to a call center order. \xa0Here, we\'ll explore how to add a credit card payment to the order. \xa0The functional overview is:</p><ol><li>Create a payment (MCRCustPaymTable)</li><li>Select a credit card [token] to use (CreditCardCust)</li><li>Update payment with the credit card information </li></ol><p>Depending on situational context, there may or may not be a need to generate a credit card token through code. \xa0If the token already exists, the process is just like part 1 of the series with an extra table relation. \xa0The steps can also be streamlined into one or two parts, but [again] it\'s contextual. \xa0</p><pre><code>using Retail=Microsoft.Dynamics.Retail;\nusing RetailConst=Microsoft.Dynamics.Retail.PaymentSDK.Portable.Constants;\nusing Microsoft.Dynamics.Commerce.Runtime.Services.CustomerOrder;\nclass paymentExample\n{\n    static mcrCustPaymTable createCallCenterPaymentRecord()\n    {\n\n        MCRCustPaymTable mcrCustPaymTable;\n        SalesTable\t\t\t\t\tsalesTable = SalesTable::find(\'SalesId\'); \n\n        try\n        {\n            ttsbegin;\n            mcrCustPaymTable.clear();\n            mcrCustPaymTable.Channel        = salesTable.retailSalesTable().RetailChannel;\n            mcrCustPaymTable.CurrencyCode   = \'USD\';\n            mcrCustPaymTable.TenderTypeId   = \'CreditCard\';\n            mcrCustPaymTable.RefTableId     = salesTable.TableId;\n            mcrCustPaymTable.RefRecId       = salesTable.RecId;\n            mcrCustPaymTable.CustAccount    = salesTable.CustAccount;\n            mcrCustPaymTable.CardTypeId     = \'Visa\';\n            mcrCustPaymTable.Status         = MCRCustPaymStatus::NotSubmitted;\n            mcrCustPaymTable.CustPaymType   = MCRCustPaymTable::getMCRTypeFromTender( mcrCustPaymTable.TenderTypeId,\n                                                                                  mcrCustPaymTable.Channel);\n\n            switch (_mcrCustPaymStatus)\n            {\n                case MCRCustPaymStatus::NotSubmitted:\n                case MCRCustPaymStatus::Authorized:\n\n                    mcrCustPaymTable.Amount = CurrencyExchange::round(10, \'USD\');\n                    break;\n            }\n\n            mcrCustPaymTable.insert();\n\n            ttscommit;\n        }\n        catch\n        {\n            RetailTracer::Error(\'RetailTransactionPaymentsHelper\', funcName(), strFmt(\'Error during Call Center payment (MCRCustPaymTable) creation:\\nSalesId [$%1]\\n\', _salesTable.RecId));\n        }\n\n        return mcrCustPaymTable;\n    }\n\n    static void AddCreditCardToPayment()\n    {\n        MCRCustPaymTable    mcrCustPaymTable = paymentexample::createCallCenterPaymentRecord();\n        \n        CreditCardCust      creditCardCust = CreditCardCust::findByUniqueCardId(\'MyFavoriteCard\');\n\n        //update payment with credit card info\n        mcrCustPaymTable.selectForUpdate();\n        mcrCustPaymTable.PaymInfoTableId = creditCardCust.TableId;\n        mcrCustPaymTable.PaymInfoRecId = creditCardCust.RecId;\n        mcrCustPaymTable.update();\n\n    }\n}</code></pre><p>Creating the MCRCustPaymTable record is very similar to creating one for a cash payment, however now it\'s important to specify the card type (eg Visa, AMEX), and the tender type is different (Credit Card vs Cash) as well. \xa0These values can vary from system to system, so as always, don\'t hardcode them. \xa0</p><p>The above example is very presumptuous about finding and using an existing credit card. \xa0What if a card doesn\'t exist, and a token needs to be created on the fly? \xa0If so, the steps change to: \xa0</p><ol><li>Create a payment (MCRCustPaymTable)</li><li>Create a credit card [token] to use (CreditCardCust)</li><li>Update payment with the credit card information </li></ol><p>That\'s a lot harder.</p><p>Tokens are stored in giant hard-to-read arrays (especially when using SQL) on the CreditCardCust table. \xa0This format allows for a dynamic collection of token attributes to be stored, which could change in the future without needing to change the table schema. \xa0As of right now, the following are in there:</p><ul><li>ServiceAccountId (a unique GUID per instance)</li><li>ConnectorName</li><li>Alias</li><li>CardType (eg Visa)</li><li>CardToken (the token value representing a credit card)</li><li>Last4Digits</li><li>UniqueCardid (a GUID)</li><li>ExpirationYear (4 digit integer year, eg 2019)</li><li>ExpirationMonth (2 digit integer month, eg 11)</li><li>Customerid (shopper reference)</li><li>Name (eg Bill Gates)</li><li>BankIdentificationNumberStart (BIN, optional backup in case the credit card processor doesn\'t understand what [eg] Visa means)</li><li>CardVerificationValue</li><li>ShowSameAsShippingAddress</li><li>House </li><li>StreetAddress</li><li>City</li><li>State</li><li>PostalCode</li><li>Country</li><li>CardVerificationValue</li></ul><p>All of the above fields are crammed into CreditCardCust.CardToken. \xa0Once that\'s handled, the rest is straight forward.</p><pre><code>using Retail=Microsoft.Dynamics.Retail;\nusing RetailConst=Microsoft.Dynamics.Retail.PaymentSDK.Portable.Constants;\nusing Microsoft.Dynamics.Commerce.Runtime.Services.CustomerOrder;\nclass paymentExample\n{\n    static mcrCustPaymTable createCallCenterPaymentRecord()\n    {\n\n        MCRCustPaymTable mcrCustPaymTable;\n        SalesTable\t\t\t\t\tsalesTable = SalesTable::find(\'SalesId\'); \n\n        try\n        {\n            ttsbegin;\n            mcrCustPaymTable.clear();\n            mcrCustPaymTable.Channel        = salesTable.retailSalesTable().RetailChannel;\n            mcrCustPaymTable.CurrencyCode   = \'USD\';\n            mcrCustPaymTable.TenderTypeId   = \'CreditCard\';\n            mcrCustPaymTable.RefTableId     = salesTable.TableId;\n            mcrCustPaymTable.RefRecId       = salesTable.RecId;\n            mcrCustPaymTable.CustAccount    = salesTable.CustAccount;\n            mcrCustPaymTable.CardTypeId     = \'Visa\';\n            mcrCustPaymTable.Status         = MCRCustPaymStatus::NotSubmitted;\n            mcrCustPaymTable.CustPaymType   = MCRCustPaymTable::getMCRTypeFromTender( mcrCustPaymTable.TenderTypeId,\n                                                                                  mcrCustPaymTable.Channel);\n\n            switch (_mcrCustPaymStatus)\n            {\n                case MCRCustPaymStatus::NotSubmitted:\n                case MCRCustPaymStatus::Authorized:\n\n                    mcrCustPaymTable.Amount = CurrencyExchange::round(10, \'USD\');\n                    break;\n            }\n\n            mcrCustPaymTable.insert();\n\n            ttscommit;\n        }\n        catch\n        {\n            RetailTracer::Error(\'RetailTransactionPaymentsHelper\', funcName(), strFmt(\'Error during Call Center payment (MCRCustPaymTable) creation:\\nSalesId [$%1]\\n\', _salesTable.RecId));\n        }\n\n        return mcrCustPaymTable;\n    }\n\n    static void AddCreditCardToPayment()\n    {\n        MCRCustPaymTable    mcrCustPaymTable = paymentexample::createCallCenterPaymentRecord();\n\n\t\t//instead of finding a token, this call will create a new token\n\t\tCreditCardCust      creditCardCust = paymentexample::createToken();\n\n\t\t//update payment with credit card info\n\t\tttsbegin;\n\t\tmcrCustPaymTable.selectForUpdate();\n\t\tmcrCustPaymTable.PaymInfoTableId = creditCardCust.TableId;\n\t\tmcrCustPaymTable.PaymInfoRecId = creditCardCust.RecId;\n\t\tmcrCustPaymTable.update();\n\t\tttscommit;\n\n    }\n\t\n\tstatic CreditCardCust createToken()\n    {\n        CustTable         custTable = custTable::find(\'BillGates\');\n        CreditCardCust    creditCardCust;\n\t\t\n\t\tstr uniqueCardId = guid2Str(newGuid());\n\n        CreditCardPaymentCardTokenize   cardTokenize;\n        CreditCardProcessors \t\t\tactiveCreditCardProcessors;\n        activeCreditCardProcessors \t\t= CreditCardProcessors::findActiveProcessor();\n\n\t\tcardTokenize = CreditCardPaymentCardTokenize::construct();\n\t\tcardTokenize.parmCustAccount(custTable.AccountNum);\n\t\tcardTokenize.init(activeCreditCardProcessors.Name);\n\n\t\tvar cardPaymentProperties  = CreditCardPaymentProperties::construct();\n\t\tvar processorProperties = CreditCardPaymentProperties::fromProperties(cardTokenize.parmprocessorProperties());  \n\t\tcardPaymentProperties.add(processorProperties.find(\'MerchantAccount\', \'ServiceAccountId\'));\n\t\t\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'Connector\', \'ConnectorName\', \'Your favorite connector\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(RetailConst.GenericNamespace::get_PaymentCard(), \'Alias\', \'ccAlias\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(RetailConst.GenericNamespace::get_PaymentCard(), \'CardType\', \'Visa\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(RetailConst.GenericNamespace::get_PaymentCard(), \'AdyenPaymentMethod\', \'Visa\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(RetailConst.GenericNamespace::get_PaymentCard(), \'CardToken\', \'0123456789\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(RetailConst.GenericNamespace::get_PaymentCard(), \'Last4Digits\', \'1234\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(RetailConst.GenericNamespace::get_PaymentCard(), \'UniqueCardId\', uniqueCardId));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(RetailConst.GenericNamespace::get_PaymentCard(), \'ExpirationYear\', 2020));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(RetailConst.GenericNamespace::get_PaymentCard(), \'ExpirationMonth\', 10));\n\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'CommerceIdentification\', \'CustomerId\', \'ShopperRef\'));\n\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'Name\', \'Bill Gates\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'BankIdentificationNumberStart\', \'123456\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'ShowSameAsShippingAddress\', \'False\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'House\', \'N/A\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'StreetAddress\', \'1 Microsoft Way\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'City\', \'Redmond\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'State\', \'WA\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'PostalCode\', \'98052\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'Country\', \'USA\'));\n\t\tcardPaymentProperties.add(CreditCardPaymentProperty::newValue(\'PaymentCard\', \'CardVerificationValue\', \'SUCCESS\')); \n\n\t\tcardTokenize.parmpaymentCardProperties(cardPaymentProperties.toArray());\n\t\t\n\t\tcreditCardCust.clear();\n\t\tcreditCardCust.CardNumber = \'1234\';//use last 4 digits\n\t\tcreditCardCust.CustAccount = custTable.AccountNum;\n\t\tcreditCardCust.CreditCardProcessors = activeCreditCardProcessors.RecId;\n\t\tcreditCardCust.CreditCardTypeName = \'Visa\';\n\t\tcreditCardCust.ExpiryDate = \'10/2020\';//I know... a str field called date\n\t\tcreditCardCust.UniqueCardId = uniqueCardId;//\n\t\tcreditCardCust.Name = custTable.name();\n\t\tcreditCardCust.CardToken = cardTokenize.getXmlString();\n\t\tcreditCardCust.Notes = \'This could be your first token!!!\';\n\n\t\tcreditCardCust.insert();\n    }\n}</code></pre><p>And the above is very presumptuous about procuring a token. \xa0But that\'s another problem to solve.</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/call-center-payments-part-2-credit-cards/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5d37d76fe3d4e100386ce407"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg"/>\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,277 - INFO - Processing: https://www.d365stuff.co/create-call-center-payment-cash/
2025-05-26 11:39:06,277 - INFO - HTML file already exists for https://www.d365stuff.co/create-call-center-payment-cash/, reading from disk
2025-05-26 11:39:06,282 - INFO - Content unchanged for posts/create-call-center-payment-cash.md, skipping save
2025-05-26 11:39:06,318 - ERROR - Error saving MarkItDown markdown: [Errno 36] File name too long: '<article class="post-full post tag-x tag-sales-orders tag-dynamics tag-d365 tag-payments no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-07-23">23 July 2019</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">Call Center Payments Part 1 - Cash</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Creating call center payments via x++ is a challenging and increasingly common task that every architect needs to know. \xa0It\'s a reasonable client request to integrate or create payments, and it\'s something that needs to work perfectly, and often at a high velocity and scale. \xa0There\'s a lot to cover and I don\'t want anyone to read more than they have to, so the series will first cover the whole process as simply as possible, with a cash payment, and then get into more complicated methods of payment like credit cards, and implications around order completion and invoicing. \xa0</p><p>The functional overview is:</p><ol><li>Create a sales order, header and lines - Assuming this is already accomplished</li><li>Create a payment record (MCRCustPaymTable) per payment. \xa0This is the final step for cash payments </li><li>Associate each payment record with ancillary payment information (eg gift card, credit card)</li></ol><p>After payments are created, the order will need to be completed (MCREndOrder class) and ultimately invoiced.</p><p>The MCRCustPaymTable is the linchpin to the entire process. \xa0It\'s many to one relationship with the sales order means enables customers to pay with multiple methods of payment on one order. \xa0It could be cash and a credit card; two different credit cards; a gift card, credit card, and cash – there are unlimited possibilities. \xa0</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/07/image.png"/></figure><p>Cash payments are the simplest because an entire cash payment entry is contained on the MCRCustPaymTable record, whereas credit and gift cards have to be fleshed out in other tables, and then referenced back using table and rec ids. \xa0</p><p>Here is an example of how to add a single cash payment to a sales order, inspired by the RetailTransactionPaymentsHelper class:</p><pre><code>static mcrCustPaymTable createCallCenterPaymentRecord()\n{\n\n    MCRCustPaymTable mcrCustPaymTable;\n\n    SalesTable\t\t\t\t\tsalesTable = SalesTable::find(\'SalesId\');\n    CurrencyCode\t\t\t\tcurrency = \'USD\';\n    str\t\t\t\t\t\t\tpaymentType = \'Cash\';\n    real\t\t\t\t\t\tamount = 10;\n    MCRCustPaymStatus\t\t\tmcrCustPaymStatus = MCRCustPaymStatus::NotSubmitted;\n\n    try\n    {\n        ttsbegin;\n        mcrCustPaymTable.clear();\n        mcrCustPaymTable.Channel        = salesTable.retailSalesTable().RetailChannel;\n        mcrCustPaymTable.CurrencyCode   = currency;\n        mcrCustPaymTable.TenderTypeId   = paymentType;\n        mcrCustPaymTable.RefTableId     = salesTable.TableId;\n        mcrCustPaymTable.RefRecId       = salesTable.RecId;\n        mcrCustPaymTable.CustAccount    = salesTable.CustAccount;\n        mcrCustPaymTable.Status         = mcrCustPaymStatus;\n        mcrCustPaymTable.CustPaymType   = MCRCustPaymTable::getMCRTypeFromTender( mcrCustPaymTable.TenderTypeId,\n                                                                                  mcrCustPaymTable.Channel);\n\n        switch (_mcrCustPaymStatus)\n        {\n            case MCRCustPaymStatus::NotSubmitted:\n            case MCRCustPaymStatus::Authorized:\n\n                mcrCustPaymTable.Amount = CurrencyExchange::round(amount, _currency);\n                break;                              \n        }\n\n        mcrCustPaymTable.insert();\n\n        ttscommit;\n    }\n    catch\n    {\n        RetailTracer::Error(\'RetailTransactionPaymentsHelper\', funcName(), strFmt(\'Error during Call Center payment (MCRCustPaymTable) creation:\\nSalesId [$%1]\\n\', _salesTable.RecId));\n    }\n\n\treturn mcrCustPaymTable;\n}\n</code></pre><p>That\'s it! \xa0Cash is one of the few payments that doesn\'t require an extra table and relation. \xa0Although fleshing out credit cards, gift cards, and installments require additional tables and information, the design pattern for them will be the same. \xa0</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/create-call-center-payment-cash/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5d26894ca8a12100387ad9c6"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
OSError: [Errno 36] File name too long: '<article class="post-full post tag-x tag-sales-orders tag-dynamics tag-d365 tag-payments no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-07-23">23 July 2019</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">Call Center Payments Part 1 - Cash</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Creating call center payments via x++ is a challenging and increasingly common task that every architect needs to know. \xa0It\'s a reasonable client request to integrate or create payments, and it\'s something that needs to work perfectly, and often at a high velocity and scale. \xa0There\'s a lot to cover and I don\'t want anyone to read more than they have to, so the series will first cover the whole process as simply as possible, with a cash payment, and then get into more complicated methods of payment like credit cards, and implications around order completion and invoicing. \xa0</p><p>The functional overview is:</p><ol><li>Create a sales order, header and lines - Assuming this is already accomplished</li><li>Create a payment record (MCRCustPaymTable) per payment. \xa0This is the final step for cash payments </li><li>Associate each payment record with ancillary payment information (eg gift card, credit card)</li></ol><p>After payments are created, the order will need to be completed (MCREndOrder class) and ultimately invoiced.</p><p>The MCRCustPaymTable is the linchpin to the entire process. \xa0It\'s many to one relationship with the sales order means enables customers to pay with multiple methods of payment on one order. \xa0It could be cash and a credit card; two different credit cards; a gift card, credit card, and cash – there are unlimited possibilities. \xa0</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/07/image.png"/></figure><p>Cash payments are the simplest because an entire cash payment entry is contained on the MCRCustPaymTable record, whereas credit and gift cards have to be fleshed out in other tables, and then referenced back using table and rec ids. \xa0</p><p>Here is an example of how to add a single cash payment to a sales order, inspired by the RetailTransactionPaymentsHelper class:</p><pre><code>static mcrCustPaymTable createCallCenterPaymentRecord()\n{\n\n    MCRCustPaymTable mcrCustPaymTable;\n\n    SalesTable\t\t\t\t\tsalesTable = SalesTable::find(\'SalesId\');\n    CurrencyCode\t\t\t\tcurrency = \'USD\';\n    str\t\t\t\t\t\t\tpaymentType = \'Cash\';\n    real\t\t\t\t\t\tamount = 10;\n    MCRCustPaymStatus\t\t\tmcrCustPaymStatus = MCRCustPaymStatus::NotSubmitted;\n\n    try\n    {\n        ttsbegin;\n        mcrCustPaymTable.clear();\n        mcrCustPaymTable.Channel        = salesTable.retailSalesTable().RetailChannel;\n        mcrCustPaymTable.CurrencyCode   = currency;\n        mcrCustPaymTable.TenderTypeId   = paymentType;\n        mcrCustPaymTable.RefTableId     = salesTable.TableId;\n        mcrCustPaymTable.RefRecId       = salesTable.RecId;\n        mcrCustPaymTable.CustAccount    = salesTable.CustAccount;\n        mcrCustPaymTable.Status         = mcrCustPaymStatus;\n        mcrCustPaymTable.CustPaymType   = MCRCustPaymTable::getMCRTypeFromTender( mcrCustPaymTable.TenderTypeId,\n                                                                                  mcrCustPaymTable.Channel);\n\n        switch (_mcrCustPaymStatus)\n        {\n            case MCRCustPaymStatus::NotSubmitted:\n            case MCRCustPaymStatus::Authorized:\n\n                mcrCustPaymTable.Amount = CurrencyExchange::round(amount, _currency);\n                break;                              \n        }\n\n        mcrCustPaymTable.insert();\n\n        ttscommit;\n    }\n    catch\n    {\n        RetailTracer::Error(\'RetailTransactionPaymentsHelper\', funcName(), strFmt(\'Error during Call Center payment (MCRCustPaymTable) creation:\\nSalesId [$%1]\\n\', _salesTable.RecId));\n    }\n\n\treturn mcrCustPaymTable;\n}\n</code></pre><p>That\'s it! \xa0Cash is one of the few payments that doesn\'t require an extra table and relation. \xa0Although fleshing out credit cards, gift cards, and installments require additional tables and information, the design pattern for them will be the same. \xa0</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/create-call-center-payment-cash/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5d26894ca8a12100387ad9c6"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,318 - INFO - Processing: https://www.d365stuff.co/overridegiftcardbalance/
2025-05-26 11:39:06,318 - INFO - HTML file already exists for https://www.d365stuff.co/overridegiftcardbalance/, reading from disk
2025-05-26 11:39:06,322 - INFO - Content unchanged for posts/overridegiftcardbalance.md, skipping save
2025-05-26 11:39:06,360 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-d365 no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-07-25">25 July 2019</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">Override Gift Card Balance using Chain of Command</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>If you ever need to do this, do it here.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/07/image-1.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/overridegiftcardbalance/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5d3a1cf664757c00383b070d"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-d365 no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-07-25">25 July 2019</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">Override Gift Card Balance using Chain of Command</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>If you ever need to do this, do it here.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/07/image-1.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/overridegiftcardbalance/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5d3a1cf664757c00383b070d"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,361 - INFO - Processing: https://www.d365stuff.co/retailattributehelper/
2025-05-26 11:39:06,361 - INFO - HTML file already exists for https://www.d365stuff.co/retailattributehelper/, reading from disk
2025-05-26 11:39:06,365 - INFO - Content unchanged for posts/retailattributehelper.md, skipping save
2025-05-26 11:39:06,397 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-retail-attributes tag-sales-orders tag-d365 no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-11-12">12 November 2018</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">RetailAttributeHelper</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Retail sales order attributes are a great way to add properties to orders, at the header or line level, in an omni-channel solution since they are easily viewable from the POS as well as D365 client. \xa0Unfortunately, the magic behind these attributes is super fussy. \xa0Fortunately, there\'s the RetailAttributeHelper class.</p><p>Go ahead, read the code behind the createOrUpdateRetailSalesOrderAttributeValues(); it\'s super fussy inside. \xa0Calling it to create or update a collection of retail sales attributes, not so much.</p><p>You "need" your channel RecId, logical store Id, terminal Id, and transaction Id.</p><p>After that you need need your sales order number, company context, a 0 [header] or line number, and then a list object of attributes. \xa0It could look something like this:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/11/image-9.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/retailattributehelper/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5be9d96517900900ccb50ed7"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-retail-attributes tag-sales-orders tag-d365 no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-11-12">12 November 2018</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">RetailAttributeHelper</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Retail sales order attributes are a great way to add properties to orders, at the header or line level, in an omni-channel solution since they are easily viewable from the POS as well as D365 client. \xa0Unfortunately, the magic behind these attributes is super fussy. \xa0Fortunately, there\'s the RetailAttributeHelper class.</p><p>Go ahead, read the code behind the createOrUpdateRetailSalesOrderAttributeValues(); it\'s super fussy inside. \xa0Calling it to create or update a collection of retail sales attributes, not so much.</p><p>You "need" your channel RecId, logical store Id, terminal Id, and transaction Id.</p><p>After that you need need your sales order number, company context, a 0 [header] or line number, and then a list object of attributes. \xa0It could look something like this:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/11/image-9.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/retailattributehelper/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5be9d96517900900ccb50ed7"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,398 - INFO - Processing: https://www.d365stuff.co/call-x-web-service-with-browser-snippet/
2025-05-26 11:39:06,398 - INFO - HTML file already exists for https://www.d365stuff.co/call-x-web-service-with-browser-snippet/, reading from disk
2025-05-26 11:39:06,402 - INFO - Content unchanged for posts/call-x-web-service-with-browser-snippet.md, skipping save
2025-05-26 11:39:06,438 - ERROR - Error saving MarkItDown markdown: [Errno 36] File name too long: '<article class="post-full post tag-integrations tag-x tag-json tag-snippet tag-d365 tag-data-contracts tag-web-services tag-javascript no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-05-22">22 May 2019</time>\n<span class="date-divider">/</span> <a href="/tag/integrations/">Integrations</a>\n</section>\n<h1 class="post-full-title">Call x++ web service with web browser snippet</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>There are a lot of ways to call D365 web services – Postman, Fiddler, Logic Apps – but they\'re all a bit fussy. \xa0Getting authentication right the first time can be stressful, and they all require additional downloads, accounts, or subscriptions. \xa0</p><p>You can <a href="https://developers.google.com/web/tools/chrome-devtools/javascript/snippets?ref=d365stuff.co">run snippets of JavaScript on any page</a> with Chrome. \xa0Javascript can make JSON POST requests, and fortunately for us, "any page" includes the D365 default dashboard homepage.</p><p>Here is a quick example project I made. \xa0It\'s a simple x++ class with a few test methods. \xa0One is a simple Hello World, and the other, HelloParameter, will take 2 parameters, integers, and return the sum of them with a friendly message.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/05/HelloWorld-Project-Screenshot-1.JPG"/></figure><p>You can already call a service without parameters simply through URL navigation, so the real value is being able to pass parameters. \xa0To call the service\'s HelloParameter method, we can write a quick snippet in Chrome (F12 shortcut). \xa0</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/05/Snippet-Screenshot.JPG"/></figure><p>The snippet sets two parameters, integers with values 1 and 4 respectively. \xa0A POST request is made, and it returns a sum of 5.</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/call-x-web-service-with-browser-snippet/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5ce591ebd0aaa900c009a082"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
OSError: [Errno 36] File name too long: '<article class="post-full post tag-integrations tag-x tag-json tag-snippet tag-d365 tag-data-contracts tag-web-services tag-javascript no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-05-22">22 May 2019</time>\n<span class="date-divider">/</span> <a href="/tag/integrations/">Integrations</a>\n</section>\n<h1 class="post-full-title">Call x++ web service with web browser snippet</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>There are a lot of ways to call D365 web services – Postman, Fiddler, Logic Apps – but they\'re all a bit fussy. \xa0Getting authentication right the first time can be stressful, and they all require additional downloads, accounts, or subscriptions. \xa0</p><p>You can <a href="https://developers.google.com/web/tools/chrome-devtools/javascript/snippets?ref=d365stuff.co">run snippets of JavaScript on any page</a> with Chrome. \xa0Javascript can make JSON POST requests, and fortunately for us, "any page" includes the D365 default dashboard homepage.</p><p>Here is a quick example project I made. \xa0It\'s a simple x++ class with a few test methods. \xa0One is a simple Hello World, and the other, HelloParameter, will take 2 parameters, integers, and return the sum of them with a friendly message.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/05/HelloWorld-Project-Screenshot-1.JPG"/></figure><p>You can already call a service without parameters simply through URL navigation, so the real value is being able to pass parameters. \xa0To call the service\'s HelloParameter method, we can write a quick snippet in Chrome (F12 shortcut). \xa0</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/05/Snippet-Screenshot.JPG"/></figure><p>The snippet sets two parameters, integers with values 1 and 4 respectively. \xa0A POST request is made, and it returns a sum of 5.</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/call-x-web-service-with-browser-snippet/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5ce591ebd0aaa900c009a082"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,439 - INFO - Processing: https://www.d365stuff.co/the-sales-order-cannot-be-deleted-because-related-not-posted-transactions-exist/
2025-05-26 11:39:06,439 - INFO - HTML file already exists for https://www.d365stuff.co/the-sales-order-cannot-be-deleted-because-related-not-posted-transactions-exist/, reading from disk
2025-05-26 11:39:06,443 - INFO - Content unchanged for posts/the-sales-order-cannot-be-deleted-because-related-.md, skipping save
2025-05-26 11:39:06,498 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-tips-tricks tag-d365 tag-errors no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-05-14">14 May 2019</time>\n<span class="date-divider">/</span> <a href="/tag/tips-tricks/">Tips Tricks</a>\n</section>\n<h1 class="post-full-title">The sales order cannot be deleted because related not posted transactions exist</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Breaking up with sales orders can be hard to do. \xa0You try your best to make invoicing work, but eventually you cut your losses and to part ways. \xa0Or at least try to. \xa0"The sales order cannot be deleted because related not posted transactions exist" error can appear for a variety of reasons; sometimes those reasons make sense, and sometimes they\'re confusing. \xa0</p><p>The least common, and rarely thought of reason for this error is because there are existing invoice history records (ie invoicing demons) related to the order. \xa0This is why even if you delete every order line (SalesLine), the error still comes up when you try to delete the empty header (SalesTable). \xa0In lower tier environments, it\'s easy to delete the SalesParmTable and SalesParmLine table records with a job or script, however in a production environment you have to brush up on your navigation skills.</p><p>Accounts receivable &gt; Inquiries and reports &gt; Invoices &gt; Invoice history is your path to healing. \xa0Here you can filter on your order, delete the invoicing history, and move on with your life.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/05/image.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/the-sales-order-cannot-be-deleted-because-related-not-posted-transactions-exist/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5ccdb58f89c73200c0efdc53"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-tips-tricks tag-d365 tag-errors no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-05-14">14 May 2019</time>\n<span class="date-divider">/</span> <a href="/tag/tips-tricks/">Tips Tricks</a>\n</section>\n<h1 class="post-full-title">The sales order cannot be deleted because related not posted transactions exist</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Breaking up with sales orders can be hard to do. \xa0You try your best to make invoicing work, but eventually you cut your losses and to part ways. \xa0Or at least try to. \xa0"The sales order cannot be deleted because related not posted transactions exist" error can appear for a variety of reasons; sometimes those reasons make sense, and sometimes they\'re confusing. \xa0</p><p>The least common, and rarely thought of reason for this error is because there are existing invoice history records (ie invoicing demons) related to the order. \xa0This is why even if you delete every order line (SalesLine), the error still comes up when you try to delete the empty header (SalesTable). \xa0In lower tier environments, it\'s easy to delete the SalesParmTable and SalesParmLine table records with a job or script, however in a production environment you have to brush up on your navigation skills.</p><p>Accounts receivable &gt; Inquiries and reports &gt; Invoices &gt; Invoice history is your path to healing. \xa0Here you can filter on your order, delete the invoicing history, and move on with your life.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/05/image.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/the-sales-order-cannot-be-deleted-because-related-not-posted-transactions-exist/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5ccdb58f89c73200c0efdc53"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,499 - INFO - Processing: https://www.d365stuff.co/json-odata/
2025-05-26 11:39:06,499 - INFO - HTML file already exists for https://www.d365stuff.co/json-odata/, reading from disk
2025-05-26 11:39:06,504 - INFO - Content unchanged for posts/json-odata.md, skipping save
2025-05-26 11:39:06,540 - ERROR - Error saving MarkItDown markdown: [Errno 36] File name too long: '<article class="post-full post tag-tips-tricks tag-odata tag-d365 tag-ax tag-dmf tag-data-entity tag-aif no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-04-16">16 April 2019</time>\n<span class="date-divider">/</span> <a href="/tag/tips-tricks/">Tips Tricks</a>\n</section>\n<h1 class="post-full-title">JSON ODATA for people that miss AIF</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>One of the seemingly scariest changes moving to D365 a few years ago [when it was still AX7] was the loss of the constant in our lives that was AIF. \xa0AIF was the crux of EDI – it handled inbound and outbound messages, had innate transactional scope at the message level regardless of complexity, and at the end of the day you just felt good and secure seeing a tangible [XML] file in a folder that you could, run, rerun, and archive. \xa0</p><p>The other nice thing about AIF and XML documents is that you don\'t have to have a technical background to manage and understand them. \xa0A formatted XML document is very easy to read and the message history and error log was readily accessible in AX. \xa0Since catapulting to the cloud, every project I go on yields the same questions from AIF gurus of old, "What\'s a JSON?" \xa0"What does ODATA even mean?" \xa0</p><p>First, JSON means JavaScript Object Notation; the only thing you really need to get from that is that it\'s a format for writing stuff (in this case objects, such as sales order numbers, SKUs, amounts, etc). \xa0At the end of the day, JSON is your new XML. \xa0What used to read like this:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/04/image-1.png"/></figure><p>Now potentially reads like this:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/04/image-2.png"/></figure><p>Second, ODATA is short for Open Data Protocol. \xa0If that doesn\'t mean anything to you, you might go down the Google rabbit hole of "What\'s REST?" \xa0"What\'s SOAP?" \xa0What\'s important to understand is that ODATA is used by a ton of humans (ie people you want to integrate with) and it supports JSON. \xa0In an AIF-less world, ODATA is a mechanism for your EDI partner to [eg] get your customers\' orders [$$$] in your system.</p><p>Even though ODATA and JSON aren\'t new to the world at large, the way they are implemented in D365 is still special. \xa0Users [you] can use ODATA to query D365 data and get results in a JSON format from the convenience a web browser. \xa0In my opinion, learning to master, or even fumble through this, is essential in an environment where you don\'t have SQL access. \xa0You can visualize data at large, get record counts, and get empathy for your integration partners by seeing what they see.</p><p>Step one: Change the your environment URL to end with the word data instead of company id and menu object. \xa0This will reveal a list of all the data entities available to you.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/04/image-3.png"/></figure><p>Step Two. If you know what you\'re looking for, append the entity name to your URL, otherwise hit CTRL + F and search stuff. \xa0Let\'s say you loaded a giant movement journal and are asking yourself, "Is DMF doing anything? Is anything happening or is the system just spinning?" \xa0Search for movement, and look for something meaningful. \xa0You can always tie this back to a data project you made as well.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/04/image-4.png"/></figure><p>Step three. \xa0Copy and paste the name into your url after data. \xa0This is case sensitive! \xa0In this example, <a href="https://d365stuff.dynamics.com/data/InventoryMovementJournalEntries?ref=d365stuff.co">https://D365Stuff.sandbox.operations.dynamics.com/data</a> becomes <a href="https://d365stuff.dynamics.com/data/InventoryMovementJournalEntries?ref=d365stuff.co">https://D365Stuff.sandbox.operations.dynamics.com/data/InventoryMovementJournalEntries</a></p><p>Step four. Add filters. \xa0To get the record count, you can add count to the end of the URL. \xa0If you aren\'t sure whether that data project spinning or not, refreshing this will tell you if the record count is increasing (aka actually doing something). \xa0</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/04/image-7.png"/></figure><p>Bonus step. \xa0Add a filter to your count. \xa0You can have multiple filters and operators at the same time! Here is an example to check a record count (growing or not) for a specific journal:</p><p><a href="https://d365stuff.sandbox.operations.dynamics.com/data/InventoryMovementJournalEntries/$count?%24filter=JournalNumber+eq+%27000001%27&amp;ref=d365stuff.co">https://D365Stuff.sandbox.operations.dynamics.com/data/InventoryMovementJournalEntries/$count?$filter=JournalNumber eq \'000001\'</a></p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/04/image-6.png"/></figure><p>The possibilities are endless. \xa0You can do cross company queries, sorts, and various operators. \xa0The best resource for more details is <a href="https://docs.microsoft.com/en-us/dynamics365/unified-operations/dev-itpro/data-entities/odata?ref=d365stuff.co">here</a>, but you can apply almost anything you read about ODATA outside of Microsoft Docs to your D365 instance.</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/json-odata/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c7b146c774e6f00c0e36365"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
OSError: [Errno 36] File name too long: '<article class="post-full post tag-tips-tricks tag-odata tag-d365 tag-ax tag-dmf tag-data-entity tag-aif no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-04-16">16 April 2019</time>\n<span class="date-divider">/</span> <a href="/tag/tips-tricks/">Tips Tricks</a>\n</section>\n<h1 class="post-full-title">JSON ODATA for people that miss AIF</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>One of the seemingly scariest changes moving to D365 a few years ago [when it was still AX7] was the loss of the constant in our lives that was AIF. \xa0AIF was the crux of EDI – it handled inbound and outbound messages, had innate transactional scope at the message level regardless of complexity, and at the end of the day you just felt good and secure seeing a tangible [XML] file in a folder that you could, run, rerun, and archive. \xa0</p><p>The other nice thing about AIF and XML documents is that you don\'t have to have a technical background to manage and understand them. \xa0A formatted XML document is very easy to read and the message history and error log was readily accessible in AX. \xa0Since catapulting to the cloud, every project I go on yields the same questions from AIF gurus of old, "What\'s a JSON?" \xa0"What does ODATA even mean?" \xa0</p><p>First, JSON means JavaScript Object Notation; the only thing you really need to get from that is that it\'s a format for writing stuff (in this case objects, such as sales order numbers, SKUs, amounts, etc). \xa0At the end of the day, JSON is your new XML. \xa0What used to read like this:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/04/image-1.png"/></figure><p>Now potentially reads like this:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/04/image-2.png"/></figure><p>Second, ODATA is short for Open Data Protocol. \xa0If that doesn\'t mean anything to you, you might go down the Google rabbit hole of "What\'s REST?" \xa0"What\'s SOAP?" \xa0What\'s important to understand is that ODATA is used by a ton of humans (ie people you want to integrate with) and it supports JSON. \xa0In an AIF-less world, ODATA is a mechanism for your EDI partner to [eg] get your customers\' orders [$$$] in your system.</p><p>Even though ODATA and JSON aren\'t new to the world at large, the way they are implemented in D365 is still special. \xa0Users [you] can use ODATA to query D365 data and get results in a JSON format from the convenience a web browser. \xa0In my opinion, learning to master, or even fumble through this, is essential in an environment where you don\'t have SQL access. \xa0You can visualize data at large, get record counts, and get empathy for your integration partners by seeing what they see.</p><p>Step one: Change the your environment URL to end with the word data instead of company id and menu object. \xa0This will reveal a list of all the data entities available to you.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/04/image-3.png"/></figure><p>Step Two. If you know what you\'re looking for, append the entity name to your URL, otherwise hit CTRL + F and search stuff. \xa0Let\'s say you loaded a giant movement journal and are asking yourself, "Is DMF doing anything? Is anything happening or is the system just spinning?" \xa0Search for movement, and look for something meaningful. \xa0You can always tie this back to a data project you made as well.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/04/image-4.png"/></figure><p>Step three. \xa0Copy and paste the name into your url after data. \xa0This is case sensitive! \xa0In this example, <a href="https://d365stuff.dynamics.com/data/InventoryMovementJournalEntries?ref=d365stuff.co">https://D365Stuff.sandbox.operations.dynamics.com/data</a> becomes <a href="https://d365stuff.dynamics.com/data/InventoryMovementJournalEntries?ref=d365stuff.co">https://D365Stuff.sandbox.operations.dynamics.com/data/InventoryMovementJournalEntries</a></p><p>Step four. Add filters. \xa0To get the record count, you can add count to the end of the URL. \xa0If you aren\'t sure whether that data project spinning or not, refreshing this will tell you if the record count is increasing (aka actually doing something). \xa0</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/04/image-7.png"/></figure><p>Bonus step. \xa0Add a filter to your count. \xa0You can have multiple filters and operators at the same time! Here is an example to check a record count (growing or not) for a specific journal:</p><p><a href="https://d365stuff.sandbox.operations.dynamics.com/data/InventoryMovementJournalEntries/$count?%24filter=JournalNumber+eq+%27000001%27&amp;ref=d365stuff.co">https://D365Stuff.sandbox.operations.dynamics.com/data/InventoryMovementJournalEntries/$count?$filter=JournalNumber eq \'000001\'</a></p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/04/image-6.png"/></figure><p>The possibilities are endless. \xa0You can do cross company queries, sorts, and various operators. \xa0The best resource for more details is <a href="https://docs.microsoft.com/en-us/dynamics365/unified-operations/dev-itpro/data-entities/odata?ref=d365stuff.co">here</a>, but you can apply almost anything you read about ODATA outside of Microsoft Docs to your D365 instance.</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/json-odata/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c7b146c774e6f00c0e36365"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,540 - INFO - Processing: https://www.d365stuff.co/send-noninteractive-e-mail-x-d365/
2025-05-26 11:39:06,541 - INFO - HTML file already exists for https://www.d365stuff.co/send-noninteractive-e-mail-x-d365/, reading from disk
2025-05-26 11:39:06,544 - INFO - Content unchanged for posts/send-noninteractive-e-mail-x-d365.md, skipping save
2025-05-26 11:39:06,578 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-d365 tag-e-mail tag-integrations no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-04-02">2 April 2019</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">Send NonInteractive E-mail x++ D365</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>There are a lot of posts out there about how to send e-mails in Dynamics. \xa0It\'s something we\'ve all been doing for years, but a lot of us could be doing it better. \xa0Most of the material I see out there uses the SysMailerSMTP class, which means committing to a protocol that was first devised in 1982. \xa0It also implies committing to a protocol that may not be the same as what was configured in your D365 system. </p><p>There\'s a system parameter that dictates the E-mail provider used by batch classes. \xa0I think it\'s a good practice to use that. \xa0Since it\'s 2019 (or later because I don\'t know when you\'re reading this), you probably shouldn\'t be using SMTP at all in a production environment, but I don\'t know your life. \xa0The overall key is using the SysMailerFactory::getNonInteractiveMailer() method; this will always keep your code synced with your system configuration.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/04/image.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/send-noninteractive-e-mail-x-d365/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5ca3f181fbd36300c07f0197"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-d365 tag-e-mail tag-integrations no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-04-02">2 April 2019</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">Send NonInteractive E-mail x++ D365</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>There are a lot of posts out there about how to send e-mails in Dynamics. \xa0It\'s something we\'ve all been doing for years, but a lot of us could be doing it better. \xa0Most of the material I see out there uses the SysMailerSMTP class, which means committing to a protocol that was first devised in 1982. \xa0It also implies committing to a protocol that may not be the same as what was configured in your D365 system. </p><p>There\'s a system parameter that dictates the E-mail provider used by batch classes. \xa0I think it\'s a good practice to use that. \xa0Since it\'s 2019 (or later because I don\'t know when you\'re reading this), you probably shouldn\'t be using SMTP at all in a production environment, but I don\'t know your life. \xa0The overall key is using the SysMailerFactory::getNonInteractiveMailer() method; this will always keep your code synced with your system configuration.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/04/image.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/send-noninteractive-e-mail-x-d365/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5ca3f181fbd36300c07f0197"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,578 - INFO - Processing: https://www.d365stuff.co/mailbox-does-not-exist/
2025-05-26 11:39:06,579 - INFO - HTML file already exists for https://www.d365stuff.co/mailbox-does-not-exist/, reading from disk
2025-05-26 11:39:06,582 - INFO - Content unchanged for posts/mailbox-does-not-exist.md, skipping save
2025-05-26 11:39:06,613 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-errors tag-e-mail tag-d365 tag-tips-tricks no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-03-14">14 March 2019</time>\n<span class="date-divider">/</span> <a href="/tag/errors/">Errors</a>\n</section>\n<h1 class="post-full-title">Mailbox does not exist.</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Hunting this one down can be painful. \xa0The message isn\'t attached to any label file, and backtracking through a breakpoint doesn\'t reveal much either. \xa09 out of 10 times this error is thrown over a forgotten Email template in Print Management.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/03/image.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/mailbox-does-not-exist/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c89ace0b5eb6100cc4d1480"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-errors tag-e-mail tag-d365 tag-tips-tricks no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-03-14">14 March 2019</time>\n<span class="date-divider">/</span> <a href="/tag/errors/">Errors</a>\n</section>\n<h1 class="post-full-title">Mailbox does not exist.</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Hunting this one down can be painful. \xa0The message isn\'t attached to any label file, and backtracking through a breakpoint doesn\'t reveal much either. \xa09 out of 10 times this error is thrown over a forgotten Email template in Print Management.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/03/image.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/mailbox-does-not-exist/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c89ace0b5eb6100cc4d1480"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,614 - INFO - Processing: https://www.d365stuff.co/entity-cannot-be-deleted-while-dependent-entities-for-a-processing-group-exist-delete-dependent-entities-for-a-processing-group-and-try-again/
2025-05-26 11:39:06,614 - INFO - HTML file already exists for https://www.d365stuff.co/entity-cannot-be-deleted-while-dependent-entities-for-a-processing-group-exist-delete-dependent-entities-for-a-processing-group-and-try-again/, reading from disk
2025-05-26 11:39:06,618 - INFO - Content unchanged for posts/entity-cannot-be-deleted-while-dependent-entities-.md, skipping save
2025-05-26 11:39:06,648 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-tips-tricks tag-d365 tag-dmf tag-errors no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-02-27">27 February 2019</time>\n<span class="date-divider">/</span> <a href="/tag/tips-tricks/">Tips Tricks</a>\n</section>\n<h1 class="post-full-title">Entity cannot be deleted while dependent Entities for a processing group exist. Delete dependent Entities for a processing group and try again.</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Sometimes, you need to delete a data entity from the data entity master. \xa0Sometimes, that\'s a pain to do because it\'s referenced in a data project, and you have to delete that reference before you can delete the master data. \xa0Sometimes, you have hundreds of data projects to go through, and it sucks a lot.</p><p>You can always use table browser, lookup the DMFDefinitionGroupEntity table, and filter on the entity you\'re trying to delete to find the data projects to resolve. \xa0</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/02/image-1.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/entity-cannot-be-deleted-while-dependent-entities-for-a-processing-group-exist-delete-dependent-entities-for-a-processing-group-and-try-again/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c770bda774e6f00c0e36348"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-tips-tricks tag-d365 tag-dmf tag-errors no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-02-27">27 February 2019</time>\n<span class="date-divider">/</span> <a href="/tag/tips-tricks/">Tips Tricks</a>\n</section>\n<h1 class="post-full-title">Entity cannot be deleted while dependent Entities for a processing group exist. Delete dependent Entities for a processing group and try again.</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Sometimes, you need to delete a data entity from the data entity master. \xa0Sometimes, that\'s a pain to do because it\'s referenced in a data project, and you have to delete that reference before you can delete the master data. \xa0Sometimes, you have hundreds of data projects to go through, and it sucks a lot.</p><p>You can always use table browser, lookup the DMFDefinitionGroupEntity table, and filter on the entity you\'re trying to delete to find the data projects to resolve. \xa0</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/02/image-1.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/entity-cannot-be-deleted-while-dependent-entities-for-a-processing-group-exist-delete-dependent-entities-for-a-processing-group-and-try-again/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c770bda774e6f00c0e36348"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,648 - INFO - Processing: https://www.d365stuff.co/drop-table-d365-x-sp_removetable/
2025-05-26 11:39:06,648 - INFO - HTML file already exists for https://www.d365stuff.co/drop-table-d365-x-sp_removetable/, reading from disk
2025-05-26 11:39:06,652 - INFO - Content unchanged for posts/drop-table-d365-x-sp_removetable.md, skipping save
2025-05-26 11:39:06,684 - ERROR - Error saving MarkItDown markdown: [Errno 36] File name too long: '<article class="post-full post tag-d365 tag-sql tag-t-sql tag-drop tag-sqldictionary tag-database-synchronization no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-02-19">19 February 2019</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">D365 DROP Table SP_RemoveTable</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>TL;DR: In D365, use SP_RemoveTable instead of DROP.</p><p>Every now and then, whether it\'s your fault or not, a table is going to get FUBAR in your DEV environment. \xa0The rest of the world will keep spinning, and no one will care about the catastrophic problem that only you have. \xa0</p><p>One of the cool things about AX has always been if you delete files, or drop a table, a simple AOS restart will bring them back. \xa0You need to be a little extra careful in D365. \xa0Recently I got an ISV update that caused my DB sych to break, ultimately because it was trying to add new the same fields to the SQLDictionary twice, causing a unique index violation. \xa0A great problem for one person to have. </p><p>If you don\'t care about the data in the table, a nice old fashioned SQL DROP can get you halfway to "fixing" a DB synch – however it\'s very possible that your table won\'t be recreated on your next DB synch. \xa0A DB synch will never complete if the environment has missing [deleted] objects while references to those objects still exist in the SQLDictionary. \xa0Herein lies the golden nugget of the story, SP_RemoveTable. \xa0SP_RemoveTable is a great, safe way to remove all of a table\'s references from the SQLDictionary table. \xa0Next time you\'re ready to crush some tables, use SP_RemoveTable.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/02/image.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/drop-table-d365-x-sp_removetable/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c6c926a9a403a00c0dcf98c"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
OSError: [Errno 36] File name too long: '<article class="post-full post tag-d365 tag-sql tag-t-sql tag-drop tag-sqldictionary tag-database-synchronization no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-02-19">19 February 2019</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">D365 DROP Table SP_RemoveTable</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>TL;DR: In D365, use SP_RemoveTable instead of DROP.</p><p>Every now and then, whether it\'s your fault or not, a table is going to get FUBAR in your DEV environment. \xa0The rest of the world will keep spinning, and no one will care about the catastrophic problem that only you have. \xa0</p><p>One of the cool things about AX has always been if you delete files, or drop a table, a simple AOS restart will bring them back. \xa0You need to be a little extra careful in D365. \xa0Recently I got an ISV update that caused my DB sych to break, ultimately because it was trying to add new the same fields to the SQLDictionary twice, causing a unique index violation. \xa0A great problem for one person to have. </p><p>If you don\'t care about the data in the table, a nice old fashioned SQL DROP can get you halfway to "fixing" a DB synch – however it\'s very possible that your table won\'t be recreated on your next DB synch. \xa0A DB synch will never complete if the environment has missing [deleted] objects while references to those objects still exist in the SQLDictionary. \xa0Herein lies the golden nugget of the story, SP_RemoveTable. \xa0SP_RemoveTable is a great, safe way to remove all of a table\'s references from the SQLDictionary table. \xa0Next time you\'re ready to crush some tables, use SP_RemoveTable.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/02/image.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/drop-table-d365-x-sp_removetable/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c6c926a9a403a00c0dcf98c"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,685 - INFO - Processing: https://www.d365stuff.co/import-export-migrate-receipt-formats/
2025-05-26 11:39:06,685 - INFO - HTML file already exists for https://www.d365stuff.co/import-export-migrate-receipt-formats/, reading from disk
2025-05-26 11:39:06,689 - INFO - Content unchanged for posts/import-export-migrate-receipt-formats.md, skipping save
2025-05-26 11:39:06,720 - ERROR - Error saving MarkItDown markdown: [Errno 36] File name too long: '<article class="post-full post tag-retail tag-receipt-designer tag-dmf tag-retail-receipt tag-d365 tag-tips-tricks no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-02-08">8 February 2019</time>\n<span class="date-divider">/</span> <a href="/tag/retail/">Retail</a>\n</section>\n<h1 class="post-full-title">Import Export Migrate Retail Receipt Formats</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>This is a super fun task. \xa0After all the hard work you spent in the archaic AF designer, moving your work from one environment to another should be easy. \xa0It can be easy, but it can also cause you to throw your laptop out the window if you aren\'t precise in your steps. \xa0</p><p>You\'ve probably gotten the "Value cannot be null" error message, or been warned your XML is too long and is about to be truncated. \xa0It\'s ok. \xa0Just be sure to do the following:</p><ol><li> Use the "XML-Attribute" format on your data entity. \xa0You\'ll be sorry if you don\'t.</li><li>Ignore any warnings you get. </li><li>Get your sequence right: Receipt Format &gt;&gt; Receipt Profile &gt;&gt; Receipt Profile Line</li><li>Relax.</li></ol>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/import-export-migrate-receipt-formats/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c5e0ee007f41b00c0234912"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg"/>\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
OSError: [Errno 36] File name too long: '<article class="post-full post tag-retail tag-receipt-designer tag-dmf tag-retail-receipt tag-d365 tag-tips-tricks no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-02-08">8 February 2019</time>\n<span class="date-divider">/</span> <a href="/tag/retail/">Retail</a>\n</section>\n<h1 class="post-full-title">Import Export Migrate Retail Receipt Formats</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>This is a super fun task. \xa0After all the hard work you spent in the archaic AF designer, moving your work from one environment to another should be easy. \xa0It can be easy, but it can also cause you to throw your laptop out the window if you aren\'t precise in your steps. \xa0</p><p>You\'ve probably gotten the "Value cannot be null" error message, or been warned your XML is too long and is about to be truncated. \xa0It\'s ok. \xa0Just be sure to do the following:</p><ol><li> Use the "XML-Attribute" format on your data entity. \xa0You\'ll be sorry if you don\'t.</li><li>Ignore any warnings you get. </li><li>Get your sequence right: Receipt Format &gt;&gt; Receipt Profile &gt;&gt; Receipt Profile Line</li><li>Relax.</li></ol>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/import-export-migrate-receipt-formats/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c5e0ee007f41b00c0234912"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg"/>\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,720 - INFO - Processing: https://www.d365stuff.co/ledgerdimensionfacade/
2025-05-26 11:39:06,720 - INFO - HTML file already exists for https://www.d365stuff.co/ledgerdimensionfacade/, reading from disk
2025-05-26 11:39:06,724 - INFO - Content unchanged for posts/ledgerdimensionfacade.md, skipping save
2025-05-26 11:39:06,758 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-d365 tag-defaultdimension tag-ledgerdimension no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-02-04">4 February 2019</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">LedgerDimensionFacade is the new DimensionDefaultingService</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>This is more of a reminder for me than you that the DimensionDefaultingService class doesn\'t exist in D365. \xa0The DimensionDefaultingService was a short-lived class; brought into existence for only one version of AX. \xa0Its legacy lives on now in the LedgerDimensionFacade, where we can [most importantly] call the serviceCreateLedgerDimension() method to combine the RecId values of a LedgerDimension and up to four DefaultDimensions. \xa0Of course it has a lot more to offer, but you\'ll have to look at the class code for that.</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/ledgerdimensionfacade/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c589e5e8fd12800c06106c2"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg"/>\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-d365 tag-defaultdimension tag-ledgerdimension no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-02-04">4 February 2019</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">LedgerDimensionFacade is the new DimensionDefaultingService</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>This is more of a reminder for me than you that the DimensionDefaultingService class doesn\'t exist in D365. \xa0The DimensionDefaultingService was a short-lived class; brought into existence for only one version of AX. \xa0Its legacy lives on now in the LedgerDimensionFacade, where we can [most importantly] call the serviceCreateLedgerDimension() method to combine the RecId values of a LedgerDimension and up to four DefaultDimensions. \xa0Of course it has a lot more to offer, but you\'ll have to look at the class code for that.</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/ledgerdimensionfacade/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c589e5e8fd12800c06106c2"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg"/>\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,759 - INFO - Processing: https://www.d365stuff.co/customdataentityopeninexcel/
2025-05-26 11:39:06,759 - INFO - HTML file already exists for https://www.d365stuff.co/customdataentityopeninexcel/, reading from disk
2025-05-26 11:39:06,763 - INFO - Content unchanged for posts/customdataentityopeninexcel.md, skipping save
2025-05-26 11:39:06,793 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-dmf tag-open-in-excel tag-d365 tag-excel no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-01-18">18 January 2019</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">x++ Add custom DMF entity to form; Open in Excel</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>We all know that data entities that have the same root datasource (table) as a form will cause the data entity to automagically appear in the form\'s Open in Excel menu option. \xa0What if you need to force add this option via extension? \xa0It\'s a very reasonable request that you\'ll get asked to do, and is surprisingly hard to research. \xa0Until now. \xa0</p><p>The code has changed a bit throughout D365\'s evolution. \xa0If anything, it\'s gotten simpler since you no longer have to implement any ExportToExcel* classes.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/01/image.png"/></figure><p>Need more fields to appear in your Excel sheet? Add them to the AutoReport fieldgroup of the table!</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/customdataentityopeninexcel/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c42478b8932dc00c0a8ac30"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-dmf tag-open-in-excel tag-d365 tag-excel no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2019-01-18">18 January 2019</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">x++ Add custom DMF entity to form; Open in Excel</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>We all know that data entities that have the same root datasource (table) as a form will cause the data entity to automagically appear in the form\'s Open in Excel menu option. \xa0What if you need to force add this option via extension? \xa0It\'s a very reasonable request that you\'ll get asked to do, and is surprisingly hard to research. \xa0Until now. \xa0</p><p>The code has changed a bit throughout D365\'s evolution. \xa0If anything, it\'s gotten simpler since you no longer have to implement any ExportToExcel* classes.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2019/01/image.png"/></figure><p>Need more fields to appear in your Excel sheet? Add them to the AutoReport fieldgroup of the table!</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/customdataentityopeninexcel/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c42478b8932dc00c0a8ac30"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,793 - INFO - Processing: https://www.d365stuff.co/best-stuff/
2025-05-26 11:39:06,793 - INFO - HTML file already exists for https://www.d365stuff.co/best-stuff/, reading from disk
2025-05-26 11:39:06,798 - INFO - Content unchanged for posts/best-stuff.md, skipping save
2025-05-26 11:39:06,833 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-stuff no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-12-18">18 December 2018</time>\n<span class="date-divider">/</span> <a href="/tag/stuff/">Stuff</a>\n</section>\n<h1 class="post-full-title">Best Stuff</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Sometimes we need great tools beyond Visual Studio and the cloud. \xa0Here is an ongoing list of the best stuff:</p><p><strong>Agent Ransack</strong></p><p>Agent Ransack is what Windows Search dreams of being. \xa0It\'s the best way to search through files in a folder structure. \xa0Trying to find a specific order in an endless sea of XML files? Ransack it. \xa0Trying to find instances of D365 code in your Dev VM? Point Ransack to PackagesLocalDirectory, or a specific model [folder] of your choice.</p><p>Can be found at: <a href="https://www.mythicsoft.com/agentransack/?ref=d365stuff.co">https://www.mythicsoft.com/agentransack/</a></p><hr/><p><strong>WinMerge</strong></p><p>WinMerge is great at two things, which I really consider one thing – the differencing and merging files and folders. \xa0You probably rarely have to do this one thing, but when you do, you\'ll thank whatever you thank for open source software.</p><p>Can be found at: <a href="https://sourceforge.net/projects/winmerge/files/stable/2.16.0/WinMerge-2.16.0-Setup.exe/download?use_mirror=superb-sea2&amp;ref=d365stuff.co">https://sourceforge.net/projects/winmerge/files/stable/2.16.0/WinMerge-2.16.0-Setup.exe/download?use_mirror=superb-sea2</a></p><hr/><p><strong>Notepad++</strong></p><p>The best text editor.</p><p>Can be found at: t<a href="https://notepad-plus-plus.org/?ref=d365stuff.co">https://notepad-plus-plus.org/</a></p><hr/><p><strong>Postman</strong></p><p>Test your APIs.</p><p>Can be found at: <a href="https://www.getpostman.com/?ref=d365stuff.co">https://www.getpostman.com/</a></p><hr/><p><strong>Fiddler</strong></p><p>The best in web debugging; install it on your Dev VM. \xa0You can also test your APIs.</p><p>Can be found at: <a href="https://www.telerik.com/fiddler?ref=d365stuff.co">https://www.telerik.com/fiddler</a></p><hr/><p><strong>Sudden Coffee</strong></p><p>Not downloadable, but it could save your life. \xa0You will inevitably find yourself in a professional scenario with no good coffee to be found. \xa0Be prepared.</p><p>Can be found at: <a href="https://www.suddencoffee.com/?ref=d365stuff.co">https://www.suddencoffee.com/</a></p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/best-stuff/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c1164ddfb0b6d00bfedcced"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg"/>\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-stuff no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-12-18">18 December 2018</time>\n<span class="date-divider">/</span> <a href="/tag/stuff/">Stuff</a>\n</section>\n<h1 class="post-full-title">Best Stuff</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Sometimes we need great tools beyond Visual Studio and the cloud. \xa0Here is an ongoing list of the best stuff:</p><p><strong>Agent Ransack</strong></p><p>Agent Ransack is what Windows Search dreams of being. \xa0It\'s the best way to search through files in a folder structure. \xa0Trying to find a specific order in an endless sea of XML files? Ransack it. \xa0Trying to find instances of D365 code in your Dev VM? Point Ransack to PackagesLocalDirectory, or a specific model [folder] of your choice.</p><p>Can be found at: <a href="https://www.mythicsoft.com/agentransack/?ref=d365stuff.co">https://www.mythicsoft.com/agentransack/</a></p><hr/><p><strong>WinMerge</strong></p><p>WinMerge is great at two things, which I really consider one thing – the differencing and merging files and folders. \xa0You probably rarely have to do this one thing, but when you do, you\'ll thank whatever you thank for open source software.</p><p>Can be found at: <a href="https://sourceforge.net/projects/winmerge/files/stable/2.16.0/WinMerge-2.16.0-Setup.exe/download?use_mirror=superb-sea2&amp;ref=d365stuff.co">https://sourceforge.net/projects/winmerge/files/stable/2.16.0/WinMerge-2.16.0-Setup.exe/download?use_mirror=superb-sea2</a></p><hr/><p><strong>Notepad++</strong></p><p>The best text editor.</p><p>Can be found at: t<a href="https://notepad-plus-plus.org/?ref=d365stuff.co">https://notepad-plus-plus.org/</a></p><hr/><p><strong>Postman</strong></p><p>Test your APIs.</p><p>Can be found at: <a href="https://www.getpostman.com/?ref=d365stuff.co">https://www.getpostman.com/</a></p><hr/><p><strong>Fiddler</strong></p><p>The best in web debugging; install it on your Dev VM. \xa0You can also test your APIs.</p><p>Can be found at: <a href="https://www.telerik.com/fiddler?ref=d365stuff.co">https://www.telerik.com/fiddler</a></p><hr/><p><strong>Sudden Coffee</strong></p><p>Not downloadable, but it could save your life. \xa0You will inevitably find yourself in a professional scenario with no good coffee to be found. \xa0Be prepared.</p><p>Can be found at: <a href="https://www.suddencoffee.com/?ref=d365stuff.co">https://www.suddencoffee.com/</a></p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/best-stuff/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c1164ddfb0b6d00bfedcced"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg"/>\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,834 - INFO - Processing: https://www.d365stuff.co/dmfutil-dmfdownloaddatapackage/
2025-05-26 11:39:06,834 - INFO - HTML file already exists for https://www.d365stuff.co/dmfutil-dmfdownloaddatapackage/, reading from disk
2025-05-26 11:39:06,839 - INFO - Content unchanged for posts/dmfutil-dmfdownloaddatapackage.md, skipping save
2025-05-26 11:39:06,873 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-dmf tag-dmfutil tag-dmfdownloaddatapackage tag-d365 no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-12-12">12 December 2018</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">DMFUtil DMFDownloadDataPackage Stuff</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>The DMFUtil class is a great code collection to be aware of in case you ever find yourself trying to kick off DMF import/exports via x++, or are just curious about how some of that entity stuff works. \xa0</p><p>The setupNewExecution method is the most convenient and succinct way you can create a new execution to kick off. \xa0First, all you need is the string name of your definition group, which could have been created manually or through code. \xa0Next, the ExecutionId is generated (and ultimately returned) via the mother of all ExecutionIds (you should check out the generateExecutionId method as well). \xa0</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/12/image-2.png"/></figure><p>The DMFDefinitionGroupExecution::InsertOrDisplay method is the super helpful finale. \xa0If you peek in there, you\'ll see a lot of fussy work being done for you. \xa0Once you get your own DMFDefinitionGroupExecution record, you can do pretty much any DMF-related thing you want. \xa0My favorite use-case is calling the DMFDownloadDataPackage class to create a downloadable package: </p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/12/image-3.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/dmfutil-dmfdownloaddatapackage/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c114b67fb0b6d00bfedccbe"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-dmf tag-dmfutil tag-dmfdownloaddatapackage tag-d365 no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-12-12">12 December 2018</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">DMFUtil DMFDownloadDataPackage Stuff</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>The DMFUtil class is a great code collection to be aware of in case you ever find yourself trying to kick off DMF import/exports via x++, or are just curious about how some of that entity stuff works. \xa0</p><p>The setupNewExecution method is the most convenient and succinct way you can create a new execution to kick off. \xa0First, all you need is the string name of your definition group, which could have been created manually or through code. \xa0Next, the ExecutionId is generated (and ultimately returned) via the mother of all ExecutionIds (you should check out the generateExecutionId method as well). \xa0</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/12/image-2.png"/></figure><p>The DMFDefinitionGroupExecution::InsertOrDisplay method is the super helpful finale. \xa0If you peek in there, you\'ll see a lot of fussy work being done for you. \xa0Once you get your own DMFDefinitionGroupExecution record, you can do pretty much any DMF-related thing you want. \xa0My favorite use-case is calling the DMFDownloadDataPackage class to create a downloadable package: </p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/12/image-3.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/dmfutil-dmfdownloaddatapackage/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c114b67fb0b6d00bfedccbe"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,874 - INFO - Processing: https://www.d365stuff.co/x-in-clause/
2025-05-26 11:39:06,874 - INFO - HTML file already exists for https://www.d365stuff.co/x-in-clause/, reading from disk
2025-05-26 11:39:06,878 - INFO - Content unchanged for posts/x-in-clause.md, skipping save
2025-05-26 11:39:06,912 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-sql tag-d365 no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-12-07">7 December 2018</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">x++ in operator</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Without a doubt, the most overlooked new feature of D365 is that in is finally in. \xa0If you research \'x++ in operator\' you\'ll find a long history of people in pain. \xa0Without in, their AX solutions have been assaulted by an overwhelming number of ||\'s to compensate. \xa0Thankfully, it\'s 2018; we can flawlessly land a rover on Mars, and we can put all the criteria we want in a container.</p><p>Here\'s an OOB example of || pain:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/12/image.png"/></figure><p>Here\'s a potential way to refactor with modern technology:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/12/image-1.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/x-in-clause/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c0aa415246a4200c032c087"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-sql tag-d365 no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-12-07">7 December 2018</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">x++ in operator</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Without a doubt, the most overlooked new feature of D365 is that in is finally in. \xa0If you research \'x++ in operator\' you\'ll find a long history of people in pain. \xa0Without in, their AX solutions have been assaulted by an overwhelming number of ||\'s to compensate. \xa0Thankfully, it\'s 2018; we can flawlessly land a rover on Mars, and we can put all the criteria we want in a container.</p><p>Here\'s an OOB example of || pain:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/12/image.png"/></figure><p>Here\'s a potential way to refactor with modern technology:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/12/image-1.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/x-in-clause/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c0aa415246a4200c032c087"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,913 - INFO - Processing: https://www.d365stuff.co/dmf-jumpref/
2025-05-26 11:39:06,913 - INFO - HTML file already exists for https://www.d365stuff.co/dmf-jumpref/, reading from disk
2025-05-26 11:39:06,917 - INFO - Content unchanged for posts/dmf-jumpref.md, skipping save
2025-05-26 11:39:06,962 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-d365 tag-ax tag-dmf tag-dmfformbrowser no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-11-15">15 November 2018</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">DMF JumpRef</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>No matter who you are, if you\'re working with D365 you\'re working with DMF. \xa0You will inevitably have data problems and be trying to review your staging data in the visualizer, however that form can\'t be called from code just like any other form. \xa0Here are the three keys behind calling the form properly.</p><ol><li>Get the name right. \xa0The form object name is DMFDataVizualization. \xa0With a z.</li><li> <strong>Don\'t </strong>use the DMFDataVizualization display menu item and pass args its way. \xa0You will get an error because of the form\'s init code: </li></ol><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/11/image-2.png"/></figure><p>3. Use the DMFFormBrowser class:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/11/image-5.png"/></figure><p>In short:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/11/image-8.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/dmf-jumpref/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5be3d6fb709da400bf54021f"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-d365 tag-ax tag-dmf tag-dmfformbrowser no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-11-15">15 November 2018</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">DMF JumpRef</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>No matter who you are, if you\'re working with D365 you\'re working with DMF. \xa0You will inevitably have data problems and be trying to review your staging data in the visualizer, however that form can\'t be called from code just like any other form. \xa0Here are the three keys behind calling the form properly.</p><ol><li>Get the name right. \xa0The form object name is DMFDataVizualization. \xa0With a z.</li><li> <strong>Don\'t </strong>use the DMFDataVizualization display menu item and pass args its way. \xa0You will get an error because of the form\'s init code: </li></ol><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/11/image-2.png"/></figure><p>3. Use the DMFFormBrowser class:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/11/image-5.png"/></figure><p>In short:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/11/image-8.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/dmf-jumpref/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5be3d6fb709da400bf54021f"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:06,962 - INFO - Processing: https://www.d365stuff.co/update-defaultdimension/
2025-05-26 11:39:06,962 - INFO - HTML file already exists for https://www.d365stuff.co/update-defaultdimension/, reading from disk
2025-05-26 11:39:06,966 - INFO - Content unchanged for posts/update-defaultdimension.md, skipping save
2025-05-26 11:39:07,002 - ERROR - Error saving MarkItDown markdown: [Errno 36] File name too long: '<article class="post-full post tag-x tag-ax tag-d365 tag-axapta tag-defaultdimension tag-financial-dimensions no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-11-30">30 November 2018</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">Update defaultDimension</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>This has been sitting in a txt file on my desktop for years. \xa0I don\'t remember when it came about, but I put this in a helper class everywhere I go. \xa0Inevitably, a supply chain or financial someone isn\'t going to be happy with the financial dimensions they\'ve been given. \xa0This is how you can make those people happy. \xa0I recommend making a constant [class] to handle your dimension names.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/11/image-12.png"/></figure><p>Here is a revised version, that allows you to update multiple values at once using a Map object:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/11/image-13.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/update-defaultdimension/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c01a9342f660600c0b91fa9"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
OSError: [Errno 36] File name too long: '<article class="post-full post tag-x tag-ax tag-d365 tag-axapta tag-defaultdimension tag-financial-dimensions no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-11-30">30 November 2018</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">Update defaultDimension</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>This has been sitting in a txt file on my desktop for years. \xa0I don\'t remember when it came about, but I put this in a helper class everywhere I go. \xa0Inevitably, a supply chain or financial someone isn\'t going to be happy with the financial dimensions they\'ve been given. \xa0This is how you can make those people happy. \xa0I recommend making a constant [class] to handle your dimension names.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/11/image-12.png"/></figure><p>Here is a revised version, that allows you to update multiple values at once using a Map object:</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/11/image-13.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/update-defaultdimension/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5c01a9342f660600c0b91fa9"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:07,002 - INFO - Processing: https://www.d365stuff.co/update_recordset-but-cross-company/
2025-05-26 11:39:07,003 - INFO - HTML file already exists for https://www.d365stuff.co/update_recordset-but-cross-company/, reading from disk
2025-05-26 11:39:07,006 - INFO - Content unchanged for posts/update_recordset-but-cross-company.md, skipping save
2025-05-26 11:39:07,040 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-d365 tag-update_recordset no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-12-05">5 December 2018</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">update_recordset, but cross-company</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>You write some nice speedy sql cross company code, it compiles, and then your good mood gets wiped away with an awful run-time error. \xa0You fix that error, and get another one. \xa0And then another one. \xa0Depending on your luck, your fourth iteration will work. \xa0Just do it right the first time. \xa0At the very least, you\'ll have to:</p><ul><li>skipDatabaseLog</li><li>skipAOSValidation</li><li>skipDataMethods</li><li>skipEvents</li></ul><p>You could skip more, but you can\'t skip less.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/11/image-11.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/update_recordset-but-cross-company/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5bea60d717900900ccb50f02"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-d365 tag-update_recordset no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-12-05">5 December 2018</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">update_recordset, but cross-company</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>You write some nice speedy sql cross company code, it compiles, and then your good mood gets wiped away with an awful run-time error. \xa0You fix that error, and get another one. \xa0And then another one. \xa0Depending on your luck, your fourth iteration will work. \xa0Just do it right the first time. \xa0At the very least, you\'ll have to:</p><ul><li>skipDatabaseLog</li><li>skipAOSValidation</li><li>skipDataMethods</li><li>skipEvents</li></ul><p>You could skip more, but you can\'t skip less.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/11/image-11.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/update_recordset-but-cross-company/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5bea60d717900900ccb50f02"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:07,042 - INFO - Processing: https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/
2025-05-26 11:39:07,042 - INFO - HTML file already exists for https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/, reading from disk
2025-05-26 11:39:07,046 - INFO - Content unchanged for posts/dmfdatapopulation-download-recurring-files.md, skipping save
2025-05-26 11:39:07,074 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-dmf tag-d365 tag-integrations no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-11-26">26 November 2018</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">DMFDataPopulation - Download Recurring Files</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Integrations are a lot of work. \xa0No matter how good you are, the project will never come together without great planning, transparency, and teamwork from all parties. \xa0In the ERP world, they can be like turning off all the lights in a gymnasium, and then trying to do-si-do while performing Masonic handshakes with your partner 1000 times per minute with your hands on the floor and your feet in the air. \xa0</p><p>Once files are submitted to your D365 recurring integration, it\'s easy for them to get lost in the cloud. \xa0You can always see how data looks like in staging tables, but what about how it looks before that? \xa0What if you want to download and see the file your dance partner catapulted to you? \xa0Make a button.</p><p>As long as you can divine the execution record, you can pass it to the DMFDataPopulation class to get a URL to download the file.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/11/image-10.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5bedd74c55fd4800c0757803"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-dmf tag-d365 tag-integrations no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-11-26">26 November 2018</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">DMFDataPopulation - Download Recurring Files</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Integrations are a lot of work. \xa0No matter how good you are, the project will never come together without great planning, transparency, and teamwork from all parties. \xa0In the ERP world, they can be like turning off all the lights in a gymnasium, and then trying to do-si-do while performing Masonic handshakes with your partner 1000 times per minute with your hands on the floor and your feet in the air. \xa0</p><p>Once files are submitted to your D365 recurring integration, it\'s easy for them to get lost in the cloud. \xa0You can always see how data looks like in staging tables, but what about how it looks before that? \xa0What if you want to download and see the file your dance partner catapulted to you? \xa0Make a button.</p><p>As long as you can divine the execution record, you can pass it to the DMFDataPopulation class to get a URL to download the file.</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/11/image-10.png"/></figure>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5bedd74c55fd4800c0757803"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:07,074 - INFO - Processing: https://www.d365stuff.co/formjsonserializer/
2025-05-26 11:39:07,075 - INFO - HTML file already exists for https://www.d365stuff.co/formjsonserializer/, reading from disk
2025-05-26 11:39:07,078 - INFO - Content unchanged for posts/formjsonserializer.md, skipping save
2025-05-26 11:39:07,109 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-d365 tag-serialization tag-data-contracts tag-json no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-11-09">9 November 2018</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">FormJsonSerializer</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>The FormJsonSerializer class is the one true JSON serializer in D365. \xa0The static serializeClass() method is the simplest to implement, and can handle the most complex of contracts. \xa0If you want to get wild, set a breakpoint and load D365 in a new browser tab.</p><p>What\'s the competition? \xa0</p><p>You could write your own class and reinvent the wheel.</p><p>You could be like the retail team and use the RetailTransactionServiceJsonHelper class but it\'s fussier. \xa0</p><p>You could stop here and just use FormJsonSerializer.</p><p></p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/formjsonserializer/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5be5b8e9709da400bf54024a"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg"/>\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-x tag-d365 tag-serialization tag-data-contracts tag-json no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-11-09">9 November 2018</time>\n<span class="date-divider">/</span> <a href="/tag/x/">x++</a>\n</section>\n<h1 class="post-full-title">FormJsonSerializer</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>The FormJsonSerializer class is the one true JSON serializer in D365. \xa0The static serializeClass() method is the simplest to implement, and can handle the most complex of contracts. \xa0If you want to get wild, set a breakpoint and load D365 in a new browser tab.</p><p>What\'s the competition? \xa0</p><p>You could write your own class and reinvent the wheel.</p><p>You could be like the retail team and use the RetailTransactionServiceJsonHelper class but it\'s fussier. \xa0</p><p>You could stop here and just use FormJsonSerializer.</p><p></p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/formjsonserializer/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5be5b8e9709da400bf54024a"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg"/>\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:07,110 - INFO - Processing: https://www.d365stuff.co/d365-address-books/
2025-05-26 11:39:07,110 - INFO - HTML file already exists for https://www.d365stuff.co/d365-address-books/, reading from disk
2025-05-26 11:39:07,114 - INFO - Content unchanged for posts/d365-address-books.md, skipping save
2025-05-26 11:39:07,145 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-d365 tag-x tag-address-book tag-diraddressbookparty no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-11-08">8 November 2018</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">D365 Address Books</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Address books are pretty much everywhere there\'s a party in D365. \xa0Customers have address books, stores have address books, workers have address books – they\'re all over the place. \xa0Even though it\'s a seemingly simple drop down in the UI, they can be a pain to update or migrate if you\'re not familiar with what is going on behind the scenes, DirAddressBookParty. \xa0The table is a collection of party RecIds and address book RecIds, which allows each party to host multiple address books in this M:M table.</p><p>The solution to populating and managing the table lies within itself, its static methods createPartyRelations() and createPartyRelationsByName() (however the latter works by calling the former).</p><p>To see it in action, let\'s investigate Microsoft\'s own code in the RetailTransactionServiceCustomer class:</p><p>1)Build a container object with the address book RecIds that you want</p><p>2)Call the createPartyRelations method with that container and the RecId of the party you are adding them to. \xa0</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/11/image-1.png"/></figure><p>The best part about using this method is that it will check if the address book is already associated with the party to help you avoid unique index violations. \xa0And is there really anything better than avoiding unique index violations? \xa0They suck.</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/d365-address-books/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5be3c98a709da400bf5401eb"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-d365 tag-x tag-address-book tag-diraddressbookparty no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-11-08">8 November 2018</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">D365 Address Books</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Address books are pretty much everywhere there\'s a party in D365. \xa0Customers have address books, stores have address books, workers have address books – they\'re all over the place. \xa0Even though it\'s a seemingly simple drop down in the UI, they can be a pain to update or migrate if you\'re not familiar with what is going on behind the scenes, DirAddressBookParty. \xa0The table is a collection of party RecIds and address book RecIds, which allows each party to host multiple address books in this M:M table.</p><p>The solution to populating and managing the table lies within itself, its static methods createPartyRelations() and createPartyRelationsByName() (however the latter works by calling the former).</p><p>To see it in action, let\'s investigate Microsoft\'s own code in the RetailTransactionServiceCustomer class:</p><p>1)Build a container object with the address book RecIds that you want</p><p>2)Call the createPartyRelations method with that container and the RecId of the party you are adding them to. \xa0</p><figure class="kg-card kg-image-card"><img alt="" class="kg-image" loading="lazy" src="https://www.d365stuff.co/content/images/2018/11/image-1.png"/></figure><p>The best part about using this method is that it will check if the address book is already associated with the party to help you avoid unique index violations. \xa0And is there really anything better than avoiding unique index violations? \xa0They suck.</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/d365-address-books/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5be3c98a709da400bf5401eb"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg">\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</img></section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:07,146 - INFO - Processing: https://www.d365stuff.co/one/
2025-05-26 11:39:07,146 - INFO - HTML file already exists for https://www.d365stuff.co/one/, reading from disk
2025-05-26 11:39:07,149 - INFO - Content unchanged for posts/one.md, skipping save
2025-05-26 11:39:07,179 - ERROR - Error saving MarkItDown markdown: [Errno 2] No such file or directory: '<article class="post-full post tag-d365 tag-ax tag-axapta tag-dynamics tag-x no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-11-07">7 November 2018</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">One</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Welcome to the greatest collection of AX and D365 stuff ever. \xa0The focus will be on making things you have to do all the time that shouldn\'t be hard, but are hard, not so hard. \xa0It could be made even easier, but then you\'ll never learn. \xa0It\'s impossible to learn if it doesn\'t hurt at least a little, so all code snippets will be images that you have to type again by hand. \xa0Don\'t type them too fast; explore the objects as they open up.</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/one/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5be3c7e6709da400bf5401d5"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg"/>\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 157, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 81, in convert_to_markdown_markitdown
    return md.convert(html_content)
           ~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 260, in convert
    return self.convert_local(source, stream_info=stream_info, **kwargs)
           ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 310, in convert_local
    with open(path, "rb") as fh:
         ~~~~^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '<article class="post-full post tag-d365 tag-ax tag-axapta tag-dynamics tag-x no-image no-image">\n<header class="post-full-header">\n<section class="post-full-meta">\n<time class="post-full-meta-date" datetime="2018-11-07">7 November 2018</time>\n<span class="date-divider">/</span> <a href="/tag/d365/">D365</a>\n</section>\n<h1 class="post-full-title">One</h1>\n</header>\n<section class="post-full-content">\n<div class="post-content">\n<p>Welcome to the greatest collection of AX and D365 stuff ever. \xa0The focus will be on making things you have to do all the time that shouldn\'t be hard, but are hard, not so hard. \xa0It could be made even easier, but then you\'ll never learn. \xa0It\'s impossible to learn if it doesn\'t hurt at least a little, so all code snippets will be images that you have to type again by hand. \xa0Don\'t type them too fast; explore the objects as they open up.</p>\n</div>\n</section>\n<section class="post-full-comments">\n<div id="disqus_thread"></div>\n<script>\n\t\t\t\tvar disqus_config = function () {\n\t\t\t\t\tthis.page.url = "https://www.d365stuff.co/one/";  \n\t\t\t\t\tthis.page.identifier = "ghost-5be3c7e6709da400bf5401d5"\n\t\t\t\t};\n\t\t\t\t(function() {\n\t\t\t\tvar d = document, s = d.createElement(\'script\');\n\t\t\t\ts.src = \'https://d365stuff.disqus.com/embed.js\';\n\t\t\t\ts.setAttribute(\'data-timestamp\', +new Date());\n\t\t\t\t(d.head || d.body).appendChild(s);\n\t\t\t\t})();\n\t\t\t\t</script>\n</section>\n<footer class="post-full-footer">\n<section class="author-card">\n<img alt="Michael Stashwick" class="author-profile-image" src="/content/images/size/w100/2019/07/FacePic.jpg"/>\n<section class="author-card-content">\n<h4 class="author-card-name"><a href="/author/michael/">Michael Stashwick</a></h4>\n<p>Read <a href="/author/michael/">more posts</a> by this author.</p>\n</section>\n</section>\n<div class="post-full-footer-right">\n<a class="author-card-button" href="/author/michael/">Read More</a>\n</div>\n</footer>\n</article>'
2025-05-26 11:39:07,180 - INFO - Download process completed!
2025-05-26 11:41:19,189 - INFO - Starting download process...
2025-05-26 11:41:19,189 - INFO - Processing sitemap: https://www.d365stuff.co/sitemap-posts.xml
2025-05-26 11:41:19,222 - INFO - Processing: https://www.d365stuff.co/d365-custom-web-service-with-pagination/
2025-05-26 11:41:19,222 - INFO - HTML file already exists for https://www.d365stuff.co/d365-custom-web-service-with-pagination/, reading from disk
2025-05-26 11:41:19,227 - INFO - Content unchanged for posts/d365-custom-web-service-with-pagination.md, skipping save
2025-05-26 11:41:19,292 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:19,293 - INFO - Processing: https://www.d365stuff.co/copy-write-d365-document-management-handling-file-to-wherever-via-logic-apps/
2025-05-26 11:41:19,293 - INFO - HTML file already exists for https://www.d365stuff.co/copy-write-d365-document-management-handling-file-to-wherever-via-logic-apps/, reading from disk
2025-05-26 11:41:19,297 - INFO - Content unchanged for posts/copy-write-d365-document-management-handling-file-.md, skipping save
2025-05-26 11:41:19,336 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:19,337 - INFO - Processing: https://www.d365stuff.co/reading-parsing-text-files-from-document-handling/
2025-05-26 11:41:19,337 - INFO - HTML file already exists for https://www.d365stuff.co/reading-parsing-text-files-from-document-handling/, reading from disk
2025-05-26 11:41:19,341 - INFO - Content unchanged for posts/reading-parsing-text-files-from-document-handling.md, skipping save
2025-05-26 11:41:19,380 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:19,380 - INFO - Processing: https://www.d365stuff.co/reverse-record-set-lookup-attribute-match/
2025-05-26 11:41:19,380 - INFO - HTML file already exists for https://www.d365stuff.co/reverse-record-set-lookup-attribute-match/, reading from disk
2025-05-26 11:41:19,385 - INFO - Content unchanged for posts/reverse-record-set-lookup-attribute-match.md, skipping save
2025-05-26 11:41:19,419 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:19,420 - INFO - Processing: https://www.d365stuff.co/x-aadauthentication-to-get-tenant-id/
2025-05-26 11:41:19,420 - INFO - HTML file already exists for https://www.d365stuff.co/x-aadauthentication-to-get-tenant-id/, reading from disk
2025-05-26 11:41:19,424 - INFO - Content unchanged for posts/x-aadauthentication-to-get-tenant-id.md, skipping save
2025-05-26 11:41:19,461 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:19,462 - INFO - Processing: https://www.d365stuff.co/dynamicscon-march-2021-companion-logic-apps-d365/
2025-05-26 11:41:19,462 - INFO - HTML file already exists for https://www.d365stuff.co/dynamicscon-march-2021-companion-logic-apps-d365/, reading from disk
2025-05-26 11:41:19,471 - INFO - Content unchanged for posts/dynamicscon-march-2021-companion-logic-apps-d365.md, skipping save
2025-05-26 11:41:19,508 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:19,508 - INFO - Processing: https://www.d365stuff.co/does-not-implement-the-delegate-convertpurchtablefieldtovendinvoicedelegate/
2025-05-26 11:41:19,509 - INFO - HTML file already exists for https://www.d365stuff.co/does-not-implement-the-delegate-convertpurchtablefieldtovendinvoicedelegate/, reading from disk
2025-05-26 11:41:19,513 - INFO - Content unchanged for posts/does-not-implement-the-delegate-convertpurchtablef.md, skipping save
2025-05-26 11:41:19,544 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:19,545 - INFO - Processing: https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/
2025-05-26 11:41:19,545 - INFO - HTML file already exists for https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/, reading from disk
2025-05-26 11:41:19,551 - INFO - Content unchanged for posts/get-and-post-stuff-via-logic-apps.md, skipping save
2025-05-26 11:41:19,584 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:19,585 - INFO - Processing: https://www.d365stuff.co/run-multiple-instances-of-teams/
2025-05-26 11:41:19,585 - INFO - HTML file already exists for https://www.d365stuff.co/run-multiple-instances-of-teams/, reading from disk
2025-05-26 11:41:19,594 - INFO - Content unchanged for posts/run-multiple-instances-of-teams.md, skipping save
2025-05-26 11:41:19,629 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:19,630 - INFO - Processing: https://www.d365stuff.co/d365-enum-values-sql/
2025-05-26 11:41:19,630 - INFO - HTML file already exists for https://www.d365stuff.co/d365-enum-values-sql/, reading from disk
2025-05-26 11:41:19,635 - INFO - Content unchanged for posts/d365-enum-values-sql.md, skipping save
2025-05-26 11:41:19,668 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:19,669 - INFO - Processing: https://www.d365stuff.co/introtodomrules/
2025-05-26 11:41:19,669 - INFO - HTML file already exists for https://www.d365stuff.co/introtodomrules/, reading from disk
2025-05-26 11:41:19,675 - INFO - Content unchanged for posts/introtodomrules.md, skipping save
2025-05-26 11:41:19,709 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:19,710 - INFO - Processing: https://www.d365stuff.co/order-lines-cannot-be-deleted-while-dependent-stores/
2025-05-26 11:41:19,710 - INFO - HTML file already exists for https://www.d365stuff.co/order-lines-cannot-be-deleted-while-dependent-stores/, reading from disk
2025-05-26 11:41:19,713 - INFO - Content unchanged for posts/order-lines-cannot-be-deleted-while-dependent-stor.md, skipping save
2025-05-26 11:41:19,749 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:19,750 - INFO - Processing: https://www.d365stuff.co/trace-batch-jobs-and-more-via-cmd-logman/
2025-05-26 11:41:19,750 - INFO - HTML file already exists for https://www.d365stuff.co/trace-batch-jobs-and-more-via-cmd-logman/, reading from disk
2025-05-26 11:41:19,754 - INFO - Content unchanged for posts/trace-batch-jobs-and-more-via-cmd-logman.md, skipping save
2025-05-26 11:41:19,785 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:19,785 - INFO - Processing: https://www.d365stuff.co/systemdatetime/
2025-05-26 11:41:19,785 - INFO - HTML file already exists for https://www.d365stuff.co/systemdatetime/, reading from disk
2025-05-26 11:41:19,789 - INFO - Content unchanged for posts/systemdatetime.md, skipping save
2025-05-26 11:41:19,822 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:19,822 - INFO - Processing: https://www.d365stuff.co/call-center-payments-part-2-credit-cards/
2025-05-26 11:41:19,822 - INFO - HTML file already exists for https://www.d365stuff.co/call-center-payments-part-2-credit-cards/, reading from disk
2025-05-26 11:41:19,827 - INFO - Content unchanged for posts/call-center-payments-part-2-credit-cards.md, skipping save
2025-05-26 11:41:19,859 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:19,859 - INFO - Processing: https://www.d365stuff.co/create-call-center-payment-cash/
2025-05-26 11:41:19,859 - INFO - HTML file already exists for https://www.d365stuff.co/create-call-center-payment-cash/, reading from disk
2025-05-26 11:41:19,864 - INFO - Content unchanged for posts/create-call-center-payment-cash.md, skipping save
2025-05-26 11:41:19,895 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:19,895 - INFO - Processing: https://www.d365stuff.co/overridegiftcardbalance/
2025-05-26 11:41:19,895 - INFO - HTML file already exists for https://www.d365stuff.co/overridegiftcardbalance/, reading from disk
2025-05-26 11:41:19,899 - INFO - Content unchanged for posts/overridegiftcardbalance.md, skipping save
2025-05-26 11:41:19,932 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:19,933 - INFO - Processing: https://www.d365stuff.co/retailattributehelper/
2025-05-26 11:41:19,933 - INFO - HTML file already exists for https://www.d365stuff.co/retailattributehelper/, reading from disk
2025-05-26 11:41:19,937 - INFO - Content unchanged for posts/retailattributehelper.md, skipping save
2025-05-26 11:41:19,971 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:19,971 - INFO - Processing: https://www.d365stuff.co/call-x-web-service-with-browser-snippet/
2025-05-26 11:41:19,971 - INFO - HTML file already exists for https://www.d365stuff.co/call-x-web-service-with-browser-snippet/, reading from disk
2025-05-26 11:41:19,976 - INFO - Content unchanged for posts/call-x-web-service-with-browser-snippet.md, skipping save
2025-05-26 11:41:20,006 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,007 - INFO - Processing: https://www.d365stuff.co/the-sales-order-cannot-be-deleted-because-related-not-posted-transactions-exist/
2025-05-26 11:41:20,007 - INFO - HTML file already exists for https://www.d365stuff.co/the-sales-order-cannot-be-deleted-because-related-not-posted-transactions-exist/, reading from disk
2025-05-26 11:41:20,011 - INFO - Content unchanged for posts/the-sales-order-cannot-be-deleted-because-related-.md, skipping save
2025-05-26 11:41:20,047 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,047 - INFO - Processing: https://www.d365stuff.co/json-odata/
2025-05-26 11:41:20,047 - INFO - HTML file already exists for https://www.d365stuff.co/json-odata/, reading from disk
2025-05-26 11:41:20,052 - INFO - Content unchanged for posts/json-odata.md, skipping save
2025-05-26 11:41:20,083 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,084 - INFO - Processing: https://www.d365stuff.co/send-noninteractive-e-mail-x-d365/
2025-05-26 11:41:20,084 - INFO - HTML file already exists for https://www.d365stuff.co/send-noninteractive-e-mail-x-d365/, reading from disk
2025-05-26 11:41:20,088 - INFO - Content unchanged for posts/send-noninteractive-e-mail-x-d365.md, skipping save
2025-05-26 11:41:20,122 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,122 - INFO - Processing: https://www.d365stuff.co/mailbox-does-not-exist/
2025-05-26 11:41:20,122 - INFO - HTML file already exists for https://www.d365stuff.co/mailbox-does-not-exist/, reading from disk
2025-05-26 11:41:20,126 - INFO - Content unchanged for posts/mailbox-does-not-exist.md, skipping save
2025-05-26 11:41:20,154 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,155 - INFO - Processing: https://www.d365stuff.co/entity-cannot-be-deleted-while-dependent-entities-for-a-processing-group-exist-delete-dependent-entities-for-a-processing-group-and-try-again/
2025-05-26 11:41:20,155 - INFO - HTML file already exists for https://www.d365stuff.co/entity-cannot-be-deleted-while-dependent-entities-for-a-processing-group-exist-delete-dependent-entities-for-a-processing-group-and-try-again/, reading from disk
2025-05-26 11:41:20,159 - INFO - Content unchanged for posts/entity-cannot-be-deleted-while-dependent-entities-.md, skipping save
2025-05-26 11:41:20,190 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,191 - INFO - Processing: https://www.d365stuff.co/drop-table-d365-x-sp_removetable/
2025-05-26 11:41:20,191 - INFO - HTML file already exists for https://www.d365stuff.co/drop-table-d365-x-sp_removetable/, reading from disk
2025-05-26 11:41:20,195 - INFO - Content unchanged for posts/drop-table-d365-x-sp_removetable.md, skipping save
2025-05-26 11:41:20,229 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,229 - INFO - Processing: https://www.d365stuff.co/import-export-migrate-receipt-formats/
2025-05-26 11:41:20,229 - INFO - HTML file already exists for https://www.d365stuff.co/import-export-migrate-receipt-formats/, reading from disk
2025-05-26 11:41:20,233 - INFO - Content unchanged for posts/import-export-migrate-receipt-formats.md, skipping save
2025-05-26 11:41:20,263 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,263 - INFO - Processing: https://www.d365stuff.co/ledgerdimensionfacade/
2025-05-26 11:41:20,263 - INFO - HTML file already exists for https://www.d365stuff.co/ledgerdimensionfacade/, reading from disk
2025-05-26 11:41:20,268 - INFO - Content unchanged for posts/ledgerdimensionfacade.md, skipping save
2025-05-26 11:41:20,299 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,299 - INFO - Processing: https://www.d365stuff.co/customdataentityopeninexcel/
2025-05-26 11:41:20,299 - INFO - HTML file already exists for https://www.d365stuff.co/customdataentityopeninexcel/, reading from disk
2025-05-26 11:41:20,303 - INFO - Content unchanged for posts/customdataentityopeninexcel.md, skipping save
2025-05-26 11:41:20,335 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,335 - INFO - Processing: https://www.d365stuff.co/best-stuff/
2025-05-26 11:41:20,335 - INFO - HTML file already exists for https://www.d365stuff.co/best-stuff/, reading from disk
2025-05-26 11:41:20,340 - INFO - Content unchanged for posts/best-stuff.md, skipping save
2025-05-26 11:41:20,371 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,372 - INFO - Processing: https://www.d365stuff.co/dmfutil-dmfdownloaddatapackage/
2025-05-26 11:41:20,372 - INFO - HTML file already exists for https://www.d365stuff.co/dmfutil-dmfdownloaddatapackage/, reading from disk
2025-05-26 11:41:20,376 - INFO - Content unchanged for posts/dmfutil-dmfdownloaddatapackage.md, skipping save
2025-05-26 11:41:20,407 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,408 - INFO - Processing: https://www.d365stuff.co/x-in-clause/
2025-05-26 11:41:20,408 - INFO - HTML file already exists for https://www.d365stuff.co/x-in-clause/, reading from disk
2025-05-26 11:41:20,412 - INFO - Content unchanged for posts/x-in-clause.md, skipping save
2025-05-26 11:41:20,447 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,448 - INFO - Processing: https://www.d365stuff.co/dmf-jumpref/
2025-05-26 11:41:20,448 - INFO - HTML file already exists for https://www.d365stuff.co/dmf-jumpref/, reading from disk
2025-05-26 11:41:20,452 - INFO - Content unchanged for posts/dmf-jumpref.md, skipping save
2025-05-26 11:41:20,491 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,491 - INFO - Processing: https://www.d365stuff.co/update-defaultdimension/
2025-05-26 11:41:20,491 - INFO - HTML file already exists for https://www.d365stuff.co/update-defaultdimension/, reading from disk
2025-05-26 11:41:20,495 - INFO - Content unchanged for posts/update-defaultdimension.md, skipping save
2025-05-26 11:41:20,528 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,528 - INFO - Processing: https://www.d365stuff.co/update_recordset-but-cross-company/
2025-05-26 11:41:20,529 - INFO - HTML file already exists for https://www.d365stuff.co/update_recordset-but-cross-company/, reading from disk
2025-05-26 11:41:20,533 - INFO - Content unchanged for posts/update_recordset-but-cross-company.md, skipping save
2025-05-26 11:41:20,565 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,565 - INFO - Processing: https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/
2025-05-26 11:41:20,566 - INFO - HTML file already exists for https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/, reading from disk
2025-05-26 11:41:20,570 - INFO - Content unchanged for posts/dmfdatapopulation-download-recurring-files.md, skipping save
2025-05-26 11:41:20,601 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,602 - INFO - Processing: https://www.d365stuff.co/formjsonserializer/
2025-05-26 11:41:20,602 - INFO - HTML file already exists for https://www.d365stuff.co/formjsonserializer/, reading from disk
2025-05-26 11:41:20,606 - INFO - Content unchanged for posts/formjsonserializer.md, skipping save
2025-05-26 11:41:20,636 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,637 - INFO - Processing: https://www.d365stuff.co/d365-address-books/
2025-05-26 11:41:20,637 - INFO - HTML file already exists for https://www.d365stuff.co/d365-address-books/, reading from disk
2025-05-26 11:41:20,641 - INFO - Content unchanged for posts/d365-address-books.md, skipping save
2025-05-26 11:41:20,672 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,672 - INFO - Processing: https://www.d365stuff.co/one/
2025-05-26 11:41:20,672 - INFO - HTML file already exists for https://www.d365stuff.co/one/, reading from disk
2025-05-26 11:41:20,676 - INFO - Content unchanged for posts/one.md, skipping save
2025-05-26 11:41:20,707 - ERROR - Error saving MarkItDown markdown: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 160, in process_sitemap
    markdown_content_markitdown = convert_to_markdown_markitdown(main_content)
  File "/home/mafzaal/source/d365stuff/main.py", line 84, in convert_to_markdown_markitdown
    return md.convert(html_content_io)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/.venv/lib/python3.13/site-packages/markitdown/_markitdown.py", line 275, in convert
    raise TypeError(
        f"Invalid source type: {type(source)}. Expected str, requests.Response, BinaryIO."
    )
TypeError: Invalid source type: <class '_io.StringIO'>. Expected str, requests.Response, BinaryIO.
2025-05-26 11:41:20,708 - INFO - Download process completed!
2025-05-26 11:43:02,266 - INFO - Starting download process...
2025-05-26 11:43:02,267 - INFO - Processing sitemap: https://www.d365stuff.co/sitemap-posts.xml
2025-05-26 11:43:02,293 - INFO - Processing: https://www.d365stuff.co/d365-custom-web-service-with-pagination/
2025-05-26 11:43:02,293 - INFO - HTML file already exists for https://www.d365stuff.co/d365-custom-web-service-with-pagination/, reading from disk
2025-05-26 11:43:02,297 - INFO - Content unchanged for posts/d365-custom-web-service-with-pagination.md, skipping save
2025-05-26 11:43:02,358 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:02,359 - INFO - Processing: https://www.d365stuff.co/copy-write-d365-document-management-handling-file-to-wherever-via-logic-apps/
2025-05-26 11:43:02,359 - INFO - HTML file already exists for https://www.d365stuff.co/copy-write-d365-document-management-handling-file-to-wherever-via-logic-apps/, reading from disk
2025-05-26 11:43:02,363 - INFO - Content unchanged for posts/copy-write-d365-document-management-handling-file-.md, skipping save
2025-05-26 11:43:02,409 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:02,409 - INFO - Processing: https://www.d365stuff.co/reading-parsing-text-files-from-document-handling/
2025-05-26 11:43:02,409 - INFO - HTML file already exists for https://www.d365stuff.co/reading-parsing-text-files-from-document-handling/, reading from disk
2025-05-26 11:43:02,413 - INFO - Content unchanged for posts/reading-parsing-text-files-from-document-handling.md, skipping save
2025-05-26 11:43:02,466 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:02,466 - INFO - Processing: https://www.d365stuff.co/reverse-record-set-lookup-attribute-match/
2025-05-26 11:43:02,466 - INFO - HTML file already exists for https://www.d365stuff.co/reverse-record-set-lookup-attribute-match/, reading from disk
2025-05-26 11:43:02,471 - INFO - Content unchanged for posts/reverse-record-set-lookup-attribute-match.md, skipping save
2025-05-26 11:43:02,515 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:02,515 - INFO - Processing: https://www.d365stuff.co/x-aadauthentication-to-get-tenant-id/
2025-05-26 11:43:02,515 - INFO - HTML file already exists for https://www.d365stuff.co/x-aadauthentication-to-get-tenant-id/, reading from disk
2025-05-26 11:43:02,519 - INFO - Content unchanged for posts/x-aadauthentication-to-get-tenant-id.md, skipping save
2025-05-26 11:43:02,567 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:02,567 - INFO - Processing: https://www.d365stuff.co/dynamicscon-march-2021-companion-logic-apps-d365/
2025-05-26 11:43:02,568 - INFO - HTML file already exists for https://www.d365stuff.co/dynamicscon-march-2021-companion-logic-apps-d365/, reading from disk
2025-05-26 11:43:02,576 - INFO - Content unchanged for posts/dynamicscon-march-2021-companion-logic-apps-d365.md, skipping save
2025-05-26 11:43:02,621 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:02,621 - INFO - Processing: https://www.d365stuff.co/does-not-implement-the-delegate-convertpurchtablefieldtovendinvoicedelegate/
2025-05-26 11:43:02,621 - INFO - HTML file already exists for https://www.d365stuff.co/does-not-implement-the-delegate-convertpurchtablefieldtovendinvoicedelegate/, reading from disk
2025-05-26 11:43:02,625 - INFO - Content unchanged for posts/does-not-implement-the-delegate-convertpurchtablef.md, skipping save
2025-05-26 11:43:02,669 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:02,670 - INFO - Processing: https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/
2025-05-26 11:43:02,670 - INFO - HTML file already exists for https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/, reading from disk
2025-05-26 11:43:02,681 - INFO - Content unchanged for posts/get-and-post-stuff-via-logic-apps.md, skipping save
2025-05-26 11:43:02,728 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:02,728 - INFO - Processing: https://www.d365stuff.co/run-multiple-instances-of-teams/
2025-05-26 11:43:02,728 - INFO - HTML file already exists for https://www.d365stuff.co/run-multiple-instances-of-teams/, reading from disk
2025-05-26 11:43:02,732 - INFO - Content unchanged for posts/run-multiple-instances-of-teams.md, skipping save
2025-05-26 11:43:02,779 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:02,779 - INFO - Processing: https://www.d365stuff.co/d365-enum-values-sql/
2025-05-26 11:43:02,779 - INFO - HTML file already exists for https://www.d365stuff.co/d365-enum-values-sql/, reading from disk
2025-05-26 11:43:02,784 - INFO - Content unchanged for posts/d365-enum-values-sql.md, skipping save
2025-05-26 11:43:02,825 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:02,826 - INFO - Processing: https://www.d365stuff.co/introtodomrules/
2025-05-26 11:43:02,826 - INFO - HTML file already exists for https://www.d365stuff.co/introtodomrules/, reading from disk
2025-05-26 11:43:02,834 - INFO - Content unchanged for posts/introtodomrules.md, skipping save
2025-05-26 11:43:02,878 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:02,879 - INFO - Processing: https://www.d365stuff.co/order-lines-cannot-be-deleted-while-dependent-stores/
2025-05-26 11:43:02,879 - INFO - HTML file already exists for https://www.d365stuff.co/order-lines-cannot-be-deleted-while-dependent-stores/, reading from disk
2025-05-26 11:43:02,885 - INFO - Content unchanged for posts/order-lines-cannot-be-deleted-while-dependent-stor.md, skipping save
2025-05-26 11:43:02,926 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:02,926 - INFO - Processing: https://www.d365stuff.co/trace-batch-jobs-and-more-via-cmd-logman/
2025-05-26 11:43:02,926 - INFO - HTML file already exists for https://www.d365stuff.co/trace-batch-jobs-and-more-via-cmd-logman/, reading from disk
2025-05-26 11:43:02,931 - INFO - Content unchanged for posts/trace-batch-jobs-and-more-via-cmd-logman.md, skipping save
2025-05-26 11:43:02,978 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:02,978 - INFO - Processing: https://www.d365stuff.co/systemdatetime/
2025-05-26 11:43:02,978 - INFO - HTML file already exists for https://www.d365stuff.co/systemdatetime/, reading from disk
2025-05-26 11:43:02,983 - INFO - Content unchanged for posts/systemdatetime.md, skipping save
2025-05-26 11:43:03,029 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:03,029 - INFO - Processing: https://www.d365stuff.co/call-center-payments-part-2-credit-cards/
2025-05-26 11:43:03,029 - INFO - HTML file already exists for https://www.d365stuff.co/call-center-payments-part-2-credit-cards/, reading from disk
2025-05-26 11:43:03,034 - INFO - Content unchanged for posts/call-center-payments-part-2-credit-cards.md, skipping save
2025-05-26 11:43:03,085 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:03,085 - INFO - Processing: https://www.d365stuff.co/create-call-center-payment-cash/
2025-05-26 11:43:03,085 - INFO - HTML file already exists for https://www.d365stuff.co/create-call-center-payment-cash/, reading from disk
2025-05-26 11:43:03,090 - INFO - Content unchanged for posts/create-call-center-payment-cash.md, skipping save
2025-05-26 11:43:03,144 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:03,144 - INFO - Processing: https://www.d365stuff.co/overridegiftcardbalance/
2025-05-26 11:43:03,145 - INFO - HTML file already exists for https://www.d365stuff.co/overridegiftcardbalance/, reading from disk
2025-05-26 11:43:03,149 - INFO - Content unchanged for posts/overridegiftcardbalance.md, skipping save
2025-05-26 11:43:03,193 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:03,194 - INFO - Processing: https://www.d365stuff.co/retailattributehelper/
2025-05-26 11:43:03,194 - INFO - HTML file already exists for https://www.d365stuff.co/retailattributehelper/, reading from disk
2025-05-26 11:43:03,198 - INFO - Content unchanged for posts/retailattributehelper.md, skipping save
2025-05-26 11:43:03,243 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:03,244 - INFO - Processing: https://www.d365stuff.co/call-x-web-service-with-browser-snippet/
2025-05-26 11:43:03,244 - INFO - HTML file already exists for https://www.d365stuff.co/call-x-web-service-with-browser-snippet/, reading from disk
2025-05-26 11:43:03,248 - INFO - Content unchanged for posts/call-x-web-service-with-browser-snippet.md, skipping save
2025-05-26 11:43:03,298 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:03,298 - INFO - Processing: https://www.d365stuff.co/the-sales-order-cannot-be-deleted-because-related-not-posted-transactions-exist/
2025-05-26 11:43:03,298 - INFO - HTML file already exists for https://www.d365stuff.co/the-sales-order-cannot-be-deleted-because-related-not-posted-transactions-exist/, reading from disk
2025-05-26 11:43:03,302 - INFO - Content unchanged for posts/the-sales-order-cannot-be-deleted-because-related-.md, skipping save
2025-05-26 11:43:03,347 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:03,347 - INFO - Processing: https://www.d365stuff.co/json-odata/
2025-05-26 11:43:03,347 - INFO - HTML file already exists for https://www.d365stuff.co/json-odata/, reading from disk
2025-05-26 11:43:03,353 - INFO - Content unchanged for posts/json-odata.md, skipping save
2025-05-26 11:43:03,399 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:03,400 - INFO - Processing: https://www.d365stuff.co/send-noninteractive-e-mail-x-d365/
2025-05-26 11:43:03,400 - INFO - HTML file already exists for https://www.d365stuff.co/send-noninteractive-e-mail-x-d365/, reading from disk
2025-05-26 11:43:03,403 - INFO - Content unchanged for posts/send-noninteractive-e-mail-x-d365.md, skipping save
2025-05-26 11:43:03,446 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:03,446 - INFO - Processing: https://www.d365stuff.co/mailbox-does-not-exist/
2025-05-26 11:43:03,446 - INFO - HTML file already exists for https://www.d365stuff.co/mailbox-does-not-exist/, reading from disk
2025-05-26 11:43:03,450 - INFO - Content unchanged for posts/mailbox-does-not-exist.md, skipping save
2025-05-26 11:43:03,495 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:03,495 - INFO - Processing: https://www.d365stuff.co/entity-cannot-be-deleted-while-dependent-entities-for-a-processing-group-exist-delete-dependent-entities-for-a-processing-group-and-try-again/
2025-05-26 11:43:03,495 - INFO - HTML file already exists for https://www.d365stuff.co/entity-cannot-be-deleted-while-dependent-entities-for-a-processing-group-exist-delete-dependent-entities-for-a-processing-group-and-try-again/, reading from disk
2025-05-26 11:43:03,499 - INFO - Content unchanged for posts/entity-cannot-be-deleted-while-dependent-entities-.md, skipping save
2025-05-26 11:43:03,545 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:03,545 - INFO - Processing: https://www.d365stuff.co/drop-table-d365-x-sp_removetable/
2025-05-26 11:43:03,545 - INFO - HTML file already exists for https://www.d365stuff.co/drop-table-d365-x-sp_removetable/, reading from disk
2025-05-26 11:43:03,549 - INFO - Content unchanged for posts/drop-table-d365-x-sp_removetable.md, skipping save
2025-05-26 11:43:03,596 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:03,596 - INFO - Processing: https://www.d365stuff.co/import-export-migrate-receipt-formats/
2025-05-26 11:43:03,596 - INFO - HTML file already exists for https://www.d365stuff.co/import-export-migrate-receipt-formats/, reading from disk
2025-05-26 11:43:03,601 - INFO - Content unchanged for posts/import-export-migrate-receipt-formats.md, skipping save
2025-05-26 11:43:03,646 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:03,647 - INFO - Processing: https://www.d365stuff.co/ledgerdimensionfacade/
2025-05-26 11:43:03,647 - INFO - HTML file already exists for https://www.d365stuff.co/ledgerdimensionfacade/, reading from disk
2025-05-26 11:43:03,651 - INFO - Content unchanged for posts/ledgerdimensionfacade.md, skipping save
2025-05-26 11:43:03,697 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:03,698 - INFO - Processing: https://www.d365stuff.co/customdataentityopeninexcel/
2025-05-26 11:43:03,698 - INFO - HTML file already exists for https://www.d365stuff.co/customdataentityopeninexcel/, reading from disk
2025-05-26 11:43:03,701 - INFO - Content unchanged for posts/customdataentityopeninexcel.md, skipping save
2025-05-26 11:43:03,746 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:03,746 - INFO - Processing: https://www.d365stuff.co/best-stuff/
2025-05-26 11:43:03,747 - INFO - HTML file already exists for https://www.d365stuff.co/best-stuff/, reading from disk
2025-05-26 11:43:03,751 - INFO - Content unchanged for posts/best-stuff.md, skipping save
2025-05-26 11:43:03,805 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:03,806 - INFO - Processing: https://www.d365stuff.co/dmfutil-dmfdownloaddatapackage/
2025-05-26 11:43:03,806 - INFO - HTML file already exists for https://www.d365stuff.co/dmfutil-dmfdownloaddatapackage/, reading from disk
2025-05-26 11:43:03,809 - INFO - Content unchanged for posts/dmfutil-dmfdownloaddatapackage.md, skipping save
2025-05-26 11:43:03,859 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:03,859 - INFO - Processing: https://www.d365stuff.co/x-in-clause/
2025-05-26 11:43:03,859 - INFO - HTML file already exists for https://www.d365stuff.co/x-in-clause/, reading from disk
2025-05-26 11:43:03,863 - INFO - Content unchanged for posts/x-in-clause.md, skipping save
2025-05-26 11:43:03,903 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:03,903 - INFO - Processing: https://www.d365stuff.co/dmf-jumpref/
2025-05-26 11:43:03,903 - INFO - HTML file already exists for https://www.d365stuff.co/dmf-jumpref/, reading from disk
2025-05-26 11:43:03,908 - INFO - Content unchanged for posts/dmf-jumpref.md, skipping save
2025-05-26 11:43:03,952 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:03,952 - INFO - Processing: https://www.d365stuff.co/update-defaultdimension/
2025-05-26 11:43:03,952 - INFO - HTML file already exists for https://www.d365stuff.co/update-defaultdimension/, reading from disk
2025-05-26 11:43:03,957 - INFO - Content unchanged for posts/update-defaultdimension.md, skipping save
2025-05-26 11:43:03,999 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:04,000 - INFO - Processing: https://www.d365stuff.co/update_recordset-but-cross-company/
2025-05-26 11:43:04,000 - INFO - HTML file already exists for https://www.d365stuff.co/update_recordset-but-cross-company/, reading from disk
2025-05-26 11:43:04,007 - INFO - Content unchanged for posts/update_recordset-but-cross-company.md, skipping save
2025-05-26 11:43:04,051 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:04,051 - INFO - Processing: https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/
2025-05-26 11:43:04,051 - INFO - HTML file already exists for https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/, reading from disk
2025-05-26 11:43:04,055 - INFO - Content unchanged for posts/dmfdatapopulation-download-recurring-files.md, skipping save
2025-05-26 11:43:04,103 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:04,104 - INFO - Processing: https://www.d365stuff.co/formjsonserializer/
2025-05-26 11:43:04,104 - INFO - HTML file already exists for https://www.d365stuff.co/formjsonserializer/, reading from disk
2025-05-26 11:43:04,107 - INFO - Content unchanged for posts/formjsonserializer.md, skipping save
2025-05-26 11:43:04,148 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:04,149 - INFO - Processing: https://www.d365stuff.co/d365-address-books/
2025-05-26 11:43:04,149 - INFO - HTML file already exists for https://www.d365stuff.co/d365-address-books/, reading from disk
2025-05-26 11:43:04,153 - INFO - Content unchanged for posts/d365-address-books.md, skipping save
2025-05-26 11:43:04,200 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:04,201 - INFO - Processing: https://www.d365stuff.co/one/
2025-05-26 11:43:04,201 - INFO - HTML file already exists for https://www.d365stuff.co/one/, reading from disk
2025-05-26 11:43:04,205 - INFO - Content unchanged for posts/one.md, skipping save
2025-05-26 11:43:04,246 - ERROR - Error saving MarkItDown markdown: write() argument must be str, not DocumentConverterResult
Traceback (most recent call last):
  File "/home/mafzaal/source/d365stuff/main.py", line 161, in process_sitemap
    save_markdown(markdown_content_markitdown, 'posts_markitdown', filename)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/mafzaal/source/d365stuff/main.py", line 116, in save_markdown
    f.write(content)
    ~~~~~~~^^^^^^^^^
TypeError: write() argument must be str, not DocumentConverterResult
2025-05-26 11:43:04,247 - INFO - Download process completed!
2025-05-26 11:43:55,710 - INFO - Starting download process...
2025-05-26 11:43:55,710 - INFO - Processing sitemap: https://www.d365stuff.co/sitemap-posts.xml
2025-05-26 11:43:55,742 - INFO - Processing: https://www.d365stuff.co/d365-custom-web-service-with-pagination/
2025-05-26 11:43:55,743 - INFO - HTML file already exists for https://www.d365stuff.co/d365-custom-web-service-with-pagination/, reading from disk
2025-05-26 11:43:55,747 - INFO - Content unchanged for posts/d365-custom-web-service-with-pagination.md, skipping save
2025-05-26 11:43:55,805 - INFO - Saved to: posts_markitdown/d365-custom-web-service-with-pagination.md
2025-05-26 11:43:55,805 - INFO - Processing: https://www.d365stuff.co/copy-write-d365-document-management-handling-file-to-wherever-via-logic-apps/
2025-05-26 11:43:55,805 - INFO - HTML file already exists for https://www.d365stuff.co/copy-write-d365-document-management-handling-file-to-wherever-via-logic-apps/, reading from disk
2025-05-26 11:43:55,810 - INFO - Content unchanged for posts/copy-write-d365-document-management-handling-file-.md, skipping save
2025-05-26 11:43:55,854 - INFO - Saved to: posts_markitdown/copy-write-d365-document-management-handling-file-.md
2025-05-26 11:43:55,854 - INFO - Processing: https://www.d365stuff.co/reading-parsing-text-files-from-document-handling/
2025-05-26 11:43:55,854 - INFO - HTML file already exists for https://www.d365stuff.co/reading-parsing-text-files-from-document-handling/, reading from disk
2025-05-26 11:43:55,858 - INFO - Content unchanged for posts/reading-parsing-text-files-from-document-handling.md, skipping save
2025-05-26 11:43:55,900 - INFO - Saved to: posts_markitdown/reading-parsing-text-files-from-document-handling.md
2025-05-26 11:43:55,900 - INFO - Processing: https://www.d365stuff.co/reverse-record-set-lookup-attribute-match/
2025-05-26 11:43:55,900 - INFO - HTML file already exists for https://www.d365stuff.co/reverse-record-set-lookup-attribute-match/, reading from disk
2025-05-26 11:43:55,904 - INFO - Content unchanged for posts/reverse-record-set-lookup-attribute-match.md, skipping save
2025-05-26 11:43:55,947 - INFO - Saved to: posts_markitdown/reverse-record-set-lookup-attribute-match.md
2025-05-26 11:43:55,947 - INFO - Processing: https://www.d365stuff.co/x-aadauthentication-to-get-tenant-id/
2025-05-26 11:43:55,947 - INFO - HTML file already exists for https://www.d365stuff.co/x-aadauthentication-to-get-tenant-id/, reading from disk
2025-05-26 11:43:55,954 - INFO - Content unchanged for posts/x-aadauthentication-to-get-tenant-id.md, skipping save
2025-05-26 11:43:55,994 - INFO - Saved to: posts_markitdown/x-aadauthentication-to-get-tenant-id.md
2025-05-26 11:43:55,994 - INFO - Processing: https://www.d365stuff.co/dynamicscon-march-2021-companion-logic-apps-d365/
2025-05-26 11:43:55,994 - INFO - HTML file already exists for https://www.d365stuff.co/dynamicscon-march-2021-companion-logic-apps-d365/, reading from disk
2025-05-26 11:43:56,003 - INFO - Content unchanged for posts/dynamicscon-march-2021-companion-logic-apps-d365.md, skipping save
2025-05-26 11:43:56,050 - INFO - Saved to: posts_markitdown/dynamicscon-march-2021-companion-logic-apps-d365.md
2025-05-26 11:43:56,050 - INFO - Processing: https://www.d365stuff.co/does-not-implement-the-delegate-convertpurchtablefieldtovendinvoicedelegate/
2025-05-26 11:43:56,050 - INFO - HTML file already exists for https://www.d365stuff.co/does-not-implement-the-delegate-convertpurchtablefieldtovendinvoicedelegate/, reading from disk
2025-05-26 11:43:56,054 - INFO - Content unchanged for posts/does-not-implement-the-delegate-convertpurchtablef.md, skipping save
2025-05-26 11:43:56,102 - INFO - Saved to: posts_markitdown/does-not-implement-the-delegate-convertpurchtablef.md
2025-05-26 11:43:56,102 - INFO - Processing: https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/
2025-05-26 11:43:56,102 - INFO - HTML file already exists for https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/, reading from disk
2025-05-26 11:43:56,114 - INFO - Content unchanged for posts/get-and-post-stuff-via-logic-apps.md, skipping save
2025-05-26 11:43:56,158 - INFO - Saved to: posts_markitdown/get-and-post-stuff-via-logic-apps.md
2025-05-26 11:43:56,158 - INFO - Processing: https://www.d365stuff.co/run-multiple-instances-of-teams/
2025-05-26 11:43:56,158 - INFO - HTML file already exists for https://www.d365stuff.co/run-multiple-instances-of-teams/, reading from disk
2025-05-26 11:43:56,162 - INFO - Content unchanged for posts/run-multiple-instances-of-teams.md, skipping save
2025-05-26 11:43:56,205 - INFO - Saved to: posts_markitdown/run-multiple-instances-of-teams.md
2025-05-26 11:43:56,205 - INFO - Processing: https://www.d365stuff.co/d365-enum-values-sql/
2025-05-26 11:43:56,206 - INFO - HTML file already exists for https://www.d365stuff.co/d365-enum-values-sql/, reading from disk
2025-05-26 11:43:56,210 - INFO - Content unchanged for posts/d365-enum-values-sql.md, skipping save
2025-05-26 11:43:56,248 - INFO - Saved to: posts_markitdown/d365-enum-values-sql.md
2025-05-26 11:43:56,249 - INFO - Processing: https://www.d365stuff.co/introtodomrules/
2025-05-26 11:43:56,249 - INFO - HTML file already exists for https://www.d365stuff.co/introtodomrules/, reading from disk
2025-05-26 11:43:56,254 - INFO - Content unchanged for posts/introtodomrules.md, skipping save
2025-05-26 11:43:56,290 - INFO - Saved to: posts_markitdown/introtodomrules.md
2025-05-26 11:43:56,291 - INFO - Processing: https://www.d365stuff.co/order-lines-cannot-be-deleted-while-dependent-stores/
2025-05-26 11:43:56,291 - INFO - HTML file already exists for https://www.d365stuff.co/order-lines-cannot-be-deleted-while-dependent-stores/, reading from disk
2025-05-26 11:43:56,296 - INFO - Content unchanged for posts/order-lines-cannot-be-deleted-while-dependent-stor.md, skipping save
2025-05-26 11:43:56,334 - INFO - Saved to: posts_markitdown/order-lines-cannot-be-deleted-while-dependent-stor.md
2025-05-26 11:43:56,334 - INFO - Processing: https://www.d365stuff.co/trace-batch-jobs-and-more-via-cmd-logman/
2025-05-26 11:43:56,334 - INFO - HTML file already exists for https://www.d365stuff.co/trace-batch-jobs-and-more-via-cmd-logman/, reading from disk
2025-05-26 11:43:56,339 - INFO - Content unchanged for posts/trace-batch-jobs-and-more-via-cmd-logman.md, skipping save
2025-05-26 11:43:56,380 - INFO - Saved to: posts_markitdown/trace-batch-jobs-and-more-via-cmd-logman.md
2025-05-26 11:43:56,380 - INFO - Processing: https://www.d365stuff.co/systemdatetime/
2025-05-26 11:43:56,380 - INFO - HTML file already exists for https://www.d365stuff.co/systemdatetime/, reading from disk
2025-05-26 11:43:56,386 - INFO - Content unchanged for posts/systemdatetime.md, skipping save
2025-05-26 11:43:56,429 - INFO - Saved to: posts_markitdown/systemdatetime.md
2025-05-26 11:43:56,429 - INFO - Processing: https://www.d365stuff.co/call-center-payments-part-2-credit-cards/
2025-05-26 11:43:56,429 - INFO - HTML file already exists for https://www.d365stuff.co/call-center-payments-part-2-credit-cards/, reading from disk
2025-05-26 11:43:56,434 - INFO - Content unchanged for posts/call-center-payments-part-2-credit-cards.md, skipping save
2025-05-26 11:43:56,490 - INFO - Saved to: posts_markitdown/call-center-payments-part-2-credit-cards.md
2025-05-26 11:43:56,490 - INFO - Processing: https://www.d365stuff.co/create-call-center-payment-cash/
2025-05-26 11:43:56,490 - INFO - HTML file already exists for https://www.d365stuff.co/create-call-center-payment-cash/, reading from disk
2025-05-26 11:43:56,495 - INFO - Content unchanged for posts/create-call-center-payment-cash.md, skipping save
2025-05-26 11:43:56,543 - INFO - Saved to: posts_markitdown/create-call-center-payment-cash.md
2025-05-26 11:43:56,543 - INFO - Processing: https://www.d365stuff.co/overridegiftcardbalance/
2025-05-26 11:43:56,543 - INFO - HTML file already exists for https://www.d365stuff.co/overridegiftcardbalance/, reading from disk
2025-05-26 11:43:56,547 - INFO - Content unchanged for posts/overridegiftcardbalance.md, skipping save
2025-05-26 11:43:56,587 - INFO - Saved to: posts_markitdown/overridegiftcardbalance.md
2025-05-26 11:43:56,587 - INFO - Processing: https://www.d365stuff.co/retailattributehelper/
2025-05-26 11:43:56,587 - INFO - HTML file already exists for https://www.d365stuff.co/retailattributehelper/, reading from disk
2025-05-26 11:43:56,591 - INFO - Content unchanged for posts/retailattributehelper.md, skipping save
2025-05-26 11:43:56,635 - INFO - Saved to: posts_markitdown/retailattributehelper.md
2025-05-26 11:43:56,635 - INFO - Processing: https://www.d365stuff.co/call-x-web-service-with-browser-snippet/
2025-05-26 11:43:56,635 - INFO - HTML file already exists for https://www.d365stuff.co/call-x-web-service-with-browser-snippet/, reading from disk
2025-05-26 11:43:56,639 - INFO - Content unchanged for posts/call-x-web-service-with-browser-snippet.md, skipping save
2025-05-26 11:43:56,685 - INFO - Saved to: posts_markitdown/call-x-web-service-with-browser-snippet.md
2025-05-26 11:43:56,685 - INFO - Processing: https://www.d365stuff.co/the-sales-order-cannot-be-deleted-because-related-not-posted-transactions-exist/
2025-05-26 11:43:56,685 - INFO - HTML file already exists for https://www.d365stuff.co/the-sales-order-cannot-be-deleted-because-related-not-posted-transactions-exist/, reading from disk
2025-05-26 11:43:56,689 - INFO - Content unchanged for posts/the-sales-order-cannot-be-deleted-because-related-.md, skipping save
2025-05-26 11:43:56,735 - INFO - Saved to: posts_markitdown/the-sales-order-cannot-be-deleted-because-related-.md
2025-05-26 11:43:56,735 - INFO - Processing: https://www.d365stuff.co/json-odata/
2025-05-26 11:43:56,735 - INFO - HTML file already exists for https://www.d365stuff.co/json-odata/, reading from disk
2025-05-26 11:43:56,740 - INFO - Content unchanged for posts/json-odata.md, skipping save
2025-05-26 11:43:56,790 - INFO - Saved to: posts_markitdown/json-odata.md
2025-05-26 11:43:56,791 - INFO - Processing: https://www.d365stuff.co/send-noninteractive-e-mail-x-d365/
2025-05-26 11:43:56,791 - INFO - HTML file already exists for https://www.d365stuff.co/send-noninteractive-e-mail-x-d365/, reading from disk
2025-05-26 11:43:56,794 - INFO - Content unchanged for posts/send-noninteractive-e-mail-x-d365.md, skipping save
2025-05-26 11:43:56,835 - INFO - Saved to: posts_markitdown/send-noninteractive-e-mail-x-d365.md
2025-05-26 11:43:56,835 - INFO - Processing: https://www.d365stuff.co/mailbox-does-not-exist/
2025-05-26 11:43:56,835 - INFO - HTML file already exists for https://www.d365stuff.co/mailbox-does-not-exist/, reading from disk
2025-05-26 11:43:56,842 - INFO - Content unchanged for posts/mailbox-does-not-exist.md, skipping save
2025-05-26 11:43:56,891 - INFO - Saved to: posts_markitdown/mailbox-does-not-exist.md
2025-05-26 11:43:56,892 - INFO - Processing: https://www.d365stuff.co/entity-cannot-be-deleted-while-dependent-entities-for-a-processing-group-exist-delete-dependent-entities-for-a-processing-group-and-try-again/
2025-05-26 11:43:56,892 - INFO - HTML file already exists for https://www.d365stuff.co/entity-cannot-be-deleted-while-dependent-entities-for-a-processing-group-exist-delete-dependent-entities-for-a-processing-group-and-try-again/, reading from disk
2025-05-26 11:43:56,896 - INFO - Content unchanged for posts/entity-cannot-be-deleted-while-dependent-entities-.md, skipping save
2025-05-26 11:43:56,945 - INFO - Saved to: posts_markitdown/entity-cannot-be-deleted-while-dependent-entities-.md
2025-05-26 11:43:56,945 - INFO - Processing: https://www.d365stuff.co/drop-table-d365-x-sp_removetable/
2025-05-26 11:43:56,945 - INFO - HTML file already exists for https://www.d365stuff.co/drop-table-d365-x-sp_removetable/, reading from disk
2025-05-26 11:43:56,949 - INFO - Content unchanged for posts/drop-table-d365-x-sp_removetable.md, skipping save
2025-05-26 11:43:56,997 - INFO - Saved to: posts_markitdown/drop-table-d365-x-sp_removetable.md
2025-05-26 11:43:56,997 - INFO - Processing: https://www.d365stuff.co/import-export-migrate-receipt-formats/
2025-05-26 11:43:56,997 - INFO - HTML file already exists for https://www.d365stuff.co/import-export-migrate-receipt-formats/, reading from disk
2025-05-26 11:43:57,001 - INFO - Content unchanged for posts/import-export-migrate-receipt-formats.md, skipping save
2025-05-26 11:43:57,044 - INFO - Saved to: posts_markitdown/import-export-migrate-receipt-formats.md
2025-05-26 11:43:57,044 - INFO - Processing: https://www.d365stuff.co/ledgerdimensionfacade/
2025-05-26 11:43:57,044 - INFO - HTML file already exists for https://www.d365stuff.co/ledgerdimensionfacade/, reading from disk
2025-05-26 11:43:57,048 - INFO - Content unchanged for posts/ledgerdimensionfacade.md, skipping save
2025-05-26 11:43:57,092 - INFO - Saved to: posts_markitdown/ledgerdimensionfacade.md
2025-05-26 11:43:57,092 - INFO - Processing: https://www.d365stuff.co/customdataentityopeninexcel/
2025-05-26 11:43:57,092 - INFO - HTML file already exists for https://www.d365stuff.co/customdataentityopeninexcel/, reading from disk
2025-05-26 11:43:57,096 - INFO - Content unchanged for posts/customdataentityopeninexcel.md, skipping save
2025-05-26 11:43:57,140 - INFO - Saved to: posts_markitdown/customdataentityopeninexcel.md
2025-05-26 11:43:57,141 - INFO - Processing: https://www.d365stuff.co/best-stuff/
2025-05-26 11:43:57,141 - INFO - HTML file already exists for https://www.d365stuff.co/best-stuff/, reading from disk
2025-05-26 11:43:57,147 - INFO - Content unchanged for posts/best-stuff.md, skipping save
2025-05-26 11:43:57,201 - INFO - Saved to: posts_markitdown/best-stuff.md
2025-05-26 11:43:57,201 - INFO - Processing: https://www.d365stuff.co/dmfutil-dmfdownloaddatapackage/
2025-05-26 11:43:57,201 - INFO - HTML file already exists for https://www.d365stuff.co/dmfutil-dmfdownloaddatapackage/, reading from disk
2025-05-26 11:43:57,205 - INFO - Content unchanged for posts/dmfutil-dmfdownloaddatapackage.md, skipping save
2025-05-26 11:43:57,249 - INFO - Saved to: posts_markitdown/dmfutil-dmfdownloaddatapackage.md
2025-05-26 11:43:57,249 - INFO - Processing: https://www.d365stuff.co/x-in-clause/
2025-05-26 11:43:57,249 - INFO - HTML file already exists for https://www.d365stuff.co/x-in-clause/, reading from disk
2025-05-26 11:43:57,253 - INFO - Content unchanged for posts/x-in-clause.md, skipping save
2025-05-26 11:43:57,292 - INFO - Saved to: posts_markitdown/x-in-clause.md
2025-05-26 11:43:57,292 - INFO - Processing: https://www.d365stuff.co/dmf-jumpref/
2025-05-26 11:43:57,292 - INFO - HTML file already exists for https://www.d365stuff.co/dmf-jumpref/, reading from disk
2025-05-26 11:43:57,297 - INFO - Content unchanged for posts/dmf-jumpref.md, skipping save
2025-05-26 11:43:57,339 - INFO - Saved to: posts_markitdown/dmf-jumpref.md
2025-05-26 11:43:57,339 - INFO - Processing: https://www.d365stuff.co/update-defaultdimension/
2025-05-26 11:43:57,339 - INFO - HTML file already exists for https://www.d365stuff.co/update-defaultdimension/, reading from disk
2025-05-26 11:43:57,344 - INFO - Content unchanged for posts/update-defaultdimension.md, skipping save
2025-05-26 11:43:57,379 - INFO - Saved to: posts_markitdown/update-defaultdimension.md
2025-05-26 11:43:57,379 - INFO - Processing: https://www.d365stuff.co/update_recordset-but-cross-company/
2025-05-26 11:43:57,379 - INFO - HTML file already exists for https://www.d365stuff.co/update_recordset-but-cross-company/, reading from disk
2025-05-26 11:43:57,383 - INFO - Content unchanged for posts/update_recordset-but-cross-company.md, skipping save
2025-05-26 11:43:57,428 - INFO - Saved to: posts_markitdown/update_recordset-but-cross-company.md
2025-05-26 11:43:57,428 - INFO - Processing: https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/
2025-05-26 11:43:57,428 - INFO - HTML file already exists for https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/, reading from disk
2025-05-26 11:43:57,431 - INFO - Content unchanged for posts/dmfdatapopulation-download-recurring-files.md, skipping save
2025-05-26 11:43:57,476 - INFO - Saved to: posts_markitdown/dmfdatapopulation-download-recurring-files.md
2025-05-26 11:43:57,476 - INFO - Processing: https://www.d365stuff.co/formjsonserializer/
2025-05-26 11:43:57,476 - INFO - HTML file already exists for https://www.d365stuff.co/formjsonserializer/, reading from disk
2025-05-26 11:43:57,480 - INFO - Content unchanged for posts/formjsonserializer.md, skipping save
2025-05-26 11:43:57,524 - INFO - Saved to: posts_markitdown/formjsonserializer.md
2025-05-26 11:43:57,524 - INFO - Processing: https://www.d365stuff.co/d365-address-books/
2025-05-26 11:43:57,524 - INFO - HTML file already exists for https://www.d365stuff.co/d365-address-books/, reading from disk
2025-05-26 11:43:57,528 - INFO - Content unchanged for posts/d365-address-books.md, skipping save
2025-05-26 11:43:57,573 - INFO - Saved to: posts_markitdown/d365-address-books.md
2025-05-26 11:43:57,573 - INFO - Processing: https://www.d365stuff.co/one/
2025-05-26 11:43:57,573 - INFO - HTML file already exists for https://www.d365stuff.co/one/, reading from disk
2025-05-26 11:43:57,577 - INFO - Content unchanged for posts/one.md, skipping save
2025-05-26 11:43:57,617 - INFO - Saved to: posts_markitdown/one.md
2025-05-26 11:43:57,617 - INFO - Download process completed!
2025-05-26 11:44:48,303 - INFO - Starting download process...
2025-05-26 11:44:48,304 - INFO - Processing sitemap: https://www.d365stuff.co/sitemap-posts.xml
2025-05-26 11:44:48,343 - INFO - Created directory: posts
2025-05-26 11:44:48,343 - INFO - Processing: https://www.d365stuff.co/d365-custom-web-service-with-pagination/
2025-05-26 11:44:48,344 - INFO - HTML file already exists for https://www.d365stuff.co/d365-custom-web-service-with-pagination/, reading from disk
2025-05-26 11:44:48,348 - INFO - Saved to: posts/d365-custom-web-service-with-pagination.md
2025-05-26 11:44:48,405 - INFO - Content unchanged for posts_markitdown/d365-custom-web-service-with-pagination.md, skipping save
2025-05-26 11:44:48,405 - INFO - Processing: https://www.d365stuff.co/copy-write-d365-document-management-handling-file-to-wherever-via-logic-apps/
2025-05-26 11:44:48,405 - INFO - HTML file already exists for https://www.d365stuff.co/copy-write-d365-document-management-handling-file-to-wherever-via-logic-apps/, reading from disk
2025-05-26 11:44:48,411 - INFO - Saved to: posts/copy-write-d365-document-management-handling-file-.md
2025-05-26 11:44:48,457 - INFO - Content unchanged for posts_markitdown/copy-write-d365-document-management-handling-file-.md, skipping save
2025-05-26 11:44:48,457 - INFO - Processing: https://www.d365stuff.co/reading-parsing-text-files-from-document-handling/
2025-05-26 11:44:48,457 - INFO - HTML file already exists for https://www.d365stuff.co/reading-parsing-text-files-from-document-handling/, reading from disk
2025-05-26 11:44:48,461 - INFO - Saved to: posts/reading-parsing-text-files-from-document-handling.md
2025-05-26 11:44:48,515 - INFO - Content unchanged for posts_markitdown/reading-parsing-text-files-from-document-handling.md, skipping save
2025-05-26 11:44:48,515 - INFO - Processing: https://www.d365stuff.co/reverse-record-set-lookup-attribute-match/
2025-05-26 11:44:48,515 - INFO - HTML file already exists for https://www.d365stuff.co/reverse-record-set-lookup-attribute-match/, reading from disk
2025-05-26 11:44:48,520 - INFO - Saved to: posts/reverse-record-set-lookup-attribute-match.md
2025-05-26 11:44:48,570 - INFO - Content unchanged for posts_markitdown/reverse-record-set-lookup-attribute-match.md, skipping save
2025-05-26 11:44:48,570 - INFO - Processing: https://www.d365stuff.co/x-aadauthentication-to-get-tenant-id/
2025-05-26 11:44:48,570 - INFO - HTML file already exists for https://www.d365stuff.co/x-aadauthentication-to-get-tenant-id/, reading from disk
2025-05-26 11:44:48,574 - INFO - Saved to: posts/x-aadauthentication-to-get-tenant-id.md
2025-05-26 11:44:48,619 - INFO - Content unchanged for posts_markitdown/x-aadauthentication-to-get-tenant-id.md, skipping save
2025-05-26 11:44:48,619 - INFO - Processing: https://www.d365stuff.co/dynamicscon-march-2021-companion-logic-apps-d365/
2025-05-26 11:44:48,620 - INFO - HTML file already exists for https://www.d365stuff.co/dynamicscon-march-2021-companion-logic-apps-d365/, reading from disk
2025-05-26 11:44:48,628 - INFO - Saved to: posts/dynamicscon-march-2021-companion-logic-apps-d365.md
2025-05-26 11:44:48,674 - INFO - Content unchanged for posts_markitdown/dynamicscon-march-2021-companion-logic-apps-d365.md, skipping save
2025-05-26 11:44:48,675 - INFO - Processing: https://www.d365stuff.co/does-not-implement-the-delegate-convertpurchtablefieldtovendinvoicedelegate/
2025-05-26 11:44:48,675 - INFO - HTML file already exists for https://www.d365stuff.co/does-not-implement-the-delegate-convertpurchtablefieldtovendinvoicedelegate/, reading from disk
2025-05-26 11:44:48,678 - INFO - Saved to: posts/does-not-implement-the-delegate-convertpurchtablef.md
2025-05-26 11:44:48,726 - INFO - Content unchanged for posts_markitdown/does-not-implement-the-delegate-convertpurchtablef.md, skipping save
2025-05-26 11:44:48,726 - INFO - Processing: https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/
2025-05-26 11:44:48,726 - INFO - HTML file already exists for https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/, reading from disk
2025-05-26 11:44:48,736 - INFO - Saved to: posts/get-and-post-stuff-via-logic-apps.md
2025-05-26 11:44:48,781 - INFO - Content unchanged for posts_markitdown/get-and-post-stuff-via-logic-apps.md, skipping save
2025-05-26 11:44:48,781 - INFO - Processing: https://www.d365stuff.co/run-multiple-instances-of-teams/
2025-05-26 11:44:48,781 - INFO - HTML file already exists for https://www.d365stuff.co/run-multiple-instances-of-teams/, reading from disk
2025-05-26 11:44:48,785 - INFO - Saved to: posts/run-multiple-instances-of-teams.md
2025-05-26 11:44:48,830 - INFO - Content unchanged for posts_markitdown/run-multiple-instances-of-teams.md, skipping save
2025-05-26 11:44:48,830 - INFO - Processing: https://www.d365stuff.co/d365-enum-values-sql/
2025-05-26 11:44:48,830 - INFO - HTML file already exists for https://www.d365stuff.co/d365-enum-values-sql/, reading from disk
2025-05-26 11:44:48,835 - INFO - Saved to: posts/d365-enum-values-sql.md
2025-05-26 11:44:48,872 - INFO - Content unchanged for posts_markitdown/d365-enum-values-sql.md, skipping save
2025-05-26 11:44:48,872 - INFO - Processing: https://www.d365stuff.co/introtodomrules/
2025-05-26 11:44:48,872 - INFO - HTML file already exists for https://www.d365stuff.co/introtodomrules/, reading from disk
2025-05-26 11:44:48,877 - INFO - Saved to: posts/introtodomrules.md
2025-05-26 11:44:48,921 - INFO - Content unchanged for posts_markitdown/introtodomrules.md, skipping save
2025-05-26 11:44:48,921 - INFO - Processing: https://www.d365stuff.co/order-lines-cannot-be-deleted-while-dependent-stores/
2025-05-26 11:44:48,921 - INFO - HTML file already exists for https://www.d365stuff.co/order-lines-cannot-be-deleted-while-dependent-stores/, reading from disk
2025-05-26 11:44:48,925 - INFO - Saved to: posts/order-lines-cannot-be-deleted-while-dependent-stor.md
2025-05-26 11:44:48,961 - INFO - Content unchanged for posts_markitdown/order-lines-cannot-be-deleted-while-dependent-stor.md, skipping save
2025-05-26 11:44:48,961 - INFO - Processing: https://www.d365stuff.co/trace-batch-jobs-and-more-via-cmd-logman/
2025-05-26 11:44:48,961 - INFO - HTML file already exists for https://www.d365stuff.co/trace-batch-jobs-and-more-via-cmd-logman/, reading from disk
2025-05-26 11:44:48,966 - INFO - Saved to: posts/trace-batch-jobs-and-more-via-cmd-logman.md
2025-05-26 11:44:49,003 - INFO - Content unchanged for posts_markitdown/trace-batch-jobs-and-more-via-cmd-logman.md, skipping save
2025-05-26 11:44:49,003 - INFO - Processing: https://www.d365stuff.co/systemdatetime/
2025-05-26 11:44:49,003 - INFO - HTML file already exists for https://www.d365stuff.co/systemdatetime/, reading from disk
2025-05-26 11:44:49,007 - INFO - Saved to: posts/systemdatetime.md
2025-05-26 11:44:49,047 - INFO - Content unchanged for posts_markitdown/systemdatetime.md, skipping save
2025-05-26 11:44:49,047 - INFO - Processing: https://www.d365stuff.co/call-center-payments-part-2-credit-cards/
2025-05-26 11:44:49,048 - INFO - HTML file already exists for https://www.d365stuff.co/call-center-payments-part-2-credit-cards/, reading from disk
2025-05-26 11:44:49,053 - INFO - Saved to: posts/call-center-payments-part-2-credit-cards.md
2025-05-26 11:44:49,109 - INFO - Content unchanged for posts_markitdown/call-center-payments-part-2-credit-cards.md, skipping save
2025-05-26 11:44:49,109 - INFO - Processing: https://www.d365stuff.co/create-call-center-payment-cash/
2025-05-26 11:44:49,109 - INFO - HTML file already exists for https://www.d365stuff.co/create-call-center-payment-cash/, reading from disk
2025-05-26 11:44:49,114 - INFO - Saved to: posts/create-call-center-payment-cash.md
2025-05-26 11:44:49,150 - INFO - Content unchanged for posts_markitdown/create-call-center-payment-cash.md, skipping save
2025-05-26 11:44:49,150 - INFO - Processing: https://www.d365stuff.co/overridegiftcardbalance/
2025-05-26 11:44:49,150 - INFO - HTML file already exists for https://www.d365stuff.co/overridegiftcardbalance/, reading from disk
2025-05-26 11:44:49,153 - INFO - Saved to: posts/overridegiftcardbalance.md
2025-05-26 11:44:49,189 - INFO - Content unchanged for posts_markitdown/overridegiftcardbalance.md, skipping save
2025-05-26 11:44:49,189 - INFO - Processing: https://www.d365stuff.co/retailattributehelper/
2025-05-26 11:44:49,189 - INFO - HTML file already exists for https://www.d365stuff.co/retailattributehelper/, reading from disk
2025-05-26 11:44:49,193 - INFO - Saved to: posts/retailattributehelper.md
2025-05-26 11:44:49,236 - INFO - Content unchanged for posts_markitdown/retailattributehelper.md, skipping save
2025-05-26 11:44:49,236 - INFO - Processing: https://www.d365stuff.co/call-x-web-service-with-browser-snippet/
2025-05-26 11:44:49,236 - INFO - HTML file already exists for https://www.d365stuff.co/call-x-web-service-with-browser-snippet/, reading from disk
2025-05-26 11:44:49,240 - INFO - Saved to: posts/call-x-web-service-with-browser-snippet.md
2025-05-26 11:44:49,288 - INFO - Content unchanged for posts_markitdown/call-x-web-service-with-browser-snippet.md, skipping save
2025-05-26 11:44:49,288 - INFO - Processing: https://www.d365stuff.co/the-sales-order-cannot-be-deleted-because-related-not-posted-transactions-exist/
2025-05-26 11:44:49,289 - INFO - HTML file already exists for https://www.d365stuff.co/the-sales-order-cannot-be-deleted-because-related-not-posted-transactions-exist/, reading from disk
2025-05-26 11:44:49,293 - INFO - Saved to: posts/the-sales-order-cannot-be-deleted-because-related-.md
2025-05-26 11:44:49,335 - INFO - Content unchanged for posts_markitdown/the-sales-order-cannot-be-deleted-because-related-.md, skipping save
2025-05-26 11:44:49,335 - INFO - Processing: https://www.d365stuff.co/json-odata/
2025-05-26 11:44:49,335 - INFO - HTML file already exists for https://www.d365stuff.co/json-odata/, reading from disk
2025-05-26 11:44:49,340 - INFO - Saved to: posts/json-odata.md
2025-05-26 11:44:49,393 - INFO - Content unchanged for posts_markitdown/json-odata.md, skipping save
2025-05-26 11:44:49,393 - INFO - Processing: https://www.d365stuff.co/send-noninteractive-e-mail-x-d365/
2025-05-26 11:44:49,393 - INFO - HTML file already exists for https://www.d365stuff.co/send-noninteractive-e-mail-x-d365/, reading from disk
2025-05-26 11:44:49,397 - INFO - Saved to: posts/send-noninteractive-e-mail-x-d365.md
2025-05-26 11:44:49,441 - INFO - Content unchanged for posts_markitdown/send-noninteractive-e-mail-x-d365.md, skipping save
2025-05-26 11:44:49,441 - INFO - Processing: https://www.d365stuff.co/mailbox-does-not-exist/
2025-05-26 11:44:49,442 - INFO - HTML file already exists for https://www.d365stuff.co/mailbox-does-not-exist/, reading from disk
2025-05-26 11:44:49,445 - INFO - Saved to: posts/mailbox-does-not-exist.md
2025-05-26 11:44:49,486 - INFO - Content unchanged for posts_markitdown/mailbox-does-not-exist.md, skipping save
2025-05-26 11:44:49,486 - INFO - Processing: https://www.d365stuff.co/entity-cannot-be-deleted-while-dependent-entities-for-a-processing-group-exist-delete-dependent-entities-for-a-processing-group-and-try-again/
2025-05-26 11:44:49,486 - INFO - HTML file already exists for https://www.d365stuff.co/entity-cannot-be-deleted-while-dependent-entities-for-a-processing-group-exist-delete-dependent-entities-for-a-processing-group-and-try-again/, reading from disk
2025-05-26 11:44:49,490 - INFO - Saved to: posts/entity-cannot-be-deleted-while-dependent-entities-.md
2025-05-26 11:44:49,545 - INFO - Content unchanged for posts_markitdown/entity-cannot-be-deleted-while-dependent-entities-.md, skipping save
2025-05-26 11:44:49,545 - INFO - Processing: https://www.d365stuff.co/drop-table-d365-x-sp_removetable/
2025-05-26 11:44:49,545 - INFO - HTML file already exists for https://www.d365stuff.co/drop-table-d365-x-sp_removetable/, reading from disk
2025-05-26 11:44:49,549 - INFO - Saved to: posts/drop-table-d365-x-sp_removetable.md
2025-05-26 11:44:49,593 - INFO - Content unchanged for posts_markitdown/drop-table-d365-x-sp_removetable.md, skipping save
2025-05-26 11:44:49,593 - INFO - Processing: https://www.d365stuff.co/import-export-migrate-receipt-formats/
2025-05-26 11:44:49,593 - INFO - HTML file already exists for https://www.d365stuff.co/import-export-migrate-receipt-formats/, reading from disk
2025-05-26 11:44:49,597 - INFO - Saved to: posts/import-export-migrate-receipt-formats.md
2025-05-26 11:44:49,643 - INFO - Content unchanged for posts_markitdown/import-export-migrate-receipt-formats.md, skipping save
2025-05-26 11:44:49,643 - INFO - Processing: https://www.d365stuff.co/ledgerdimensionfacade/
2025-05-26 11:44:49,643 - INFO - HTML file already exists for https://www.d365stuff.co/ledgerdimensionfacade/, reading from disk
2025-05-26 11:44:49,647 - INFO - Saved to: posts/ledgerdimensionfacade.md
2025-05-26 11:44:49,687 - INFO - Content unchanged for posts_markitdown/ledgerdimensionfacade.md, skipping save
2025-05-26 11:44:49,687 - INFO - Processing: https://www.d365stuff.co/customdataentityopeninexcel/
2025-05-26 11:44:49,687 - INFO - HTML file already exists for https://www.d365stuff.co/customdataentityopeninexcel/, reading from disk
2025-05-26 11:44:49,691 - INFO - Saved to: posts/customdataentityopeninexcel.md
2025-05-26 11:44:49,733 - INFO - Content unchanged for posts_markitdown/customdataentityopeninexcel.md, skipping save
2025-05-26 11:44:49,733 - INFO - Processing: https://www.d365stuff.co/best-stuff/
2025-05-26 11:44:49,733 - INFO - HTML file already exists for https://www.d365stuff.co/best-stuff/, reading from disk
2025-05-26 11:44:49,737 - INFO - Saved to: posts/best-stuff.md
2025-05-26 11:44:49,782 - INFO - Content unchanged for posts_markitdown/best-stuff.md, skipping save
2025-05-26 11:44:49,782 - INFO - Processing: https://www.d365stuff.co/dmfutil-dmfdownloaddatapackage/
2025-05-26 11:44:49,782 - INFO - HTML file already exists for https://www.d365stuff.co/dmfutil-dmfdownloaddatapackage/, reading from disk
2025-05-26 11:44:49,786 - INFO - Saved to: posts/dmfutil-dmfdownloaddatapackage.md
2025-05-26 11:44:49,833 - INFO - Content unchanged for posts_markitdown/dmfutil-dmfdownloaddatapackage.md, skipping save
2025-05-26 11:44:49,833 - INFO - Processing: https://www.d365stuff.co/x-in-clause/
2025-05-26 11:44:49,833 - INFO - HTML file already exists for https://www.d365stuff.co/x-in-clause/, reading from disk
2025-05-26 11:44:49,837 - INFO - Saved to: posts/x-in-clause.md
2025-05-26 11:44:49,881 - INFO - Content unchanged for posts_markitdown/x-in-clause.md, skipping save
2025-05-26 11:44:49,881 - INFO - Processing: https://www.d365stuff.co/dmf-jumpref/
2025-05-26 11:44:49,882 - INFO - HTML file already exists for https://www.d365stuff.co/dmf-jumpref/, reading from disk
2025-05-26 11:44:49,886 - INFO - Saved to: posts/dmf-jumpref.md
2025-05-26 11:44:49,928 - INFO - Content unchanged for posts_markitdown/dmf-jumpref.md, skipping save
2025-05-26 11:44:49,928 - INFO - Processing: https://www.d365stuff.co/update-defaultdimension/
2025-05-26 11:44:49,928 - INFO - HTML file already exists for https://www.d365stuff.co/update-defaultdimension/, reading from disk
2025-05-26 11:44:49,933 - INFO - Saved to: posts/update-defaultdimension.md
2025-05-26 11:44:49,970 - INFO - Content unchanged for posts_markitdown/update-defaultdimension.md, skipping save
2025-05-26 11:44:49,971 - INFO - Processing: https://www.d365stuff.co/update_recordset-but-cross-company/
2025-05-26 11:44:49,971 - INFO - HTML file already exists for https://www.d365stuff.co/update_recordset-but-cross-company/, reading from disk
2025-05-26 11:44:49,974 - INFO - Saved to: posts/update_recordset-but-cross-company.md
2025-05-26 11:44:50,016 - INFO - Content unchanged for posts_markitdown/update_recordset-but-cross-company.md, skipping save
2025-05-26 11:44:50,016 - INFO - Processing: https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/
2025-05-26 11:44:50,016 - INFO - HTML file already exists for https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/, reading from disk
2025-05-26 11:44:50,020 - INFO - Saved to: posts/dmfdatapopulation-download-recurring-files.md
2025-05-26 11:44:50,065 - INFO - Content unchanged for posts_markitdown/dmfdatapopulation-download-recurring-files.md, skipping save
2025-05-26 11:44:50,065 - INFO - Processing: https://www.d365stuff.co/formjsonserializer/
2025-05-26 11:44:50,065 - INFO - HTML file already exists for https://www.d365stuff.co/formjsonserializer/, reading from disk
2025-05-26 11:44:50,069 - INFO - Saved to: posts/formjsonserializer.md
2025-05-26 11:44:50,112 - INFO - Content unchanged for posts_markitdown/formjsonserializer.md, skipping save
2025-05-26 11:44:50,112 - INFO - Processing: https://www.d365stuff.co/d365-address-books/
2025-05-26 11:44:50,112 - INFO - HTML file already exists for https://www.d365stuff.co/d365-address-books/, reading from disk
2025-05-26 11:44:50,117 - INFO - Saved to: posts/d365-address-books.md
2025-05-26 11:44:50,163 - INFO - Content unchanged for posts_markitdown/d365-address-books.md, skipping save
2025-05-26 11:44:50,163 - INFO - Processing: https://www.d365stuff.co/one/
2025-05-26 11:44:50,163 - INFO - HTML file already exists for https://www.d365stuff.co/one/, reading from disk
2025-05-26 11:44:50,167 - INFO - Saved to: posts/one.md
2025-05-26 11:44:50,209 - INFO - Content unchanged for posts_markitdown/one.md, skipping save
2025-05-26 11:44:50,209 - INFO - Download process completed!
2025-05-26 11:53:17,047 - INFO - Starting download process...
2025-05-26 11:53:17,047 - INFO - Processing sitemap: https://www.d365stuff.co/sitemap-posts.xml
2025-05-26 11:53:17,078 - INFO - Created directory: posts
2025-05-26 11:53:17,079 - INFO - Created directory: posts_markitdown
2025-05-26 11:53:17,079 - INFO - Processing: https://www.d365stuff.co/d365-custom-web-service-with-pagination/
2025-05-26 11:53:17,079 - INFO - HTML file already exists for https://www.d365stuff.co/d365-custom-web-service-with-pagination/, reading from disk
2025-05-26 11:53:17,088 - INFO - Saved to: posts/d365-custom-web-service-with-pagination.md
2025-05-26 11:53:17,141 - INFO - Saved to: posts_markitdown/d365-custom-web-service-with-pagination.md
2025-05-26 11:53:17,141 - INFO - Processing: https://www.d365stuff.co/copy-write-d365-document-management-handling-file-to-wherever-via-logic-apps/
2025-05-26 11:53:17,141 - INFO - HTML file already exists for https://www.d365stuff.co/copy-write-d365-document-management-handling-file-to-wherever-via-logic-apps/, reading from disk
2025-05-26 11:53:17,148 - INFO - Saved to: posts/copy-write-d365-document-management-handling-file-.md
2025-05-26 11:53:17,198 - INFO - Saved to: posts_markitdown/copy-write-d365-document-management-handling-file-.md
2025-05-26 11:53:17,199 - INFO - Processing: https://www.d365stuff.co/reading-parsing-text-files-from-document-handling/
2025-05-26 11:53:17,199 - INFO - HTML file already exists for https://www.d365stuff.co/reading-parsing-text-files-from-document-handling/, reading from disk
2025-05-26 11:53:17,206 - INFO - Saved to: posts/reading-parsing-text-files-from-document-handling.md
2025-05-26 11:53:17,261 - INFO - Saved to: posts_markitdown/reading-parsing-text-files-from-document-handling.md
2025-05-26 11:53:17,262 - INFO - Processing: https://www.d365stuff.co/reverse-record-set-lookup-attribute-match/
2025-05-26 11:53:17,262 - INFO - HTML file already exists for https://www.d365stuff.co/reverse-record-set-lookup-attribute-match/, reading from disk
2025-05-26 11:53:17,269 - INFO - Saved to: posts/reverse-record-set-lookup-attribute-match.md
2025-05-26 11:53:17,317 - INFO - Saved to: posts_markitdown/reverse-record-set-lookup-attribute-match.md
2025-05-26 11:53:17,317 - INFO - Processing: https://www.d365stuff.co/x-aadauthentication-to-get-tenant-id/
2025-05-26 11:53:17,317 - INFO - HTML file already exists for https://www.d365stuff.co/x-aadauthentication-to-get-tenant-id/, reading from disk
2025-05-26 11:53:17,328 - INFO - Saved to: posts/x-aadauthentication-to-get-tenant-id.md
2025-05-26 11:53:17,366 - INFO - Saved to: posts_markitdown/x-aadauthentication-to-get-tenant-id.md
2025-05-26 11:53:17,366 - INFO - Processing: https://www.d365stuff.co/dynamicscon-march-2021-companion-logic-apps-d365/
2025-05-26 11:53:17,366 - INFO - HTML file already exists for https://www.d365stuff.co/dynamicscon-march-2021-companion-logic-apps-d365/, reading from disk
2025-05-26 11:53:17,379 - INFO - Saved to: posts/dynamicscon-march-2021-companion-logic-apps-d365.md
2025-05-26 11:53:17,422 - INFO - Saved to: posts_markitdown/dynamicscon-march-2021-companion-logic-apps-d365.md
2025-05-26 11:53:17,422 - INFO - Processing: https://www.d365stuff.co/does-not-implement-the-delegate-convertpurchtablefieldtovendinvoicedelegate/
2025-05-26 11:53:17,422 - INFO - HTML file already exists for https://www.d365stuff.co/does-not-implement-the-delegate-convertpurchtablefieldtovendinvoicedelegate/, reading from disk
2025-05-26 11:53:17,429 - INFO - Saved to: posts/does-not-implement-the-delegate-convertpurchtablef.md
2025-05-26 11:53:17,475 - INFO - Saved to: posts_markitdown/does-not-implement-the-delegate-convertpurchtablef.md
2025-05-26 11:53:17,475 - INFO - Processing: https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/
2025-05-26 11:53:17,475 - INFO - HTML file already exists for https://www.d365stuff.co/get-and-post-stuff-via-logic-apps/, reading from disk
2025-05-26 11:53:17,485 - INFO - Saved to: posts/get-and-post-stuff-via-logic-apps.md
2025-05-26 11:53:17,537 - INFO - Saved to: posts_markitdown/get-and-post-stuff-via-logic-apps.md
2025-05-26 11:53:17,537 - INFO - Processing: https://www.d365stuff.co/run-multiple-instances-of-teams/
2025-05-26 11:53:17,537 - INFO - HTML file already exists for https://www.d365stuff.co/run-multiple-instances-of-teams/, reading from disk
2025-05-26 11:53:17,548 - INFO - Saved to: posts/run-multiple-instances-of-teams.md
2025-05-26 11:53:17,593 - INFO - Saved to: posts_markitdown/run-multiple-instances-of-teams.md
2025-05-26 11:53:17,593 - INFO - Processing: https://www.d365stuff.co/d365-enum-values-sql/
2025-05-26 11:53:17,594 - INFO - HTML file already exists for https://www.d365stuff.co/d365-enum-values-sql/, reading from disk
2025-05-26 11:53:17,601 - INFO - Saved to: posts/d365-enum-values-sql.md
2025-05-26 11:53:17,642 - INFO - Saved to: posts_markitdown/d365-enum-values-sql.md
2025-05-26 11:53:17,642 - INFO - Processing: https://www.d365stuff.co/introtodomrules/
2025-05-26 11:53:17,642 - INFO - HTML file already exists for https://www.d365stuff.co/introtodomrules/, reading from disk
2025-05-26 11:53:17,656 - INFO - Saved to: posts/introtodomrules.md
2025-05-26 11:53:17,701 - INFO - Saved to: posts_markitdown/introtodomrules.md
2025-05-26 11:53:17,701 - INFO - Processing: https://www.d365stuff.co/order-lines-cannot-be-deleted-while-dependent-stores/
2025-05-26 11:53:17,701 - INFO - HTML file already exists for https://www.d365stuff.co/order-lines-cannot-be-deleted-while-dependent-stores/, reading from disk
2025-05-26 11:53:17,707 - INFO - Saved to: posts/order-lines-cannot-be-deleted-while-dependent-stor.md
2025-05-26 11:53:17,745 - INFO - Saved to: posts_markitdown/order-lines-cannot-be-deleted-while-dependent-stor.md
2025-05-26 11:53:17,745 - INFO - Processing: https://www.d365stuff.co/trace-batch-jobs-and-more-via-cmd-logman/
2025-05-26 11:53:17,745 - INFO - HTML file already exists for https://www.d365stuff.co/trace-batch-jobs-and-more-via-cmd-logman/, reading from disk
2025-05-26 11:53:17,752 - INFO - Saved to: posts/trace-batch-jobs-and-more-via-cmd-logman.md
2025-05-26 11:53:17,798 - INFO - Saved to: posts_markitdown/trace-batch-jobs-and-more-via-cmd-logman.md
2025-05-26 11:53:17,798 - INFO - Processing: https://www.d365stuff.co/systemdatetime/
2025-05-26 11:53:17,799 - INFO - HTML file already exists for https://www.d365stuff.co/systemdatetime/, reading from disk
2025-05-26 11:53:17,807 - INFO - Saved to: posts/systemdatetime.md
2025-05-26 11:53:17,853 - INFO - Saved to: posts_markitdown/systemdatetime.md
2025-05-26 11:53:17,853 - INFO - Processing: https://www.d365stuff.co/call-center-payments-part-2-credit-cards/
2025-05-26 11:53:17,853 - INFO - HTML file already exists for https://www.d365stuff.co/call-center-payments-part-2-credit-cards/, reading from disk
2025-05-26 11:53:17,861 - INFO - Saved to: posts/call-center-payments-part-2-credit-cards.md
2025-05-26 11:53:17,907 - INFO - Saved to: posts_markitdown/call-center-payments-part-2-credit-cards.md
2025-05-26 11:53:17,907 - INFO - Processing: https://www.d365stuff.co/create-call-center-payment-cash/
2025-05-26 11:53:17,907 - INFO - HTML file already exists for https://www.d365stuff.co/create-call-center-payment-cash/, reading from disk
2025-05-26 11:53:17,914 - INFO - Saved to: posts/create-call-center-payment-cash.md
2025-05-26 11:53:17,960 - INFO - Saved to: posts_markitdown/create-call-center-payment-cash.md
2025-05-26 11:53:17,961 - INFO - Processing: https://www.d365stuff.co/overridegiftcardbalance/
2025-05-26 11:53:17,961 - INFO - HTML file already exists for https://www.d365stuff.co/overridegiftcardbalance/, reading from disk
2025-05-26 11:53:17,971 - INFO - Saved to: posts/overridegiftcardbalance.md
2025-05-26 11:53:18,009 - INFO - Saved to: posts_markitdown/overridegiftcardbalance.md
2025-05-26 11:53:18,009 - INFO - Processing: https://www.d365stuff.co/retailattributehelper/
2025-05-26 11:53:18,009 - INFO - HTML file already exists for https://www.d365stuff.co/retailattributehelper/, reading from disk
2025-05-26 11:53:18,016 - INFO - Saved to: posts/retailattributehelper.md
2025-05-26 11:53:18,068 - INFO - Saved to: posts_markitdown/retailattributehelper.md
2025-05-26 11:53:18,068 - INFO - Processing: https://www.d365stuff.co/call-x-web-service-with-browser-snippet/
2025-05-26 11:53:18,068 - INFO - HTML file already exists for https://www.d365stuff.co/call-x-web-service-with-browser-snippet/, reading from disk
2025-05-26 11:53:18,076 - INFO - Saved to: posts/call-x-web-service-with-browser-snippet.md
2025-05-26 11:53:18,121 - INFO - Saved to: posts_markitdown/call-x-web-service-with-browser-snippet.md
2025-05-26 11:53:18,121 - INFO - Processing: https://www.d365stuff.co/the-sales-order-cannot-be-deleted-because-related-not-posted-transactions-exist/
2025-05-26 11:53:18,121 - INFO - HTML file already exists for https://www.d365stuff.co/the-sales-order-cannot-be-deleted-because-related-not-posted-transactions-exist/, reading from disk
2025-05-26 11:53:18,129 - INFO - Saved to: posts/the-sales-order-cannot-be-deleted-because-related-.md
2025-05-26 11:53:18,172 - INFO - Saved to: posts_markitdown/the-sales-order-cannot-be-deleted-because-related-.md
2025-05-26 11:53:18,172 - INFO - Processing: https://www.d365stuff.co/json-odata/
2025-05-26 11:53:18,172 - INFO - HTML file already exists for https://www.d365stuff.co/json-odata/, reading from disk
2025-05-26 11:53:18,180 - INFO - Saved to: posts/json-odata.md
2025-05-26 11:53:18,225 - INFO - Saved to: posts_markitdown/json-odata.md
2025-05-26 11:53:18,225 - INFO - Processing: https://www.d365stuff.co/send-noninteractive-e-mail-x-d365/
2025-05-26 11:53:18,225 - INFO - HTML file already exists for https://www.d365stuff.co/send-noninteractive-e-mail-x-d365/, reading from disk
2025-05-26 11:53:18,232 - INFO - Saved to: posts/send-noninteractive-e-mail-x-d365.md
2025-05-26 11:53:18,269 - INFO - Saved to: posts_markitdown/send-noninteractive-e-mail-x-d365.md
2025-05-26 11:53:18,269 - INFO - Processing: https://www.d365stuff.co/mailbox-does-not-exist/
2025-05-26 11:53:18,269 - INFO - HTML file already exists for https://www.d365stuff.co/mailbox-does-not-exist/, reading from disk
2025-05-26 11:53:18,279 - INFO - Saved to: posts/mailbox-does-not-exist.md
2025-05-26 11:53:18,316 - INFO - Saved to: posts_markitdown/mailbox-does-not-exist.md
2025-05-26 11:53:18,316 - INFO - Processing: https://www.d365stuff.co/entity-cannot-be-deleted-while-dependent-entities-for-a-processing-group-exist-delete-dependent-entities-for-a-processing-group-and-try-again/
2025-05-26 11:53:18,316 - INFO - HTML file already exists for https://www.d365stuff.co/entity-cannot-be-deleted-while-dependent-entities-for-a-processing-group-exist-delete-dependent-entities-for-a-processing-group-and-try-again/, reading from disk
2025-05-26 11:53:18,323 - INFO - Saved to: posts/entity-cannot-be-deleted-while-dependent-entities-.md
2025-05-26 11:53:18,361 - INFO - Saved to: posts_markitdown/entity-cannot-be-deleted-while-dependent-entities-.md
2025-05-26 11:53:18,361 - INFO - Processing: https://www.d365stuff.co/drop-table-d365-x-sp_removetable/
2025-05-26 11:53:18,361 - INFO - HTML file already exists for https://www.d365stuff.co/drop-table-d365-x-sp_removetable/, reading from disk
2025-05-26 11:53:18,368 - INFO - Saved to: posts/drop-table-d365-x-sp_removetable.md
2025-05-26 11:53:18,409 - INFO - Saved to: posts_markitdown/drop-table-d365-x-sp_removetable.md
2025-05-26 11:53:18,409 - INFO - Processing: https://www.d365stuff.co/import-export-migrate-receipt-formats/
2025-05-26 11:53:18,410 - INFO - HTML file already exists for https://www.d365stuff.co/import-export-migrate-receipt-formats/, reading from disk
2025-05-26 11:53:18,419 - INFO - Saved to: posts/import-export-migrate-receipt-formats.md
2025-05-26 11:53:18,463 - INFO - Saved to: posts_markitdown/import-export-migrate-receipt-formats.md
2025-05-26 11:53:18,463 - INFO - Processing: https://www.d365stuff.co/ledgerdimensionfacade/
2025-05-26 11:53:18,463 - INFO - HTML file already exists for https://www.d365stuff.co/ledgerdimensionfacade/, reading from disk
2025-05-26 11:53:18,469 - INFO - Saved to: posts/ledgerdimensionfacade.md
2025-05-26 11:53:18,511 - INFO - Saved to: posts_markitdown/ledgerdimensionfacade.md
2025-05-26 11:53:18,511 - INFO - Processing: https://www.d365stuff.co/customdataentityopeninexcel/
2025-05-26 11:53:18,511 - INFO - HTML file already exists for https://www.d365stuff.co/customdataentityopeninexcel/, reading from disk
2025-05-26 11:53:18,517 - INFO - Saved to: posts/customdataentityopeninexcel.md
2025-05-26 11:53:18,561 - INFO - Saved to: posts_markitdown/customdataentityopeninexcel.md
2025-05-26 11:53:18,561 - INFO - Processing: https://www.d365stuff.co/best-stuff/
2025-05-26 11:53:18,561 - INFO - HTML file already exists for https://www.d365stuff.co/best-stuff/, reading from disk
2025-05-26 11:53:18,569 - INFO - Saved to: posts/best-stuff.md
2025-05-26 11:53:18,616 - INFO - Saved to: posts_markitdown/best-stuff.md
2025-05-26 11:53:18,616 - INFO - Processing: https://www.d365stuff.co/dmfutil-dmfdownloaddatapackage/
2025-05-26 11:53:18,616 - INFO - HTML file already exists for https://www.d365stuff.co/dmfutil-dmfdownloaddatapackage/, reading from disk
2025-05-26 11:53:18,624 - INFO - Saved to: posts/dmfutil-dmfdownloaddatapackage.md
2025-05-26 11:53:18,673 - INFO - Saved to: posts_markitdown/dmfutil-dmfdownloaddatapackage.md
2025-05-26 11:53:18,673 - INFO - Processing: https://www.d365stuff.co/x-in-clause/
2025-05-26 11:53:18,673 - INFO - HTML file already exists for https://www.d365stuff.co/x-in-clause/, reading from disk
2025-05-26 11:53:18,680 - INFO - Saved to: posts/x-in-clause.md
2025-05-26 11:53:18,724 - INFO - Saved to: posts_markitdown/x-in-clause.md
2025-05-26 11:53:18,724 - INFO - Processing: https://www.d365stuff.co/dmf-jumpref/
2025-05-26 11:53:18,724 - INFO - HTML file already exists for https://www.d365stuff.co/dmf-jumpref/, reading from disk
2025-05-26 11:53:18,731 - INFO - Saved to: posts/dmf-jumpref.md
2025-05-26 11:53:18,779 - INFO - Saved to: posts_markitdown/dmf-jumpref.md
2025-05-26 11:53:18,779 - INFO - Processing: https://www.d365stuff.co/update-defaultdimension/
2025-05-26 11:53:18,779 - INFO - HTML file already exists for https://www.d365stuff.co/update-defaultdimension/, reading from disk
2025-05-26 11:53:18,785 - INFO - Saved to: posts/update-defaultdimension.md
2025-05-26 11:53:18,829 - INFO - Saved to: posts_markitdown/update-defaultdimension.md
2025-05-26 11:53:18,829 - INFO - Processing: https://www.d365stuff.co/update_recordset-but-cross-company/
2025-05-26 11:53:18,829 - INFO - HTML file already exists for https://www.d365stuff.co/update_recordset-but-cross-company/, reading from disk
2025-05-26 11:53:18,839 - INFO - Saved to: posts/update_recordset-but-cross-company.md
2025-05-26 11:53:18,884 - INFO - Saved to: posts_markitdown/update_recordset-but-cross-company.md
2025-05-26 11:53:18,884 - INFO - Processing: https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/
2025-05-26 11:53:18,884 - INFO - HTML file already exists for https://www.d365stuff.co/dmfdatapopulation-download-recurring-files/, reading from disk
2025-05-26 11:53:18,892 - INFO - Saved to: posts/dmfdatapopulation-download-recurring-files.md
2025-05-26 11:53:18,934 - INFO - Saved to: posts_markitdown/dmfdatapopulation-download-recurring-files.md
2025-05-26 11:53:18,934 - INFO - Processing: https://www.d365stuff.co/formjsonserializer/
2025-05-26 11:53:18,934 - INFO - HTML file already exists for https://www.d365stuff.co/formjsonserializer/, reading from disk
2025-05-26 11:53:18,945 - INFO - Saved to: posts/formjsonserializer.md
2025-05-26 11:53:18,983 - INFO - Saved to: posts_markitdown/formjsonserializer.md
2025-05-26 11:53:18,983 - INFO - Processing: https://www.d365stuff.co/d365-address-books/
2025-05-26 11:53:18,983 - INFO - HTML file already exists for https://www.d365stuff.co/d365-address-books/, reading from disk
2025-05-26 11:53:18,992 - INFO - Saved to: posts/d365-address-books.md
2025-05-26 11:53:19,034 - INFO - Saved to: posts_markitdown/d365-address-books.md
2025-05-26 11:53:19,034 - INFO - Processing: https://www.d365stuff.co/one/
2025-05-26 11:53:19,034 - INFO - HTML file already exists for https://www.d365stuff.co/one/, reading from disk
2025-05-26 11:53:19,040 - INFO - Saved to: posts/one.md
2025-05-26 11:53:19,086 - INFO - Saved to: posts_markitdown/one.md
2025-05-26 11:53:19,086 - INFO - Download process completed!
2025-05-26 14:27:48,536 - INFO - Use pytorch device_name: cuda:0
2025-05-26 14:27:48,537 - INFO - Load pretrained SentenceTransformer: Snowflake/snowflake-arctic-embed-l-v2.0
2025-05-26 14:27:51,537 - INFO - 1 prompts are loaded, with the keys: ['query']
2025-05-26 14:29:54,678 - INFO - Use pytorch device_name: cuda:0
2025-05-26 14:29:54,678 - INFO - Load pretrained SentenceTransformer: Snowflake/snowflake-arctic-embed-l-v2.0
2025-05-26 14:29:57,064 - INFO - 1 prompts are loaded, with the keys: ['query']
